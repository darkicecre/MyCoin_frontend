{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/dashboard/analytics/IncomeChart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // material-ui\n\nimport { useTheme } from '@mui/material/styles'; // project import\n\nimport useConfig from 'hooks/useConfig'; // third-party\n\nimport ReactApexChart from 'react-apexcharts'; // chart options\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst areaChartOptions = {\n  chart: {\n    height: 355,\n    type: 'area',\n    toolbar: {\n      show: false\n    }\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 1,\n      type: 'vertical',\n      inverseColors: false,\n      opacityFrom: 0.5,\n      opacityTo: 0\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'straight',\n    width: 1\n  },\n  grid: {\n    show: true,\n    borderColor: '#90A4AE',\n    strokeDashArray: 0,\n    position: 'back',\n    xaxis: {\n      lines: {\n        show: true\n      }\n    },\n    yaxis: {\n      lines: {\n        show: true\n      }\n    }\n  }\n}; // ==============================|| INCOME LINE CHART ||============================== //\n\nconst IncomeAreaChart = _ref => {\n  _s();\n\n  let {\n    slot,\n    quantity\n  } = _ref;\n  const theme = useTheme();\n  const {\n    mode\n  } = useConfig();\n  const {\n    primary,\n    secondary\n  } = theme.palette.text;\n  const line = theme.palette.divider;\n  const [options, setOptions] = useState(areaChartOptions);\n  useEffect(() => {\n    setOptions(prevState => ({ ...prevState,\n      colors: [theme.palette.primary.main, theme.palette.primary[700]],\n      xaxis: {\n        categories: slot === 'month' ? ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'] : ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        labels: {\n          style: {\n            colors: [secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary]\n          }\n        },\n        axisBorder: {\n          show: true,\n          color: line\n        },\n        tickAmount: slot === 'month' ? 11 : 7\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: [secondary]\n          }\n        }\n      },\n      grid: {\n        borderColor: line\n      },\n      tooltip: {\n        theme: mode === 'dark' ? 'dark' : 'light',\n        y: {\n          formatter(val) {\n            return `$ ${val}`;\n          }\n\n        }\n      }\n    }));\n  }, [mode, primary, secondary, line, theme, slot]);\n  const [series, setSeries] = useState([{\n    name: 'Income',\n    data: [0, 86, 28, 115, 48, 210, 136]\n  }]);\n  useEffect(() => {\n    switch (quantity) {\n      case 'By volume':\n        setSeries([{\n          name: 'Income',\n          data: slot === 'month' ? [100, 40, 60, 40, 40, 40, 80, 40, 40, 50, 40, 40] : [100, 20, 60, 20, 20, 80, 20]\n        }]);\n        break;\n\n      case 'By margin':\n        setSeries([{\n          name: 'Income',\n          data: slot === 'month' ? [120, 85, 101, 98, 87, 105, 91, 114, 94, 86, 115, 35] : [51, 40, 28, 51, 42, 109, 100]\n        }]);\n        break;\n\n      case 'By sales':\n        setSeries([{\n          name: 'Income',\n          data: slot === 'month' ? [90, 85, 101, 98, 87, 105, 91, 114, 94, 86, 115, 35] : [21, 40, 28, 51, 42, 109, 100]\n        }]);\n        break;\n\n      default:\n        break;\n    }\n  }, [slot, quantity]);\n  return /*#__PURE__*/_jsxDEV(ReactApexChart, {\n    options: options,\n    series: series,\n    type: \"area\",\n    height: 355\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 10\n  }, this);\n};\n\n_s(IncomeAreaChart, \"DGhLzMHO7H2R7n48U98qaeiMrCQ=\", false, function () {\n  return [useTheme, useConfig];\n});\n\n_c = IncomeAreaChart;\nexport default IncomeAreaChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"IncomeAreaChart\");","map":{"version":3,"names":["useState","useEffect","useTheme","useConfig","ReactApexChart","areaChartOptions","chart","height","type","toolbar","show","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","dataLabels","enabled","stroke","curve","width","grid","borderColor","strokeDashArray","position","xaxis","lines","yaxis","IncomeAreaChart","slot","quantity","theme","mode","primary","secondary","palette","text","line","divider","options","setOptions","prevState","colors","main","categories","labels","style","axisBorder","color","tickAmount","tooltip","y","formatter","val","series","setSeries","name","data"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/dashboard/analytics/IncomeChart.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\n\n// project import\nimport useConfig from 'hooks/useConfig';\n\n// third-party\nimport ReactApexChart, { Props as ChartProps } from 'react-apexcharts';\n\n// chart options\nconst areaChartOptions = {\n  chart: {\n    height: 355,\n    type: 'area',\n    toolbar: {\n      show: false\n    }\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 1,\n      type: 'vertical',\n      inverseColors: false,\n      opacityFrom: 0.5,\n      opacityTo: 0\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'straight',\n    width: 1\n  },\n  grid: {\n    show: true,\n    borderColor: '#90A4AE',\n    strokeDashArray: 0,\n    position: 'back',\n    xaxis: {\n      lines: {\n        show: true\n      }\n    },\n    yaxis: {\n      lines: {\n        show: true\n      }\n    }\n  }\n};\n\n// ==============================|| INCOME LINE CHART ||============================== //\n\ninterface Props {\n  slot: string;\n  quantity: any;\n}\n\nconst IncomeAreaChart = ({ slot, quantity }: Props) => {\n  const theme = useTheme();\n  const { mode } = useConfig();\n\n  const { primary, secondary } = theme.palette.text;\n  const line = theme.palette.divider;\n\n  const [options, setOptions] = useState<ChartProps>(areaChartOptions);\n\n  useEffect(() => {\n    setOptions((prevState) => ({\n      ...prevState,\n      colors: [theme.palette.primary.main, theme.palette.primary[700]],\n      xaxis: {\n        categories:\n          slot === 'month'\n            ? ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n            : ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        labels: {\n          style: {\n            colors: [\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary\n            ]\n          }\n        },\n        axisBorder: {\n          show: true,\n          color: line\n        },\n        tickAmount: slot === 'month' ? 11 : 7\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: [secondary]\n          }\n        }\n      },\n      grid: {\n        borderColor: line\n      },\n      tooltip: {\n        theme: mode === 'dark' ? 'dark' : 'light',\n        y: {\n          formatter(val: number) {\n            return `$ ${val}`;\n          }\n        }\n      }\n    }));\n  }, [mode, primary, secondary, line, theme, slot]);\n\n  const [series, setSeries] = useState([\n    {\n      name: 'Income',\n      data: [0, 86, 28, 115, 48, 210, 136]\n    }\n  ]);\n\n  useEffect(() => {\n    switch (quantity) {\n      case 'By volume':\n        setSeries([\n          {\n            name: 'Income',\n            data: slot === 'month' ? [100, 40, 60, 40, 40, 40, 80, 40, 40, 50, 40, 40] : [100, 20, 60, 20, 20, 80, 20]\n          }\n        ]);\n        break;\n\n      case 'By margin':\n        setSeries([\n          {\n            name: 'Income',\n            data: slot === 'month' ? [120, 85, 101, 98, 87, 105, 91, 114, 94, 86, 115, 35] : [51, 40, 28, 51, 42, 109, 100]\n          }\n        ]);\n        break;\n      case 'By sales':\n        setSeries([\n          {\n            name: 'Income',\n            data: slot === 'month' ? [90, 85, 101, 98, 87, 105, 91, 114, 94, 86, 115, 35] : [21, 40, 28, 51, 42, 109, 100]\n          }\n        ]);\n        break;\n      default:\n        break;\n    }\n  }, [slot, quantity]);\n\n  return <ReactApexChart options={options} series={series} type=\"area\" height={355} />;\n};\n\nexport default IncomeAreaChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}