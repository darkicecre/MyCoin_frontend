{"ast":null,"code":"// third-party\nimport { sub } from 'date-fns';\nimport { Chance } from 'chance';\nimport lodash from 'lodash';\nconst chance = new Chance();\nexport const range = len => {\n  const arr = [];\n\n  for (let i = 0; i < len; i += 1) {\n    arr.push(i);\n  }\n\n  return arr;\n};\nconst skills = ['UI Design', 'Mobile App', 'Web App', 'UX', 'Wireframing', 'Prototyping', 'Backend', 'React', 'Angular', 'Javascript', 'HTML', 'ES6', 'Figma', 'Codeigniter'];\nconst time = ['just now', '1 day ago', '2 min ago', '2 days ago', '1 week ago', '1 year ago', '5 months ago', '3 hours ago', '1 hour ago'];\n\nfunction mockData(index) {\n  return {\n    id: index => `${chance.bb_pin()}${index}`,\n    email: chance.email({\n      domain: 'gmail.com'\n    }),\n    contact: chance.phone(),\n    datetime: sub(new Date(), {\n      days: chance.integer({\n        min: 0,\n        max: 30\n      }),\n      hours: chance.integer({\n        min: 0,\n        max: 23\n      }),\n      minutes: chance.integer({\n        min: 0,\n        max: 59\n      })\n    }),\n    boolean: chance.bool(),\n    role: chance.profession(),\n    company: chance.company(),\n    address: {\n      full: `${chance.address()}, ${chance.city()}, ${chance.country({\n        full: true\n      })} - ${chance.zip()}`,\n      country: chance.country({\n        full: true\n      })\n    },\n    name: {\n      first: chance.first(),\n      last: chance.last(),\n      full: chance.name()\n    },\n    text: {\n      title: chance.sentence({\n        words: chance.integer({\n          min: 4,\n          max: 12\n        })\n      }),\n      sentence: chance.sentence(),\n      description: chance.paragraph\n    },\n    number: {\n      percentage: chance.integer({\n        min: 0,\n        max: 100\n      }),\n      rating: chance.floating({\n        min: 0,\n        max: 5,\n        fixed: 2\n      }),\n      status: (min, max) => chance.integer({\n        min,\n        max\n      }),\n      age: chance.age(),\n      amount: chance.integer({\n        min: 1,\n        max: 10000\n      })\n    },\n    image: {\n      product: index => `product_${index}`,\n      avatar: index => `avatar_${index}`\n    },\n    skill: lodash.sampleSize(skills, chance.integer({\n      min: 2,\n      max: 6\n    })),\n    time: lodash.sampleSize(time)\n  };\n}\n\nexport default mockData;","map":{"version":3,"names":["sub","Chance","lodash","chance","range","len","arr","i","push","skills","time","mockData","index","id","bb_pin","email","domain","contact","phone","datetime","Date","days","integer","min","max","hours","minutes","boolean","bool","role","profession","company","address","full","city","country","zip","name","first","last","text","title","sentence","words","description","paragraph","number","percentage","rating","floating","fixed","status","age","amount","image","product","avatar","skill","sampleSize"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/utils/mock-data.ts"],"sourcesContent":["// third-party\nimport { sub } from 'date-fns';\nimport { Chance } from 'chance';\nimport lodash from 'lodash';\n\nconst chance = new Chance();\n\nexport const range = (len: number) => {\n  const arr = [];\n  for (let i = 0; i < len; i += 1) {\n    arr.push(i);\n  }\n  return arr;\n};\n\nconst skills = [\n  'UI Design',\n  'Mobile App',\n  'Web App',\n  'UX',\n  'Wireframing',\n  'Prototyping',\n  'Backend',\n  'React',\n  'Angular',\n  'Javascript',\n  'HTML',\n  'ES6',\n  'Figma',\n  'Codeigniter'\n];\n\nconst time = ['just now', '1 day ago', '2 min ago', '2 days ago', '1 week ago', '1 year ago', '5 months ago', '3 hours ago', '1 hour ago'];\n\nfunction mockData(index: number) {\n  return {\n    id: (index: number) => `${chance.bb_pin()}${index}`,\n    email: chance.email({ domain: 'gmail.com' }),\n    contact: chance.phone(),\n    datetime: sub(new Date(), {\n      days: chance.integer({ min: 0, max: 30 }),\n      hours: chance.integer({ min: 0, max: 23 }),\n      minutes: chance.integer({ min: 0, max: 59 })\n    }),\n    boolean: chance.bool(),\n    role: chance.profession(),\n    company: chance.company(),\n    address: {\n      full: `${chance.address()}, ${chance.city()}, ${chance.country({ full: true })} - ${chance.zip()}`,\n      country: chance.country({ full: true })\n    },\n    name: {\n      first: chance.first(),\n      last: chance.last(),\n      full: chance.name()\n    },\n    text: {\n      title: chance.sentence({ words: chance.integer({ min: 4, max: 12 }) }),\n      sentence: chance.sentence(),\n      description: chance.paragraph\n    },\n    number: {\n      percentage: chance.integer({ min: 0, max: 100 }),\n      rating: chance.floating({ min: 0, max: 5, fixed: 2 }),\n      status: (min: number, max: number) => chance.integer({ min, max }),\n      age: chance.age(),\n      amount: chance.integer({ min: 1, max: 10000 })\n    },\n    image: {\n      product: (index: number) => `product_${index}`,\n      avatar: (index: number) => `avatar_${index}`\n    },\n    skill: lodash.sampleSize(skills, chance.integer({ min: 2, max: 6 })),\n    time: lodash.sampleSize(time)\n  };\n}\n\nexport default mockData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}