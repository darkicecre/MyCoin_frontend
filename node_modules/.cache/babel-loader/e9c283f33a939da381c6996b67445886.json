{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nclass NativeDragSource {\n  initializeExposedProperties() {\n    Object.keys(this.config.exposeProperties).forEach(property => {\n      Object.defineProperty(this.item, property, {\n        configurable: true,\n        enumerable: true,\n\n        get() {\n          // eslint-disable-next-line no-console\n          console.warn(`Browser doesn't allow reading \"${property}\" until the drop event.`);\n          return null;\n        }\n\n      });\n    });\n  }\n\n  loadDataTransfer(dataTransfer) {\n    if (dataTransfer) {\n      const newProperties = {};\n      Object.keys(this.config.exposeProperties).forEach(property => {\n        const propertyFn = this.config.exposeProperties[property];\n\n        if (propertyFn != null) {\n          newProperties[property] = {\n            value: propertyFn(dataTransfer, this.config.matchesTypes),\n            configurable: true,\n            enumerable: true\n          };\n        }\n      });\n      Object.defineProperties(this.item, newProperties);\n    }\n  }\n\n  canDrag() {\n    return true;\n  }\n\n  beginDrag() {\n    return this.item;\n  }\n\n  isDragging(monitor, handle) {\n    return handle === monitor.getSourceId();\n  }\n\n  endDrag() {// empty\n  }\n\n  constructor(config) {\n    this.config = config;\n    this.item = {};\n    this.initializeExposedProperties();\n  }\n\n}\n\nexports.NativeDragSource = NativeDragSource;","map":{"version":3,"mappings":";;;;;;MAGaA,iBAAgB;EAUpBC,2BAA2B,GAAG;IACrCC,MAAM,CAACC,IAAPD,CAAY,KAAKE,MAAL,CAAYC,gBAAxBH,EAA0CI,OAA1CJ,CAAmDK,QAAF,IAAe;MAC/DL,MAAM,CAACM,cAAPN,CAAsB,KAAKO,IAA3BP,EAAiCK,QAAjCL,EAA2C;QAC1CQ,YAAY,EAAE,IAD4B;QAE1CC,UAAU,EAAE,IAF8B;;QAG1CC,GAAG,GAAG;UACL;UACAC,OAAO,CAACC,IAARD,CACE,kCAAiCN,QAAS,yBAD5CM;UAGA,OAAO,IAAP;QACA;;MATyC,CAA3CX;IAWA,CAZDA;EAaA;;EAEMa,gBAAgB,CAACC,YAAD,EAAsD;IAC5E,IAAIA,YAAJ,EAAkB;MACjB,MAAMC,aAAa,GAA0B,EAA7C;MACAf,MAAM,CAACC,IAAPD,CAAY,KAAKE,MAAL,CAAYC,gBAAxBH,EAA0CI,OAA1CJ,CAAmDK,QAAF,IAAe;QAC/D,MAAMW,UAAU,GAAG,KAAKd,MAAL,CAAYC,gBAAZ,CAA6BE,QAA7B,CAAnB;;QACA,IAAIW,UAAU,IAAI,IAAlB,EAAwB;UACvBD,aAAa,CAACV,QAAD,CAAbU,GAA0B;YACzBE,KAAK,EAAED,UAAU,CAACF,YAAD,EAAe,KAAKZ,MAAL,CAAYgB,YAA3B,CADQ;YAEzBV,YAAY,EAAE,IAFW;YAGzBC,UAAU,EAAE;UAHa,CAA1BM;QAKA;MACD,CATDf;MAUAA,MAAM,CAACmB,gBAAPnB,CAAwB,KAAKO,IAA7BP,EAAmCe,aAAnCf;IACA;EACD;;EAEMoB,OAAO,GAAY;IACzB,OAAO,IAAP;EACA;;EAEMC,SAAS,GAAQ;IACvB,OAAO,KAAKd,IAAZ;EACA;;EAEMe,UAAU,CAACC,OAAD,EAA2BC,MAA3B,EAAoD;IACpE,OAAOA,MAAM,KAAKD,OAAO,CAACE,WAARF,EAAlB;EACA;;EAEMG,OAAO,GAAS,CACtB;EACA;;cArDkBxB,QAA0B;IAC5C,KAAKA,MAAL,GAAcA,MAAd;IACA,KAAKK,IAAL,GAAY,EAAZ;IACA,KAAKR,2BAAL;EACA;;AAR2B;;QAAhBD","names":["NativeDragSource","initializeExposedProperties","Object","keys","config","exposeProperties","forEach","property","defineProperty","item","configurable","enumerable","get","console","warn","loadDataTransfer","dataTransfer","newProperties","propertyFn","value","matchesTypes","defineProperties","canDrag","beginDrag","isDragging","monitor","handle","getSourceId","endDrag"],"sources":["../../../src/NativeDragSources/NativeDragSource.ts"],"sourcesContent":["import type { NativeItemConfig } from './nativeTypesConfig.js'\nimport type { DragDropMonitor } from 'dnd-core'\n\nexport class NativeDragSource {\n\tpublic item: any\n\tprivate config: NativeItemConfig\n\n\tpublic constructor(config: NativeItemConfig) {\n\t\tthis.config = config\n\t\tthis.item = {}\n\t\tthis.initializeExposedProperties()\n\t}\n\n\tprivate initializeExposedProperties() {\n\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\tObject.defineProperty(this.item, property, {\n\t\t\t\tconfigurable: true, // This is needed to allow redefining it later\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Browser doesn't allow reading \"${property}\" until the drop event.`,\n\t\t\t\t\t)\n\t\t\t\t\treturn null\n\t\t\t\t},\n\t\t\t})\n\t\t})\n\t}\n\n\tpublic loadDataTransfer(dataTransfer: DataTransfer | null | undefined): void {\n\t\tif (dataTransfer) {\n\t\t\tconst newProperties: PropertyDescriptorMap = {}\n\t\t\tObject.keys(this.config.exposeProperties).forEach((property) => {\n\t\t\t\tconst propertyFn = this.config.exposeProperties[property]\n\t\t\t\tif (propertyFn != null) {\n\t\t\t\t\tnewProperties[property] = {\n\t\t\t\t\t\tvalue: propertyFn(dataTransfer, this.config.matchesTypes),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tObject.defineProperties(this.item, newProperties)\n\t\t}\n\t}\n\n\tpublic canDrag(): boolean {\n\t\treturn true\n\t}\n\n\tpublic beginDrag(): any {\n\t\treturn this.item\n\t}\n\n\tpublic isDragging(monitor: DragDropMonitor, handle: string): boolean {\n\t\treturn handle === monitor.getSourceId()\n\t}\n\n\tpublic endDrag(): void {\n\t\t// empty\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}