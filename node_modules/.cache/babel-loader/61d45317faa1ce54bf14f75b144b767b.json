{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/pages/tables/react-table/umbrella.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useEffect, useMemo } from 'react'; // material-ui\n\nimport { alpha, useTheme } from '@mui/material/styles';\nimport { Box, Chip, Stack, Table, TableBody, TableCell, TableFooter, TableHead, TableRow, Typography } from '@mui/material'; // third-party\n\nimport NumberFormat from 'react-number-format';\nimport update from 'immutability-helper';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { useColumnOrder, useExpanded, useFilters, useGroupBy, useGlobalFilter, usePagination, useRowSelect, useSortBy, useTable } from 'react-table'; // project import\n\nimport MainCard from 'components/MainCard';\nimport Avatar from 'components/@extended/Avatar';\nimport ScrollX from 'components/ScrollX';\nimport LinearWithLabel from 'components/@extended/Progress/LinearWithLabel';\nimport makeData from 'data/react-table';\nimport SyntaxHighlight from 'utils/SyntaxHighlight';\nimport { DraggableHeader, DragPreview, HidingSelect, HeaderSort, IndeterminateCheckbox, TablePagination, TableRowSelection } from 'components/third-party/ReactTable';\nimport { roundedMedian, renderFilterTypes, filterGreaterThan, GlobalFilter, DefaultColumnFilter, SelectColumnFilter, SliderColumnFilter, NumberRangeColumnFilter } from 'utils/react-table'; // assets\n\nimport { DownOutlined, GroupOutlined, RightOutlined, UngroupOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst avatarImage = require.context('assets/images/users', true); // ==============================|| REACT TABLE ||============================== //\n\n\nfunction ReactTable(_ref) {\n  _s();\n\n  let {\n    columns,\n    data\n  } = _ref;\n  const theme = useTheme();\n  const filterTypes = useMemo(() => renderFilterTypes, []);\n  const defaultColumn = useMemo(() => ({\n    Filter: DefaultColumnFilter\n  }), []);\n  const initialState = useMemo(() => ({\n    filters: [{\n      id: 'status',\n      value: ''\n    }],\n    hiddenColumns: ['id', 'role', 'contact', 'country', 'fatherName'],\n    columnOrder: ['selection', 'avatar', 'firstName', 'lastName', 'email', 'age', 'visits', 'status', 'progress'],\n    pageIndex: 0,\n    pageSize: 10\n  }), []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    // @ts-ignore\n    page,\n    prepareRow,\n    // @ts-ignore\n    setColumnOrder,\n    // @ts-ignore\n    gotoPage,\n    // @ts-ignore\n    setPageSize,\n    setHiddenColumns,\n    allColumns,\n    visibleColumns,\n    // @ts-ignore\n    state: {\n      globalFilter,\n      hiddenColumns,\n      pageIndex,\n      pageSize,\n      columnOrder,\n      selectedRowIds\n    },\n    // @ts-ignore\n    preGlobalFilteredRows,\n    // @ts-ignore\n    setGlobalFilter,\n    // @ts-ignore\n    selectedFlatRows\n  } = useTable({\n    columns,\n    data,\n    // @ts-ignore\n    defaultColumn,\n    // @ts-ignore\n    initialState,\n    filterTypes\n  }, useGlobalFilter, useFilters, useColumnOrder, useGroupBy, useSortBy, useExpanded, usePagination, useRowSelect);\n\n  const reorder = (item, newIndex) => {\n    const {\n      index: currentIndex\n    } = item;\n    const dragRecord = columnOrder[currentIndex];\n    setColumnOrder(update(columnOrder, {\n      $splice: [[currentIndex, 1], [newIndex, 0, dragRecord]]\n    }));\n  };\n\n  useEffect(() => {\n    // @ts-ignore\n    const newColumnOrder = visibleColumns.map(column => column.id);\n    setColumnOrder(newColumnOrder); // eslint-disable-next-line\n  }, [hiddenColumns]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRowSelection, {\n      selected: Object.keys(selectedRowIds).length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        justifyContent: \"space-between\",\n        sx: {\n          p: 2,\n          pb: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(GlobalFilter, {\n          preGlobalFilteredRows: preGlobalFilteredRows,\n          globalFilter: globalFilter,\n          setGlobalFilter: setGlobalFilter,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HidingSelect, {\n          hiddenColumns: hiddenColumns,\n          setHiddenColumns: setHiddenColumns,\n          allColumns: allColumns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%',\n          overflowX: 'auto',\n          display: 'block'\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            sx: {\n              borderTopWidth: 2\n            },\n            children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(TableRow, { ...headerGroup.getHeaderGroupProps(),\n              children: headerGroup.headers.map((column, index) => {\n                const groupIcon = column.isGrouped ? /*#__PURE__*/_jsxDEV(UngroupOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 58\n                }, this) : /*#__PURE__*/_jsxDEV(GroupOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 80\n                }, this);\n                return /*#__PURE__*/_jsxDEV(TableCell, { ...column.getHeaderProps([{\n                    className: column.className\n                  }]),\n                  children: /*#__PURE__*/_jsxDEV(DraggableHeader, {\n                    reorder: reorder,\n                    column: column,\n                    index: index,\n                    children: /*#__PURE__*/_jsxDEV(Stack, {\n                      direction: \"row\",\n                      spacing: 1.15,\n                      alignItems: \"center\",\n                      sx: {\n                        display: 'inline-flex'\n                      },\n                      children: [column.canGroupBy ? /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          color: column.isGrouped ? 'error.main' : 'primary.main',\n                          fontSize: '1rem'\n                        },\n                        ...column.getGroupByToggleProps(),\n                        children: groupIcon\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 31\n                      }, this) : null, /*#__PURE__*/_jsxDEV(HeaderSort, {\n                        column: column,\n                        sort: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 27\n                    }, this)\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 25\n                  }, this)\n                }, `umbrella-header-cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, { ...getTableBodyProps(),\n            className: \"striped\",\n            children: [headerGroups.map(group => /*#__PURE__*/_jsxDEV(TableRow, { ...group.getHeaderGroupProps(),\n              children: group.headers.map(column => /*#__PURE__*/_jsxDEV(TableCell, { ...column.getHeaderProps([{\n                  className: column.className\n                }]),\n                children: column.canFilter ? column.render('Filter') : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)), page.map((row, i) => {\n              prepareRow(row);\n              return /*#__PURE__*/_jsxDEV(TableRow, { ...row.getRowProps(),\n                onClick: () => {\n                  row.toggleRowSelected();\n                },\n                sx: {\n                  cursor: 'pointer',\n                  bgcolor: row.isSelected ? alpha(theme.palette.primary.lighter, 0.35) : 'inherit'\n                },\n                children: row.cells.map(cell => {\n                  let bgcolor = 'inherit';\n                  if (cell.isGrouped) bgcolor = 'success.lighter';\n                  if (cell.isAggregated) bgcolor = 'warning.lighter';\n                  if (cell.isPlaceholder) bgcolor = 'error.lighter';\n                  if (cell.isPlaceholder) bgcolor = 'error.lighter';\n                  if (row.isSelected) bgcolor = alpha(theme.palette.primary.lighter, 0.35);\n                  const collapseIcon = row.isExpanded ? /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 61\n                  }, this) : /*#__PURE__*/_jsxDEV(RightOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 80\n                  }, this);\n                  return /*#__PURE__*/_jsxDEV(TableCell, { ...cell.getCellProps([{\n                      className: cell.column.className\n                    }]),\n                    sx: {\n                      bgcolor\n                    },\n                    children: cell.isGrouped ? /*#__PURE__*/_jsxDEV(Stack, {\n                      direction: \"row\",\n                      spacing: 1,\n                      alignItems: \"center\",\n                      sx: {\n                        display: 'inline-flex'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          pr: 1.25,\n                          fontSize: '0.75rem',\n                          color: 'text.secondary'\n                        },\n                        onClick: e => {\n                          row.toggleRowExpanded();\n                          e.stopPropagation();\n                        },\n                        children: collapseIcon\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 31\n                      }, this), cell.render('Cell'), \" (\", row.subRows.length, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 29\n                    }, this) : // eslint-disable-next-line\n                    cell.isAggregated ? cell.render('Aggregated') : cell.isPlaceholder ? null : cell.render('Cell')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n            sx: {\n              borderBottomWidth: 2\n            },\n            children: footerGroups.map(group => /*#__PURE__*/_jsxDEV(TableRow, { ...group.getFooterGroupProps(),\n              children: group.headers.map(column => /*#__PURE__*/_jsxDEV(TableCell, { ...column.getFooterProps([{\n                  className: column.className\n                }]),\n                children: column.render('Footer')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          py: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(TablePagination, {\n          gotoPage: gotoPage,\n          rows: rows,\n          setPageSize: setPageSize,\n          pageIndex: pageIndex,\n          pageSize: pageSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlight, {\n        children: JSON.stringify({\n          selectedRowIndices: selectedRowIds,\n          'selectedFlatRows[].original': selectedFlatRows.map(d => d.original)\n        }, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // ==============================|| REACT TABLE - UMBRELLA ||============================== //\n\n\n_s(ReactTable, \"PseP5BIQJiSeEEUR3q6s02QdipM=\", false, function () {\n  return [useTheme, useTable];\n});\n\n_c = ReactTable;\n\nconst UmbrellaTable = () => {\n  _s3();\n\n  const data = useMemo(() => makeData(200), []);\n  const columns = useMemo(() => {\n    var _s2 = $RefreshSig$();\n\n    return [{\n      title: 'Row Selection',\n      Header: _ref2 => {\n        let {\n          getToggleAllPageRowsSelectedProps\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, {\n          indeterminate: true,\n          ...getToggleAllPageRowsSelectedProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this);\n      },\n      Footer: '#',\n      accessor: 'selection',\n      Cell: _ref3 => {\n        let {\n          row\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...row.getToggleRowSelectedProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 33\n        }, this);\n      },\n      disableSortBy: true,\n      disableFilters: true,\n      disableGroupBy: true,\n      Aggregated: () => null\n    }, {\n      Header: '#',\n      Footer: '#',\n      accessor: 'id',\n      className: 'cell-center',\n      disableFilters: true,\n      disableGroupBy: true\n    }, {\n      Header: 'Avatar',\n      Footer: 'Avatar',\n      accessor: 'avatar',\n      className: 'cell-center',\n      disableFilters: true,\n      disableGroupBy: true,\n      Cell: _ref4 => {\n        let {\n          value\n        } = _ref4;\n        return /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"Avatar 1\",\n          size: \"sm\",\n          src: avatarImage(`./avatar-${!value ? 1 : value}.png`).default\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 35\n        }, this);\n      }\n    }, {\n      Header: 'First Name',\n      Footer: 'First Name',\n      accessor: 'firstName',\n      disableGroupBy: true,\n      aggregate: 'count',\n      Aggregated: _ref5 => {\n        let {\n          value\n        } = _ref5;\n        return `${value} Person`;\n      }\n    }, {\n      Header: 'Last Name',\n      Footer: 'Last Name',\n      accessor: 'lastName',\n      filter: 'fuzzyText',\n      disableGroupBy: true\n    }, {\n      Header: 'Father Name',\n      Footer: 'Father Name',\n      accessor: 'fatherName',\n      disableGroupBy: true\n    }, {\n      Header: 'Email',\n      Footer: 'Email',\n      accessor: 'email',\n      disableGroupBy: true\n    }, {\n      Header: 'Age',\n      Footer: 'Age',\n      accessor: 'age',\n      className: 'cell-right',\n      Filter: SliderColumnFilter,\n      filter: 'equals',\n      aggregate: 'average',\n      Aggregated: _ref6 => {\n        let {\n          value\n        } = _ref6;\n        return `${Math.round(value * 100) / 100} (avg)`;\n      }\n    }, {\n      Header: 'Role',\n      Footer: 'Role',\n      accessor: 'role',\n      disableGroupBy: true\n    }, {\n      Header: 'Contact',\n      Footer: 'Contact',\n      accessor: 'contact',\n      disableGroupBy: true\n    }, {\n      Header: 'Country',\n      Footer: 'Country',\n      accessor: 'country',\n      disableGroupBy: true\n    }, {\n      Header: 'Visits',\n      accessor: 'visits',\n      className: 'cell-right',\n      Filter: NumberRangeColumnFilter,\n      filter: 'between',\n      disableGroupBy: true,\n      aggregate: 'sum',\n      Aggregated: _ref7 => {\n        let {\n          value\n        } = _ref7;\n        return `${value} (total)`;\n      },\n      Footer: _s2(info => {\n        _s2();\n\n        const {\n          rows\n        } = info; // only calculate total visits if rows change\n\n        const total = useMemo(() => rows.reduce((sum, row) => row.values.visits + sum, 0), [rows]);\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n            value: total,\n            displayType: \"text\",\n            thousandSeparator: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this);\n      }, \"TUahRIVHrNmruf3w2Blr6WVpjUQ=\")\n    }, {\n      Header: 'Status',\n      Footer: 'Status',\n      accessor: 'status',\n      Filter: SelectColumnFilter,\n      filter: 'includes',\n      Cell: _ref8 => {\n        let {\n          value\n        } = _ref8;\n\n        switch (value) {\n          case 'Complicated':\n            return /*#__PURE__*/_jsxDEV(Chip, {\n              color: \"error\",\n              label: \"Complicated\",\n              size: \"small\",\n              variant: \"light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 22\n            }, this);\n\n          case 'Relationship':\n            return /*#__PURE__*/_jsxDEV(Chip, {\n              color: \"success\",\n              label: \"Relationship\",\n              size: \"small\",\n              variant: \"light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 22\n            }, this);\n\n          case 'Single':\n          default:\n            return /*#__PURE__*/_jsxDEV(Chip, {\n              color: \"info\",\n              label: \"Single\",\n              size: \"small\",\n              variant: \"light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 22\n            }, this);\n        }\n      }\n    }, {\n      Header: 'Profile Progress',\n      Footer: 'Profile Progress',\n      accessor: 'progress',\n      Filter: SliderColumnFilter,\n      filter: filterGreaterThan,\n      disableGroupBy: true,\n      aggregate: roundedMedian,\n      Aggregated: _ref9 => {\n        let {\n          value\n        } = _ref9;\n        return `${value} (med)`;\n      },\n      Cell: _ref10 => {\n        let {\n          value\n        } = _ref10;\n        return /*#__PURE__*/_jsxDEV(LinearWithLabel, {\n          value: value,\n          sx: {\n            minWidth: 140\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 35\n        }, this);\n      }\n    }];\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"Umbrella Table\",\n    subheader: \"This page consist combination of most possible features of react-table in to one table. Sorting, grouping, row selection, hidden row, filter, search, pagination, footer row available in below table.\",\n    content: false,\n    children: /*#__PURE__*/_jsxDEV(ScrollX, {\n      children: /*#__PURE__*/_jsxDEV(DndProvider, {\n        backend: HTML5Backend,\n        children: [/*#__PURE__*/_jsxDEV(ReactTable, {\n          columns: columns,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DragPreview, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 423,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(UmbrellaTable, \"KHoHFC1MXL0JSWRk3ATtEB14X9c=\");\n\n_c2 = UmbrellaTable;\nexport default UmbrellaTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReactTable\");\n$RefreshReg$(_c2, \"UmbrellaTable\");","map":{"version":3,"names":["useEffect","useMemo","alpha","useTheme","Box","Chip","Stack","Table","TableBody","TableCell","TableFooter","TableHead","TableRow","Typography","NumberFormat","update","DndProvider","HTML5Backend","useColumnOrder","useExpanded","useFilters","useGroupBy","useGlobalFilter","usePagination","useRowSelect","useSortBy","useTable","MainCard","Avatar","ScrollX","LinearWithLabel","makeData","SyntaxHighlight","DraggableHeader","DragPreview","HidingSelect","HeaderSort","IndeterminateCheckbox","TablePagination","TableRowSelection","roundedMedian","renderFilterTypes","filterGreaterThan","GlobalFilter","DefaultColumnFilter","SelectColumnFilter","SliderColumnFilter","NumberRangeColumnFilter","DownOutlined","GroupOutlined","RightOutlined","UngroupOutlined","avatarImage","require","context","ReactTable","columns","data","theme","filterTypes","defaultColumn","Filter","initialState","filters","id","value","hiddenColumns","columnOrder","pageIndex","pageSize","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","page","prepareRow","setColumnOrder","gotoPage","setPageSize","setHiddenColumns","allColumns","visibleColumns","state","globalFilter","selectedRowIds","preGlobalFilteredRows","setGlobalFilter","selectedFlatRows","reorder","item","newIndex","index","currentIndex","dragRecord","$splice","newColumnOrder","map","column","Object","keys","length","p","pb","width","overflowX","display","borderTopWidth","headerGroup","getHeaderGroupProps","headers","groupIcon","isGrouped","getHeaderProps","className","canGroupBy","color","fontSize","getGroupByToggleProps","group","canFilter","render","row","i","getRowProps","toggleRowSelected","cursor","bgcolor","isSelected","palette","primary","lighter","cells","cell","isAggregated","isPlaceholder","collapseIcon","isExpanded","getCellProps","pr","e","toggleRowExpanded","stopPropagation","subRows","borderBottomWidth","getFooterGroupProps","getFooterProps","py","JSON","stringify","selectedRowIndices","d","original","UmbrellaTable","title","Header","getToggleAllPageRowsSelectedProps","Footer","accessor","Cell","getToggleRowSelectedProps","disableSortBy","disableFilters","disableGroupBy","Aggregated","default","aggregate","filter","Math","round","info","total","reduce","sum","values","visits","minWidth"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/pages/tables/react-table/umbrella.tsx"],"sourcesContent":["import { useEffect, useMemo } from 'react';\n\n// material-ui\nimport { alpha, useTheme } from '@mui/material/styles';\nimport { Box, Chip, Stack, Table, TableBody, TableCell, TableFooter, TableHead, TableRow, Typography } from '@mui/material';\n\n// third-party\nimport NumberFormat from 'react-number-format';\nimport update from 'immutability-helper';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport {\n  useColumnOrder,\n  useExpanded,\n  useFilters,\n  useGroupBy,\n  useGlobalFilter,\n  usePagination,\n  useRowSelect,\n  useSortBy,\n  useTable,\n  Column\n} from 'react-table';\n\n// project import\nimport MainCard from 'components/MainCard';\nimport Avatar from 'components/@extended/Avatar';\nimport ScrollX from 'components/ScrollX';\nimport LinearWithLabel from 'components/@extended/Progress/LinearWithLabel';\nimport makeData from 'data/react-table';\nimport SyntaxHighlight from 'utils/SyntaxHighlight';\nimport {\n  DraggableHeader,\n  DragPreview,\n  HidingSelect,\n  HeaderSort,\n  IndeterminateCheckbox,\n  TablePagination,\n  TableRowSelection\n} from 'components/third-party/ReactTable';\nimport {\n  roundedMedian,\n  renderFilterTypes,\n  filterGreaterThan,\n  GlobalFilter,\n  DefaultColumnFilter,\n  SelectColumnFilter,\n  SliderColumnFilter,\n  NumberRangeColumnFilter\n} from 'utils/react-table';\n\n// assets\nimport { DownOutlined, GroupOutlined, RightOutlined, UngroupOutlined } from '@ant-design/icons';\n\nconst avatarImage = require.context('assets/images/users', true);\n\n// ==============================|| REACT TABLE ||============================== //\n\nfunction ReactTable({ columns, data }: { columns: Column[]; data: [] }) {\n  const theme = useTheme();\n  const filterTypes = useMemo(() => renderFilterTypes, []);\n  const defaultColumn = useMemo(() => ({ Filter: DefaultColumnFilter }), []);\n  const initialState = useMemo(\n    () => ({\n      filters: [{ id: 'status', value: '' }],\n      hiddenColumns: ['id', 'role', 'contact', 'country', 'fatherName'],\n      columnOrder: ['selection', 'avatar', 'firstName', 'lastName', 'email', 'age', 'visits', 'status', 'progress'],\n      pageIndex: 0,\n      pageSize: 10\n    }),\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    // @ts-ignore\n    page,\n    prepareRow,\n    // @ts-ignore\n    setColumnOrder,\n    // @ts-ignore\n    gotoPage,\n    // @ts-ignore\n    setPageSize,\n    setHiddenColumns,\n    allColumns,\n    visibleColumns,\n    // @ts-ignore\n    state: { globalFilter, hiddenColumns, pageIndex, pageSize, columnOrder, selectedRowIds },\n    // @ts-ignore\n    preGlobalFilteredRows,\n    // @ts-ignore\n    setGlobalFilter,\n    // @ts-ignore\n    selectedFlatRows\n  } = useTable(\n    {\n      columns,\n      data,\n      // @ts-ignore\n      defaultColumn,\n      // @ts-ignore\n      initialState,\n      filterTypes\n    },\n    useGlobalFilter,\n    useFilters,\n    useColumnOrder,\n    useGroupBy,\n    useSortBy,\n    useExpanded,\n    usePagination,\n    useRowSelect\n  );\n\n  const reorder = (item: any, newIndex: number) => {\n    const { index: currentIndex } = item;\n\n    const dragRecord = columnOrder[currentIndex];\n    setColumnOrder(\n      update(columnOrder, {\n        $splice: [\n          [currentIndex, 1],\n          [newIndex, 0, dragRecord]\n        ]\n      })\n    );\n  };\n\n  useEffect(() => {\n    // @ts-ignore\n    const newColumnOrder = visibleColumns.map((column) => column.id);\n    setColumnOrder(newColumnOrder);\n\n    // eslint-disable-next-line\n  }, [hiddenColumns]);\n\n  return (\n    <>\n      <TableRowSelection selected={Object.keys(selectedRowIds).length} />\n      <Stack spacing={2}>\n        <Stack direction=\"row\" justifyContent=\"space-between\" sx={{ p: 2, pb: 0 }}>\n          <GlobalFilter\n            preGlobalFilteredRows={preGlobalFilteredRows}\n            globalFilter={globalFilter}\n            setGlobalFilter={setGlobalFilter}\n            size=\"small\"\n          />\n          <HidingSelect hiddenColumns={hiddenColumns} setHiddenColumns={setHiddenColumns} allColumns={allColumns} />\n        </Stack>\n\n        <Box sx={{ width: '100%', overflowX: 'auto', display: 'block' }}>\n          <Table {...getTableProps()}>\n            <TableHead sx={{ borderTopWidth: 2 }}>\n              {headerGroups.map((headerGroup) => (\n                <TableRow {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map((column: any, index: number) => {\n                    const groupIcon = column.isGrouped ? <UngroupOutlined /> : <GroupOutlined />;\n                    return (\n                      <TableCell key={`umbrella-header-cell-${index}`} {...column.getHeaderProps([{ className: column.className }])}>\n                        <DraggableHeader reorder={reorder} key={column.id} column={column} index={index}>\n                          <Stack direction=\"row\" spacing={1.15} alignItems=\"center\" sx={{ display: 'inline-flex' }}>\n                            {column.canGroupBy ? (\n                              <Box\n                                sx={{ color: column.isGrouped ? 'error.main' : 'primary.main', fontSize: '1rem' }}\n                                {...column.getGroupByToggleProps()}\n                              >\n                                {groupIcon}\n                              </Box>\n                            ) : null}\n                            <HeaderSort column={column} sort />\n                          </Stack>\n                        </DraggableHeader>\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              ))}\n            </TableHead>\n\n            {/* striped table -> add class 'striped' */}\n            <TableBody {...getTableBodyProps()} className=\"striped\">\n              {headerGroups.map((group: any) => (\n                <TableRow {...group.getHeaderGroupProps()}>\n                  {group.headers.map((column: any) => (\n                    <TableCell {...column.getHeaderProps([{ className: column.className }])}>\n                      {column.canFilter ? column.render('Filter') : null}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n              {page.map((row: any, i: number) => {\n                prepareRow(row);\n                return (\n                  <TableRow\n                    {...row.getRowProps()}\n                    onClick={() => {\n                      row.toggleRowSelected();\n                    }}\n                    sx={{ cursor: 'pointer', bgcolor: row.isSelected ? alpha(theme.palette.primary.lighter, 0.35) : 'inherit' }}\n                  >\n                    {row.cells.map((cell: any) => {\n                      let bgcolor = 'inherit';\n                      if (cell.isGrouped) bgcolor = 'success.lighter';\n                      if (cell.isAggregated) bgcolor = 'warning.lighter';\n                      if (cell.isPlaceholder) bgcolor = 'error.lighter';\n                      if (cell.isPlaceholder) bgcolor = 'error.lighter';\n                      if (row.isSelected) bgcolor = alpha(theme.palette.primary.lighter, 0.35);\n\n                      const collapseIcon = row.isExpanded ? <DownOutlined /> : <RightOutlined />;\n\n                      return (\n                        <TableCell {...cell.getCellProps([{ className: cell.column.className }])} sx={{ bgcolor }}>\n                          {/* eslint-disable-next-line */}\n                          {cell.isGrouped ? (\n                            <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ display: 'inline-flex' }}>\n                              <Box\n                                sx={{ pr: 1.25, fontSize: '0.75rem', color: 'text.secondary' }}\n                                onClick={(e: any) => {\n                                  row.toggleRowExpanded();\n                                  e.stopPropagation();\n                                }}\n                              >\n                                {collapseIcon}\n                              </Box>\n                              {cell.render('Cell')} ({row.subRows.length})\n                            </Stack>\n                          ) : // eslint-disable-next-line\n                          cell.isAggregated ? (\n                            cell.render('Aggregated')\n                          ) : cell.isPlaceholder ? null : (\n                            cell.render('Cell')\n                          )}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n\n            {/* footer table */}\n            <TableFooter sx={{ borderBottomWidth: 2 }}>\n              {footerGroups.map((group) => (\n                <TableRow {...group.getFooterGroupProps()}>\n                  {group.headers.map((column: any) => (\n                    <TableCell {...column.getFooterProps([{ className: column.className }])}>{column.render('Footer')}</TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableFooter>\n          </Table>\n        </Box>\n        <Box sx={{ p: 2, py: 0 }}>\n          <TablePagination gotoPage={gotoPage} rows={rows} setPageSize={setPageSize} pageIndex={pageIndex} pageSize={pageSize} />\n        </Box>\n\n        <SyntaxHighlight>\n          {JSON.stringify(\n            {\n              selectedRowIndices: selectedRowIds,\n              'selectedFlatRows[].original': selectedFlatRows.map((d: any) => d.original)\n            },\n            null,\n            2\n          )}\n        </SyntaxHighlight>\n      </Stack>\n    </>\n  );\n}\n\n// ==============================|| REACT TABLE - UMBRELLA ||============================== //\n\nconst UmbrellaTable = () => {\n  const data = useMemo(() => makeData(200), []);\n  const columns = useMemo(\n    () => [\n      {\n        title: 'Row Selection',\n        Header: ({ getToggleAllPageRowsSelectedProps }: any) => (\n          <IndeterminateCheckbox indeterminate {...getToggleAllPageRowsSelectedProps()} />\n        ),\n        Footer: '#',\n        accessor: 'selection',\n        Cell: ({ row }: any) => <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />,\n        disableSortBy: true,\n        disableFilters: true,\n        disableGroupBy: true,\n        Aggregated: () => null\n      },\n      {\n        Header: '#',\n        Footer: '#',\n        accessor: 'id',\n        className: 'cell-center',\n        disableFilters: true,\n        disableGroupBy: true\n      },\n      {\n        Header: 'Avatar',\n        Footer: 'Avatar',\n        accessor: 'avatar',\n        className: 'cell-center',\n        disableFilters: true,\n        disableGroupBy: true,\n        Cell: ({ value }: any) => <Avatar alt=\"Avatar 1\" size=\"sm\" src={avatarImage(`./avatar-${!value ? 1 : value}.png`).default} />\n      },\n      {\n        Header: 'First Name',\n        Footer: 'First Name',\n        accessor: 'firstName',\n        disableGroupBy: true,\n        aggregate: 'count',\n        Aggregated: ({ value }: { value: number }) => `${value} Person`\n      },\n      {\n        Header: 'Last Name',\n        Footer: 'Last Name',\n        accessor: 'lastName',\n        filter: 'fuzzyText',\n        disableGroupBy: true\n      },\n      {\n        Header: 'Father Name',\n        Footer: 'Father Name',\n        accessor: 'fatherName',\n        disableGroupBy: true\n      },\n      {\n        Header: 'Email',\n        Footer: 'Email',\n        accessor: 'email',\n        disableGroupBy: true\n      },\n      {\n        Header: 'Age',\n        Footer: 'Age',\n        accessor: 'age',\n        className: 'cell-right',\n        Filter: SliderColumnFilter,\n        filter: 'equals',\n        aggregate: 'average',\n        Aggregated: ({ value }: { value: number }) => `${Math.round(value * 100) / 100} (avg)`\n      },\n      {\n        Header: 'Role',\n        Footer: 'Role',\n        accessor: 'role',\n        disableGroupBy: true\n      },\n      {\n        Header: 'Contact',\n        Footer: 'Contact',\n        accessor: 'contact',\n        disableGroupBy: true\n      },\n      {\n        Header: 'Country',\n        Footer: 'Country',\n        accessor: 'country',\n        disableGroupBy: true\n      },\n      {\n        Header: 'Visits',\n        accessor: 'visits',\n        className: 'cell-right',\n        Filter: NumberRangeColumnFilter,\n        filter: 'between',\n        disableGroupBy: true,\n        aggregate: 'sum',\n        Aggregated: ({ value }: { value: number }) => `${value} (total)`,\n        Footer: (info: any) => {\n          const { rows } = info;\n          // only calculate total visits if rows change\n          const total = useMemo(() => rows.reduce((sum: number, row: any) => row.values.visits + sum, 0), [rows]);\n\n          return (\n            <Typography variant=\"subtitle1\">\n              <NumberFormat value={total} displayType=\"text\" thousandSeparator />\n            </Typography>\n          );\n        }\n      },\n      {\n        Header: 'Status',\n        Footer: 'Status',\n        accessor: 'status',\n        Filter: SelectColumnFilter,\n        filter: 'includes',\n        Cell: ({ value }: any) => {\n          switch (value) {\n            case 'Complicated':\n              return <Chip color=\"error\" label=\"Complicated\" size=\"small\" variant=\"light\" />;\n            case 'Relationship':\n              return <Chip color=\"success\" label=\"Relationship\" size=\"small\" variant=\"light\" />;\n            case 'Single':\n            default:\n              return <Chip color=\"info\" label=\"Single\" size=\"small\" variant=\"light\" />;\n          }\n        }\n      },\n      {\n        Header: 'Profile Progress',\n        Footer: 'Profile Progress',\n        accessor: 'progress',\n        Filter: SliderColumnFilter,\n        filter: filterGreaterThan,\n        disableGroupBy: true,\n        aggregate: roundedMedian,\n        Aggregated: ({ value }: { value: number }) => `${value} (med)`,\n        Cell: ({ value }: any) => <LinearWithLabel value={value} sx={{ minWidth: 140 }} />\n      }\n    ],\n    []\n  );\n\n  return (\n    <MainCard\n      title=\"Umbrella Table\"\n      subheader=\"This page consist combination of most possible features of react-table in to one table. Sorting, grouping, row selection, hidden row, filter, search, pagination, footer row available in below table.\"\n      content={false}\n    >\n      <ScrollX>\n        <DndProvider backend={HTML5Backend}>\n          <ReactTable columns={columns} data={data} />\n          <DragPreview />\n        </DndProvider>\n      </ScrollX>\n    </MainCard>\n  );\n};\n\nexport default UmbrellaTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}