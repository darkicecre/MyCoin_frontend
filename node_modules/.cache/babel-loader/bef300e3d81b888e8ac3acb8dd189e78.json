{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/forms/validation/CheckboxForms.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'store'; // material-ui\n\nimport { Button, Grid, Checkbox, FormHelperText, Stack } from '@mui/material'; // project imports\n\nimport MainCard from 'components/MainCard';\nimport AnimateButton from 'components/@extended/AnimateButton';\nimport { openSnackbar } from 'store/reducers/snackbar'; // third-party\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  color: yup.array().min(1, 'At least one color is required')\n}); // ==============================|| FORM VALIDATION - CHECKBOX FORMIK  ||============================== //\n\nconst CheckboxForms = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      color: []\n    },\n    validationSchema,\n    onSubmit: values => {\n      dispatch(openSnackbar({\n        open: true,\n        message: 'Checkbox - Submit Success',\n        variant: 'alert',\n        alert: {\n          color: 'success'\n        },\n        close: false\n      }));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"Checkbox\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: \"primary\",\n            name: \"color\",\n            color: \"primary\",\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: \"secondary\",\n            name: \"color\",\n            color: \"secondary\",\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: \"error\",\n            name: \"color\",\n            color: \"error\",\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sx: {\n            pt: '0 !important'\n          },\n          children: formik.errors.color && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            id: \"standard-weight-helper-text-email-login\",\n            children: [' ', formik.errors.color, ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckboxForms, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = CheckboxForms;\nexport default CheckboxForms;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxForms\");","map":{"version":3,"names":["useDispatch","Button","Grid","Checkbox","FormHelperText","Stack","MainCard","AnimateButton","openSnackbar","useFormik","yup","validationSchema","object","color","array","min","CheckboxForms","dispatch","formik","initialValues","onSubmit","values","open","message","variant","alert","close","handleSubmit","handleChange","pt","errors"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/forms/validation/CheckboxForms.tsx"],"sourcesContent":["import { useDispatch } from 'store';\n\n// material-ui\nimport { Button, Grid, Checkbox, FormHelperText, Stack } from '@mui/material';\n\n// project imports\nimport MainCard from 'components/MainCard';\nimport AnimateButton from 'components/@extended/AnimateButton';\nimport { openSnackbar } from 'store/reducers/snackbar';\n\n// third-party\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object({\n  color: yup.array().min(1, 'At least one color is required')\n});\n\n// ==============================|| FORM VALIDATION - CHECKBOX FORMIK  ||============================== //\n\nconst CheckboxForms = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      color: []\n    },\n    validationSchema,\n    onSubmit: (values) => {\n      dispatch(\n        openSnackbar({\n          open: true,\n          message: 'Checkbox - Submit Success',\n          variant: 'alert',\n          alert: {\n            color: 'success'\n          },\n          close: false\n        })\n      );\n    }\n  });\n\n  return (\n    <MainCard title=\"Checkbox\">\n      <form onSubmit={formik.handleSubmit}>\n        <Grid container spacing={2}>\n          <Grid item>\n            <Checkbox value=\"primary\" name=\"color\" color=\"primary\" onChange={formik.handleChange} />\n          </Grid>\n          <Grid item>\n            <Checkbox value=\"secondary\" name=\"color\" color=\"secondary\" onChange={formik.handleChange} />\n          </Grid>\n          <Grid item>\n            <Checkbox value=\"error\" name=\"color\" color=\"error\" onChange={formik.handleChange} />\n          </Grid>\n          <Grid item xs={12} sx={{ pt: '0 !important' }}>\n            {formik.errors.color && (\n              <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                {' '}\n                {formik.errors.color}{' '}\n              </FormHelperText>\n            )}\n          </Grid>\n          <Grid item xs={12}>\n            <Stack direction=\"row\" justifyContent=\"flex-end\">\n              <AnimateButton>\n                <Button variant=\"contained\" type=\"submit\">\n                  Submit\n                </Button>\n              </AnimateButton>\n            </Stack>\n          </Grid>\n        </Grid>\n      </form>\n    </MainCard>\n  );\n};\n\nexport default CheckboxForms;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}