{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.get = get;\nexports.without = without;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.xor = xor;\nexports.intersection = intersection;\n\nfunction get(obj, path, defaultValue) {\n  return path.split('.').reduce((a, c) => a && a[c] ? a[c] : defaultValue || null, obj);\n}\n\nfunction without(items, item) {\n  return items.filter(i => i !== item);\n}\n\nfunction isString(input) {\n  return typeof input === 'string';\n}\n\nfunction isObject(input) {\n  return typeof input === 'object';\n}\n\nfunction xor(itemsA, itemsB) {\n  const map = new Map();\n\n  const insertItem = item => {\n    map.set(item, map.has(item) ? map.get(item) + 1 : 1);\n  };\n\n  itemsA.forEach(insertItem);\n  itemsB.forEach(insertItem);\n  const result = [];\n  map.forEach((count, key) => {\n    if (count === 1) {\n      result.push(key);\n    }\n  });\n  return result;\n}\n\nfunction intersection(itemsA, itemsB) {\n  return itemsA.filter(t => itemsB.indexOf(t) > -1);\n}","map":{"version":3,"mappings":";;;;;QAQgBA;QASAC;QAQAC;QAQAC;QASAC;QAsBAC;;SAxDAL,IAAOM,KAAUC,MAAcC,cAAoB;EAClE,OAAOD,IAAI,CACTE,KADKF,CACC,GADDA,EAELG,MAFKH,CAEC,CAAEI,CAAF,EAAKC,CAAL,KAAYD,CAAC,IAAIA,CAAC,CAACC,CAAD,CAAND,GAAYA,CAAC,CAACC,CAAD,CAAbD,GAAmBH,YAAY,IAAI,IAFhDD,EAEuDD,GAFvDC,CAAP;AAGA;;SAKeN,QAAWY,OAAYC,MAAc;EACpD,OAAOD,KAAK,CAACE,MAANF,CAAcG,CAAF,IAAQA,CAAC,KAAKF,IAA1BD,CAAP;AACA;;SAMeX,SAASe,OAAqB;EAC7C,OAAO,OAAOA,KAAP,KAAiB,QAAxB;AACA;;SAMed,SAASc,OAAqB;EAC7C,OAAO,OAAOA,KAAP,KAAiB,QAAxB;AACA;;SAOeb,IAA+Bc,QAAaC,QAAkB;EAC7E,MAAMC,GAAG,GAAG,IAAIC,GAAJ,EAAZ;;EACA,MAAMC,UAAU,GAAIR,IAAJ,IAAgB;IAC/BM,GAAG,CAACG,GAAJH,CAAQN,IAARM,EAAcA,GAAG,CAACI,GAAJJ,CAAQN,IAARM,IAAiBA,GAAG,CAACpB,GAAJoB,CAAQN,IAARM,IAA2B,CAA5CA,GAAgD,CAA9DA;EACA,CAFD;;EAGAF,MAAM,CAACO,OAAPP,CAAeI,UAAfJ;EACAC,MAAM,CAACM,OAAPN,CAAeG,UAAfH;EAEA,MAAMO,MAAM,GAAQ,EAApB;EACAN,GAAG,CAACK,OAAJL,CAAW,CAAEO,KAAF,EAASC,GAAT,KAAiB;IAC3B,IAAID,KAAK,KAAK,CAAd,EAAiB;MAChBD,MAAM,CAACG,IAAPH,CAAYE,GAAZF;IACA;EACD,CAJDN;EAKA,OAAOM,MAAP;AACA;;SAOerB,aAAgBa,QAAaC,QAAkB;EAC9D,OAAOD,MAAM,CAACH,MAAPG,CAAeY,CAAF,IAAQX,MAAM,CAACY,OAAPZ,CAAeW,CAAfX,IAAgB,CAAK,CAA1CD,CAAP;AACA","names":["get","without","isString","isObject","xor","intersection","obj","path","defaultValue","split","reduce","a","c","items","item","filter","i","input","itemsA","itemsB","map","Map","insertItem","set","has","forEach","result","count","key","push","t","indexOf"],"sources":["../../../src/utils/js_utils.ts"],"sourcesContent":["// cheap lodash replacements\n\n/**\n * drop-in replacement for _.get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get<T>(obj: any, path: string, defaultValue: T): T {\n\treturn path\n\t\t.split('.')\n\t\t.reduce((a, c) => (a && a[c] ? a[c] : defaultValue || null), obj) as T\n}\n\n/**\n * drop-in replacement for _.without\n */\nexport function without<T>(items: T[], item: T): T[] {\n\treturn items.filter((i) => i !== item)\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isString(input: any): boolean {\n\treturn typeof input === 'string'\n}\n\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isObject(input: any): boolean {\n\treturn typeof input === 'object'\n}\n\n/**\n * replacement for _.xor\n * @param itemsA\n * @param itemsB\n */\nexport function xor<T extends string | number>(itemsA: T[], itemsB: T[]): T[] {\n\tconst map = new Map<T, number>()\n\tconst insertItem = (item: T) => {\n\t\tmap.set(item, map.has(item) ? (map.get(item) as number) + 1 : 1)\n\t}\n\titemsA.forEach(insertItem)\n\titemsB.forEach(insertItem)\n\n\tconst result: T[] = []\n\tmap.forEach((count, key) => {\n\t\tif (count === 1) {\n\t\t\tresult.push(key)\n\t\t}\n\t})\n\treturn result\n}\n\n/**\n * replacement for _.intersection\n * @param itemsA\n * @param itemsB\n */\nexport function intersection<T>(itemsA: T[], itemsB: T[]): T[] {\n\treturn itemsA.filter((t) => itemsB.indexOf(t) > -1)\n}\n"]},"metadata":{},"sourceType":"script"}