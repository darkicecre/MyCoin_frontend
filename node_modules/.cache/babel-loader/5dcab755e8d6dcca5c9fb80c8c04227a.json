{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/contexts/FirebaseContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useReducer } from 'react'; // third-party\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth'; // action - state management\n\nimport { LOGIN, LOGOUT } from 'store/reducers/actions';\nimport authReducer from 'store/reducers/auth'; // project import\n\nimport Loader from 'components/Loader';\nimport { FIREBASE_API } from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// firebase initialize\nif (!firebase.apps.length) {\n  firebase.initializeApp(FIREBASE_API);\n} // const\n\n\nconst initialState = {\n  isLoggedIn: false,\n  isInitialized: false,\n  user: null\n}; // ==============================|| FIREBASE CONTEXT & PROVIDER ||============================== //\n\nconst FirebaseContext = /*#__PURE__*/createContext(null);\nexport const FirebaseProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      dispatch({\n        type: LOGIN,\n        payload: {\n          isLoggedIn: true,\n          user: {\n            id: user.uid,\n            email: user.email,\n            name: user.displayName || 'Stebin Ben',\n            role: 'UI/UX Designer'\n          }\n        }\n      });\n    } else {\n      dispatch({\n        type: LOGOUT\n      });\n    }\n  }), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [dispatch]);\n\n  const firebaseEmailPasswordSignIn = (email, password) => firebase.auth().signInWithEmailAndPassword(email, password);\n\n  const firebaseGoogleSignIn = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    return firebase.auth().signInWithPopup(provider);\n  };\n\n  const firebaseTwitterSignIn = () => {\n    const provider = new firebase.auth.TwitterAuthProvider();\n    return firebase.auth().signInWithPopup(provider);\n  };\n\n  const firebaseFacebookSignIn = () => {\n    const provider = new firebase.auth.FacebookAuthProvider();\n    return firebase.auth().signInWithPopup(provider);\n  };\n\n  const firebaseRegister = async (email, password) => firebase.auth().createUserWithEmailAndPassword(email, password);\n\n  const logout = () => firebase.auth().signOut();\n\n  const resetPassword = async email => {\n    await firebase.auth().sendPasswordResetEmail(email);\n  };\n\n  const updateProfile = () => {};\n\n  if (state.isInitialized !== undefined && !state.isInitialized) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(FirebaseContext.Provider, {\n    value: { ...state,\n      firebaseRegister,\n      firebaseEmailPasswordSignIn,\n      login: () => {},\n      firebaseGoogleSignIn,\n      firebaseTwitterSignIn,\n      firebaseFacebookSignIn,\n      logout,\n      resetPassword,\n      updateProfile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FirebaseProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = FirebaseProvider;\nexport default FirebaseContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useReducer","firebase","LOGIN","LOGOUT","authReducer","Loader","FIREBASE_API","apps","length","initializeApp","initialState","isLoggedIn","isInitialized","user","FirebaseContext","FirebaseProvider","children","state","dispatch","auth","onAuthStateChanged","type","payload","id","uid","email","name","displayName","role","firebaseEmailPasswordSignIn","password","signInWithEmailAndPassword","firebaseGoogleSignIn","provider","GoogleAuthProvider","signInWithPopup","firebaseTwitterSignIn","TwitterAuthProvider","firebaseFacebookSignIn","FacebookAuthProvider","firebaseRegister","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateProfile","undefined","login"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/contexts/FirebaseContext.tsx"],"sourcesContent":["import React, { createContext, useEffect, useReducer } from 'react';\n\n// third-party\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\n\n// action - state management\nimport { LOGIN, LOGOUT } from 'store/reducers/actions';\nimport authReducer from 'store/reducers/auth';\n\n// project import\nimport Loader from 'components/Loader';\nimport { FIREBASE_API } from 'config';\nimport { AuthProps, FirebaseContextType } from 'types/auth';\n\n// firebase initialize\nif (!firebase.apps.length) {\n  firebase.initializeApp(FIREBASE_API);\n}\n\n// const\nconst initialState: AuthProps = {\n  isLoggedIn: false,\n  isInitialized: false,\n  user: null\n};\n\n// ==============================|| FIREBASE CONTEXT & PROVIDER ||============================== //\n\nconst FirebaseContext = createContext<FirebaseContextType | null>(null);\n\nexport const FirebaseProvider = ({ children }: { children: React.ReactElement }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  useEffect(\n    () =>\n      firebase.auth().onAuthStateChanged((user: any) => {\n        if (user) {\n          dispatch({\n            type: LOGIN,\n            payload: {\n              isLoggedIn: true,\n              user: {\n                id: user.uid,\n                email: user.email!,\n                name: user.displayName || 'Stebin Ben',\n                role: 'UI/UX Designer'\n              }\n            }\n          });\n        } else {\n          dispatch({\n            type: LOGOUT\n          });\n        }\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dispatch]\n  );\n\n  const firebaseEmailPasswordSignIn = (email: string, password: string) => firebase.auth().signInWithEmailAndPassword(email, password);\n\n  const firebaseGoogleSignIn = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    return firebase.auth().signInWithPopup(provider);\n  };\n\n  const firebaseTwitterSignIn = () => {\n    const provider = new firebase.auth.TwitterAuthProvider();\n    return firebase.auth().signInWithPopup(provider);\n  };\n\n  const firebaseFacebookSignIn = () => {\n    const provider = new firebase.auth.FacebookAuthProvider();\n    return firebase.auth().signInWithPopup(provider);\n  };\n\n  const firebaseRegister = async (email: string, password: string) => firebase.auth().createUserWithEmailAndPassword(email, password);\n\n  const logout = () => firebase.auth().signOut();\n\n  const resetPassword = async (email: string) => {\n    await firebase.auth().sendPasswordResetEmail(email);\n  };\n\n  const updateProfile = () => {};\n  if (state.isInitialized !== undefined && !state.isInitialized) {\n    return <Loader />;\n  }\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        ...state,\n        firebaseRegister,\n        firebaseEmailPasswordSignIn,\n        login: () => {},\n        firebaseGoogleSignIn,\n        firebaseTwitterSignIn,\n        firebaseFacebookSignIn,\n        logout,\n        resetPassword,\n        updateProfile\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n\nexport default FirebaseContext;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,UAA1C,QAA4D,OAA5D,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,wBAA9B;AACA,OAAOC,WAAP,MAAwB,qBAAxB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,QAA7B;;;AAGA;AACA,IAAI,CAACL,QAAQ,CAACM,IAAT,CAAcC,MAAnB,EAA2B;EACzBP,QAAQ,CAACQ,aAAT,CAAuBH,YAAvB;AACD,C,CAED;;;AACA,MAAMI,YAAuB,GAAG;EAC9BC,UAAU,EAAE,KADkB;EAE9BC,aAAa,EAAE,KAFe;EAG9BC,IAAI,EAAE;AAHwB,CAAhC,C,CAMA;;AAEA,MAAMC,eAAe,gBAAGhB,aAAa,CAA6B,IAA7B,CAArC;AAEA,OAAO,MAAMiB,gBAAgB,GAAG,QAAoD;EAAA;;EAAA,IAAnD;IAAEC;EAAF,CAAmD;EAClF,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,UAAU,CAACI,WAAD,EAAcM,YAAd,CAApC;EAEAX,SAAS,CACP,MACEE,QAAQ,CAACkB,IAAT,GAAgBC,kBAAhB,CAAoCP,IAAD,IAAe;IAChD,IAAIA,IAAJ,EAAU;MACRK,QAAQ,CAAC;QACPG,IAAI,EAAEnB,KADC;QAEPoB,OAAO,EAAE;UACPX,UAAU,EAAE,IADL;UAEPE,IAAI,EAAE;YACJU,EAAE,EAAEV,IAAI,CAACW,GADL;YAEJC,KAAK,EAAEZ,IAAI,CAACY,KAFR;YAGJC,IAAI,EAAEb,IAAI,CAACc,WAAL,IAAoB,YAHtB;YAIJC,IAAI,EAAE;UAJF;QAFC;MAFF,CAAD,CAAR;IAYD,CAbD,MAaO;MACLV,QAAQ,CAAC;QACPG,IAAI,EAAElB;MADC,CAAD,CAAR;IAGD;EACF,CAnBD,CAFK,EAsBP;EACA,CAACe,QAAD,CAvBO,CAAT;;EA0BA,MAAMW,2BAA2B,GAAG,CAACJ,KAAD,EAAgBK,QAAhB,KAAqC7B,QAAQ,CAACkB,IAAT,GAAgBY,0BAAhB,CAA2CN,KAA3C,EAAkDK,QAAlD,CAAzE;;EAEA,MAAME,oBAAoB,GAAG,MAAM;IACjC,MAAMC,QAAQ,GAAG,IAAIhC,QAAQ,CAACkB,IAAT,CAAce,kBAAlB,EAAjB;IACA,OAAOjC,QAAQ,CAACkB,IAAT,GAAgBgB,eAAhB,CAAgCF,QAAhC,CAAP;EACD,CAHD;;EAKA,MAAMG,qBAAqB,GAAG,MAAM;IAClC,MAAMH,QAAQ,GAAG,IAAIhC,QAAQ,CAACkB,IAAT,CAAckB,mBAAlB,EAAjB;IACA,OAAOpC,QAAQ,CAACkB,IAAT,GAAgBgB,eAAhB,CAAgCF,QAAhC,CAAP;EACD,CAHD;;EAKA,MAAMK,sBAAsB,GAAG,MAAM;IACnC,MAAML,QAAQ,GAAG,IAAIhC,QAAQ,CAACkB,IAAT,CAAcoB,oBAAlB,EAAjB;IACA,OAAOtC,QAAQ,CAACkB,IAAT,GAAgBgB,eAAhB,CAAgCF,QAAhC,CAAP;EACD,CAHD;;EAKA,MAAMO,gBAAgB,GAAG,OAAOf,KAAP,EAAsBK,QAAtB,KAA2C7B,QAAQ,CAACkB,IAAT,GAAgBsB,8BAAhB,CAA+ChB,KAA/C,EAAsDK,QAAtD,CAApE;;EAEA,MAAMY,MAAM,GAAG,MAAMzC,QAAQ,CAACkB,IAAT,GAAgBwB,OAAhB,EAArB;;EAEA,MAAMC,aAAa,GAAG,MAAOnB,KAAP,IAAyB;IAC7C,MAAMxB,QAAQ,CAACkB,IAAT,GAAgB0B,sBAAhB,CAAuCpB,KAAvC,CAAN;EACD,CAFD;;EAIA,MAAMqB,aAAa,GAAG,MAAM,CAAE,CAA9B;;EACA,IAAI7B,KAAK,CAACL,aAAN,KAAwBmC,SAAxB,IAAqC,CAAC9B,KAAK,CAACL,aAAhD,EAA+D;IAC7D,oBAAO,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE,QAAC,eAAD,CAAiB,QAAjB;IACE,KAAK,EAAE,EACL,GAAGK,KADE;MAELuB,gBAFK;MAGLX,2BAHK;MAILmB,KAAK,EAAE,MAAM,CAAE,CAJV;MAKLhB,oBALK;MAMLI,qBANK;MAOLE,sBAPK;MAQLI,MARK;MASLE,aATK;MAULE;IAVK,CADT;IAAA,UAcG9B;EAdH;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA7EM;;GAAMD,gB;;KAAAA,gB;AA+Eb,eAAeD,eAAf"},"metadata":{},"sourceType":"module"}