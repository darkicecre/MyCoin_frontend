{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/components-overview/dialogs/TransitionsDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport { forwardRef, useState } from 'react'; // material-ui\n\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/forwardRef(_c = (props, ref) => /*#__PURE__*/_jsxDEV(Slide, {\n  direction: \"up\",\n  ref: ref,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this)); // ==============================|| DIALOG - TRANSITIONS ||============================== //\n\n_c2 = Transition;\nexport default function AlertDialogSlide() {\n  _s();\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleClickOpen,\n      children: \"Slide in dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: handleClose,\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 1,\n          py: 1.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Use Google'ss location service?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            id: \"alert-dialog-slide-description\",\n            children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"error\",\n            onClick: handleClose,\n            children: \"Disagree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleClose,\n            children: \"Agree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AlertDialogSlide, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c3 = AlertDialogSlide;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"AlertDialogSlide\");","map":{"version":3,"names":["forwardRef","useState","Box","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Transition","props","ref","AlertDialogSlide","open","setOpen","handleClickOpen","handleClose","p","py"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/components-overview/dialogs/TransitionsDialog.tsx"],"sourcesContent":["import { forwardRef, useState, Ref } from 'react';\n\n// material-ui\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide } from '@mui/material';\nimport { TransitionProps } from '@mui/material/transitions';\n\nconst Transition = forwardRef((props: TransitionProps & { children: React.ReactElement<any, any> }, ref: Ref<unknown>) => (\n  <Slide direction=\"up\" ref={ref} {...props} />\n));\n\n// ==============================|| DIALOG - TRANSITIONS ||============================== //\n\nexport default function AlertDialogSlide() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        Slide in dialog\n      </Button>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <Box sx={{ p: 1, py: 1.5 }}>\n          <DialogTitle>Use Google&apos;ss location service?</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n              Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"error\" onClick={handleClose}>\n              Disagree\n            </Button>\n            <Button variant=\"contained\" onClick={handleClose}>\n              Agree\n            </Button>\n          </DialogActions>\n        </Box>\n      </Dialog>\n    </>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAA0C,OAA1C,C,CAEA;;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,aAA9B,EAA6CC,aAA7C,EAA4DC,iBAA5D,EAA+EC,WAA/E,EAA4FC,KAA5F,QAAyG,eAAzG;;;AAGA,MAAMC,UAAU,gBAAGV,UAAU,MAAC,CAACW,KAAD,EAAsEC,GAAtE,kBAC5B,QAAC,KAAD;EAAO,SAAS,EAAC,IAAjB;EAAsB,GAAG,EAAEA,GAA3B;EAAA,GAAoCD;AAApC;EAAA;EAAA;EAAA;AAAA,QAD2B,CAA7B,C,CAIA;;MAJMD,U;AAMN,eAAe,SAASG,gBAAT,GAA4B;EAAA;;EACzC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC;;EAEA,MAAMe,eAAe,GAAG,MAAM;IAC5BD,OAAO,CAAC,IAAD,CAAP;EACD,CAFD;;EAIA,MAAME,WAAW,GAAG,MAAM;IACxBF,OAAO,CAAC,KAAD,CAAP;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,OAAO,EAAC,WAAhB;MAA4B,OAAO,EAAEC,eAArC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,MAAD;MACE,IAAI,EAAEF,IADR;MAEE,mBAAmB,EAAEJ,UAFvB;MAGE,WAAW,MAHb;MAIE,OAAO,EAAEO,WAJX;MAKE,oBAAiB,gCALnB;MAAA,uBAOE,QAAC,GAAD;QAAK,EAAE,EAAE;UAAEC,CAAC,EAAE,CAAL;UAAQC,EAAE,EAAE;QAAZ,CAAT;QAAA,wBACE,QAAC,WAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,aAAD;UAAA,uBACE,QAAC,iBAAD;YAAmB,EAAE,EAAC,gCAAtB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAFF,eAOE,QAAC,aAAD;UAAA,wBACE,QAAC,MAAD;YAAQ,KAAK,EAAC,OAAd;YAAsB,OAAO,EAAEF,WAA/B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAIE,QAAC,MAAD;YAAQ,OAAO,EAAC,WAAhB;YAA4B,OAAO,EAAEA,WAArC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA;IAPF;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;AA+BD;;GA1CuBJ,gB;;MAAAA,gB"},"metadata":{},"sourceType":"module"}