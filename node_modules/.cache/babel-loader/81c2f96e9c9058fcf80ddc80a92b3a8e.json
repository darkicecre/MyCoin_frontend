{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/apps/chat/UserList.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState } from 'react'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, List, ListItemAvatar, ListItemButton, ListItemText, Stack, Typography } from '@mui/material'; // third-party\n\nimport { Chance } from 'chance'; // project imports\n\nimport UserAvatar from './UserAvatar';\nimport Dot from 'components/@extended/Dot';\nimport { useDispatch, useSelector } from 'store';\nimport { getUsers } from 'store/reducers/chat'; // assets\n\nimport { CheckOutlined } from '@ant-design/icons'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chance = new Chance();\n\nfunction UserList(_ref) {\n  _s();\n\n  let {\n    setUser,\n    search\n  } = _ref;\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const {\n    users\n  } = useSelector(state => state.chat);\n  useEffect(() => {\n    dispatch(getUsers()); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    setData(users);\n  }, [users]);\n  useEffect(() => {\n    if (search) {\n      const results = users.filter(row => {\n        let matches = true;\n        const properties = ['name'];\n        let containsQuery = false;\n        properties.forEach(property => {\n          if (row[property].toString().toLowerCase().includes(search.toString().toLowerCase())) {\n            containsQuery = true;\n          }\n        });\n\n        if (!containsQuery) {\n          matches = false;\n        }\n\n        return matches;\n      });\n      setData(results);\n    } else {\n      setData(users);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(List, {\n    component: \"nav\",\n    children: data.map(user => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n        sx: {\n          pl: 1\n        },\n        onClick: () => {\n          setUser(user);\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(UserAvatar, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(Stack, {\n            component: \"span\",\n            direction: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"inherit\",\n              sx: {\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap'\n              },\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              color: \"textSecondary\",\n              variant: \"caption\",\n              children: user.lastMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this),\n          secondary: /*#__PURE__*/_jsxDEV(Stack, {\n            component: \"span\",\n            direction: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"textSecondary\",\n              sx: {\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap'\n              },\n              children: user.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), user.unReadChatCount ? /*#__PURE__*/_jsxDEV(Dot, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this) :\n            /*#__PURE__*/\n            // chance.bool() - use for last send msg was read or unread\n            _jsxDEV(CheckOutlined, {\n              style: {\n                color: chance.bool() ? theme.palette.grey[400] : theme.palette.primary.main\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserList, \"CoaUyh2b5W9FXZMyY7YPoEioWBg=\", false, function () {\n  return [useTheme, useDispatch, useSelector];\n});\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["Fragment","useEffect","useState","useTheme","Divider","List","ListItemAvatar","ListItemButton","ListItemText","Stack","Typography","Chance","UserAvatar","Dot","useDispatch","useSelector","getUsers","CheckOutlined","chance","UserList","setUser","search","theme","dispatch","data","setData","users","state","chat","results","filter","row","matches","properties","containsQuery","forEach","property","toString","toLowerCase","includes","map","user","pl","overflow","textOverflow","whiteSpace","name","lastMessage","status","unReadChatCount","color","bool","palette","grey","primary","main","id"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/apps/chat/UserList.tsx"],"sourcesContent":["import { Fragment, useEffect, useState } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, List, ListItemAvatar, ListItemButton, ListItemText, Stack, Typography } from '@mui/material';\n\n// third-party\nimport { Chance } from 'chance';\n\n// project imports\nimport UserAvatar from './UserAvatar';\nimport Dot from 'components/@extended/Dot';\nimport { useDispatch, useSelector } from 'store';\nimport { getUsers } from 'store/reducers/chat';\n\n// assets\nimport { CheckOutlined } from '@ant-design/icons';\n\n// types\nimport { KeyedObject } from 'types/root';\nimport { UserProfile } from 'types/user-profile';\n\nconst chance = new Chance();\n\ninterface UserListProps {\n  setUser: (u: UserProfile) => void;\n  search?: string;\n}\n\nfunction UserList({ setUser, search }: UserListProps) {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const [data, setData] = useState<UserProfile[]>([]);\n  const { users } = useSelector((state) => state.chat);\n\n  useEffect(() => {\n    dispatch(getUsers());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setData(users);\n  }, [users]);\n\n  useEffect(() => {\n    if (search) {\n      const results = users.filter((row: KeyedObject) => {\n        let matches = true;\n\n        const properties: string[] = ['name'];\n        let containsQuery = false;\n\n        properties.forEach((property) => {\n          if (row[property].toString().toLowerCase().includes(search.toString().toLowerCase())) {\n            containsQuery = true;\n          }\n        });\n\n        if (!containsQuery) {\n          matches = false;\n        }\n        return matches;\n      });\n\n      setData(results);\n    } else {\n      setData(users);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n  return (\n    <List component=\"nav\">\n      {data.map((user) => (\n        <Fragment key={user.id}>\n          <ListItemButton\n            sx={{ pl: 1 }}\n            onClick={() => {\n              setUser(user);\n            }}\n          >\n            <ListItemAvatar>\n              <UserAvatar user={user} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={\n                <Stack component=\"span\" direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                  <Typography\n                    variant=\"h5\"\n                    color=\"inherit\"\n                    sx={{\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis',\n                      whiteSpace: 'nowrap'\n                    }}\n                  >\n                    {user.name}\n                  </Typography>\n                  <Typography component=\"span\" color=\"textSecondary\" variant=\"caption\">\n                    {user.lastMessage}\n                  </Typography>\n                </Stack>\n              }\n              secondary={\n                <Stack component=\"span\" direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                  <Typography\n                    variant=\"caption\"\n                    color=\"textSecondary\"\n                    sx={{\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis',\n                      whiteSpace: 'nowrap'\n                    }}\n                  >\n                    {user.status}\n                  </Typography>\n                  {user.unReadChatCount ? (\n                    <Dot color=\"primary\" />\n                  ) : (\n                    // chance.bool() - use for last send msg was read or unread\n                    <CheckOutlined style={{ color: chance.bool() ? theme.palette.grey[400] : theme.palette.primary.main }} />\n                  )}\n                </Stack>\n              }\n            />\n          </ListItemButton>\n          <Divider />\n        </Fragment>\n      ))}\n    </List>\n  );\n}\n\nexport default UserList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}