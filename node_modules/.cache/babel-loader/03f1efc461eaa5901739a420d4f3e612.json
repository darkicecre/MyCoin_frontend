{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/tables/react-table/ColumnDragDrop.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useMemo } from 'react'; // material-ui\n\nimport { Chip, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material'; // third-party\n\nimport { useColumnOrder, useTable } from 'react-table';\nimport update from 'immutability-helper';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend'; // project import\n\nimport MainCard from 'components/MainCard';\nimport ScrollX from 'components/ScrollX';\nimport LinearWithLabel from 'components/@extended/Progress/LinearWithLabel';\nimport { DraggableHeader, DragPreview } from 'components/third-party/ReactTable'; // ==============================|| REACT TABLE ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReactTable(_ref) {\n  _s();\n\n  let {\n    columns,\n    data\n  } = _ref;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    // @ts-ignore\n    setColumnOrder,\n    // @ts-ignore\n    state: {\n      columnOrder\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      // @ts-ignore\n      columnOrder: ['firstName', 'lastName', 'email', 'age', 'visits', 'status', 'progress']\n    }\n  }, useColumnOrder);\n\n  const reorder = (item, newIndex) => {\n    const {\n      index: currentIndex\n    } = item;\n    const dragRecord = columnOrder[currentIndex];\n    setColumnOrder(update(columnOrder, {\n      $splice: [[currentIndex, 1], [newIndex, 0, dragRecord]]\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(TableRow, { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map((column, i) => /*#__PURE__*/_jsxDEV(TableCell, { ...column.getHeaderProps([{\n            className: column.className\n          }]),\n          children: /*#__PURE__*/_jsxDEV(DraggableHeader, {\n            reorder: reorder,\n            column: column,\n            index: i,\n            children: column.render('Header')\n          }, column.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(TableRow, { ...row.getRowProps(),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(TableCell, { ...cell.getCellProps([{\n              className: cell.column.className\n            }]),\n            children: cell.render('Cell')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n} // ==============================|| REACT TABLE - COLUMN DRAG & DROP ||============================== //\n\n\n_s(ReactTable, \"FKkKSWaeIGIF3itekS/0TrMWwVY=\", false, function () {\n  return [useTable];\n});\n\n_c = ReactTable;\n\nconst ColumnDragDrop = _ref2 => {\n  _s2();\n\n  let {\n    data\n  } = _ref2;\n  const columns = useMemo(() => [{\n    Header: 'First Name',\n    accessor: 'firstName'\n  }, {\n    Header: 'Last Name',\n    accessor: 'lastName'\n  }, {\n    Header: 'Email',\n    accessor: 'email'\n  }, {\n    Header: 'Age',\n    accessor: 'age',\n    className: 'cell-right'\n  }, {\n    Header: 'Visits',\n    accessor: 'visits',\n    className: 'cell-right'\n  }, {\n    Header: 'Status',\n    accessor: 'status',\n    Cell: _ref3 => {\n      let {\n        value\n      } = _ref3;\n\n      switch (value) {\n        case 'Complicated':\n          return /*#__PURE__*/_jsxDEV(Chip, {\n            color: \"error\",\n            label: \"Complicated\",\n            size: \"small\",\n            variant: \"light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 22\n          }, this);\n\n        case 'Relationship':\n          return /*#__PURE__*/_jsxDEV(Chip, {\n            color: \"success\",\n            label: \"Relationship\",\n            size: \"small\",\n            variant: \"light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 22\n          }, this);\n\n        case 'Single':\n        default:\n          return /*#__PURE__*/_jsxDEV(Chip, {\n            color: \"info\",\n            label: \"Single\",\n            size: \"small\",\n            variant: \"light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 22\n          }, this);\n      }\n    }\n  }, {\n    Header: 'Profile Progress',\n    accessor: 'progress',\n    Cell: _ref4 => {\n      let {\n        value\n      } = _ref4;\n      return /*#__PURE__*/_jsxDEV(LinearWithLabel, {\n        value: value,\n        sx: {\n          minWidth: 75\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 35\n      }, this);\n    }\n  }], []);\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"Column Drag & Drop (Ordering)\",\n    content: false,\n    children: /*#__PURE__*/_jsxDEV(ScrollX, {\n      children: /*#__PURE__*/_jsxDEV(DndProvider, {\n        backend: HTML5Backend,\n        children: [/*#__PURE__*/_jsxDEV(ReactTable, {\n          columns: columns,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DragPreview, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ColumnDragDrop, \"erkfbBpUuAY09jdvhSOqc0XsEHQ=\");\n\n_c2 = ColumnDragDrop;\nexport default ColumnDragDrop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReactTable\");\n$RefreshReg$(_c2, \"ColumnDragDrop\");","map":{"version":3,"names":["useMemo","Chip","Table","TableBody","TableCell","TableHead","TableRow","useColumnOrder","useTable","update","DndProvider","HTML5Backend","MainCard","ScrollX","LinearWithLabel","DraggableHeader","DragPreview","ReactTable","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setColumnOrder","state","columnOrder","initialState","reorder","item","newIndex","index","currentIndex","dragRecord","$splice","map","headerGroup","getHeaderGroupProps","headers","column","i","getHeaderProps","className","render","id","row","getRowProps","cells","cell","getCellProps","ColumnDragDrop","Header","accessor","Cell","value","minWidth"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/tables/react-table/ColumnDragDrop.tsx"],"sourcesContent":["import { useMemo } from 'react';\n\n// material-ui\nimport { Chip, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\n\n// third-party\nimport { useColumnOrder, useTable } from 'react-table';\nimport update from 'immutability-helper';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\n// project import\nimport MainCard from 'components/MainCard';\nimport ScrollX from 'components/ScrollX';\nimport LinearWithLabel from 'components/@extended/Progress/LinearWithLabel';\nimport { DraggableHeader, DragPreview } from 'components/third-party/ReactTable';\n\n// ==============================|| REACT TABLE ||============================== //\n\nfunction ReactTable({ columns, data }: any) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    // @ts-ignore\n    setColumnOrder,\n    // @ts-ignore\n    state: { columnOrder }\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        // @ts-ignore\n        columnOrder: ['firstName', 'lastName', 'email', 'age', 'visits', 'status', 'progress']\n      }\n    },\n    useColumnOrder\n  );\n\n  const reorder = (item: any, newIndex: number) => {\n    const { index: currentIndex } = item;\n\n    const dragRecord = columnOrder[currentIndex];\n\n    setColumnOrder(\n      update(columnOrder, {\n        $splice: [\n          [currentIndex, 1],\n          [newIndex, 0, dragRecord]\n        ]\n      })\n    );\n  };\n\n  return (\n    <Table {...getTableProps()}>\n      <TableHead>\n        {headerGroups.map((headerGroup) => (\n          <TableRow {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column: any, i: number) => (\n              <TableCell {...column.getHeaderProps([{ className: column.className }])}>\n                <DraggableHeader reorder={reorder} key={column.id} column={column} index={i}>\n                  {column.render('Header')}\n                </DraggableHeader>\n              </TableCell>\n            ))}\n          </TableRow>\n        ))}\n      </TableHead>\n      <TableBody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <TableRow {...row.getRowProps()}>\n              {row.cells.map((cell: any) => (\n                <TableCell {...cell.getCellProps([{ className: cell.column.className }])}>{cell.render('Cell')}</TableCell>\n              ))}\n            </TableRow>\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\n\n// ==============================|| REACT TABLE - COLUMN DRAG & DROP ||============================== //\n\nconst ColumnDragDrop = ({ data }: { data: any }) => {\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'First Name',\n        accessor: 'firstName'\n      },\n      {\n        Header: 'Last Name',\n        accessor: 'lastName'\n      },\n      {\n        Header: 'Email',\n        accessor: 'email'\n      },\n      {\n        Header: 'Age',\n        accessor: 'age',\n        className: 'cell-right'\n      },\n      {\n        Header: 'Visits',\n        accessor: 'visits',\n        className: 'cell-right'\n      },\n      {\n        Header: 'Status',\n        accessor: 'status',\n        Cell: ({ value }: any) => {\n          switch (value) {\n            case 'Complicated':\n              return <Chip color=\"error\" label=\"Complicated\" size=\"small\" variant=\"light\" />;\n            case 'Relationship':\n              return <Chip color=\"success\" label=\"Relationship\" size=\"small\" variant=\"light\" />;\n            case 'Single':\n            default:\n              return <Chip color=\"info\" label=\"Single\" size=\"small\" variant=\"light\" />;\n          }\n        }\n      },\n      {\n        Header: 'Profile Progress',\n        accessor: 'progress',\n        Cell: ({ value }: any) => <LinearWithLabel value={value} sx={{ minWidth: 75 }} />\n      }\n    ],\n    []\n  );\n\n  return (\n    <MainCard title=\"Column Drag & Drop (Ordering)\" content={false}>\n      <ScrollX>\n        <DndProvider backend={HTML5Backend}>\n          <ReactTable columns={columns} data={data} />\n          <DragPreview />\n        </DndProvider>\n      </ScrollX>\n    </MainCard>\n  );\n};\n\nexport default ColumnDragDrop;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}