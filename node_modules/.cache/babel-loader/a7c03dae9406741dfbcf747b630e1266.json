{"ast":null,"code":"// third-party\nimport { Chance } from 'chance';\nimport { filter } from 'lodash'; // project imports\n\nimport services from 'utils/mockAdapter'; // types\n\nconst chance = new Chance();\nlet subtotal;\nlet result;\nlet latestProducts;\nlet newProduct;\nlet inCartProduct;\nlet oldSubTotal;\nlet amount;\nlet newShipping; // ==============================|| MOCK SERVICES ||============================== //\n\nservices.onPost('/api/cart/add').reply(config => {\n  try {\n    var _newProduct;\n\n    const {\n      product,\n      products\n    } = JSON.parse(config.data);\n    newProduct = { ...product,\n      itemId: chance.timestamp()\n    };\n    subtotal = ((_newProduct = newProduct) === null || _newProduct === void 0 ? void 0 : _newProduct.quantity) * newProduct.offerPrice;\n    inCartProduct = filter(products, {\n      id: newProduct.id,\n      color: newProduct.color,\n      size: newProduct.size\n    });\n\n    if (inCartProduct && inCartProduct.length > 0) {\n      const newProducts = products.map(item => {\n        var _newProduct2, _newProduct3;\n\n        if (((_newProduct2 = newProduct) === null || _newProduct2 === void 0 ? void 0 : _newProduct2.id) === item.id && ((_newProduct3 = newProduct) === null || _newProduct3 === void 0 ? void 0 : _newProduct3.color) === item.color) {\n          return { ...newProduct,\n            quantity: newProduct.quantity + inCartProduct[0].quantity\n          };\n        }\n\n        return item;\n      });\n      latestProducts = newProducts;\n    } else {\n      latestProducts = [...products, newProduct];\n    }\n\n    return [200, {\n      products: latestProducts,\n      subtotal\n    }];\n  } catch (err) {\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nservices.onPost('/api/cart/remove').reply(config => {\n  try {\n    const {\n      id,\n      products\n    } = JSON.parse(config.data);\n    result = filter(products, {\n      itemId: id\n    });\n    subtotal = result[0].quantity * result[0].offerPrice;\n    const newProducts = filter(products, item => item.itemId !== id);\n    return [200, {\n      products: newProducts,\n      subtotal\n    }];\n  } catch (err) {\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nservices.onPost('/api/cart/update').reply(config => {\n  try {\n    const {\n      id,\n      quantity,\n      products\n    } = JSON.parse(config.data);\n    result = filter(products, {\n      itemId: id\n    });\n    subtotal = quantity * result[0].offerPrice;\n    oldSubTotal = 0;\n    latestProducts = products.map(item => {\n      if (id === item.itemId) {\n        oldSubTotal = item.quantity * (item.offerPrice || 0);\n        return { ...item,\n          quantity: quantity\n        };\n      }\n\n      return item;\n    });\n    return [200, {\n      products: latestProducts,\n      oldSubTotal,\n      subtotal\n    }];\n  } catch (err) {\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nservices.onPost('/api/cart/billing-address').reply(config => {\n  try {\n    const {\n      address\n    } = JSON.parse(config.data);\n    return [200, {\n      billing: address\n    }];\n  } catch (err) {\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nservices.onPost('/api/cart/discount').reply(config => {\n  try {\n    const {\n      total,\n      code\n    } = JSON.parse(config.data);\n    amount = 0;\n\n    if (total > 0) {\n      switch (code) {\n        case 'MANTIS50':\n          amount = chance.integer({\n            min: 1,\n            max: total < 49 ? total : 49\n          });\n          break;\n\n        case 'FLAT05':\n          amount = total < 5 ? total : 5;\n          break;\n\n        case 'SUB150':\n          amount = total < 150 ? total : 150;\n          break;\n\n        case 'UPTO200':\n          amount = chance.integer({\n            min: 1,\n            max: total < 199 ? total : 199\n          });\n          break;\n\n        default:\n          amount = 0;\n      }\n    }\n\n    return [200, {\n      amount\n    }];\n  } catch (err) {\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nservices.onPost('/api/cart/shipping-charge').reply(config => {\n  try {\n    const {\n      shipping,\n      charge\n    } = JSON.parse(config.data);\n    newShipping = 0;\n\n    if (shipping > 0 && charge === 'free') {\n      newShipping = -5;\n    }\n\n    if (charge === 'fast') {\n      newShipping = 5;\n    }\n\n    return [200, {\n      shipping: charge === 'fast' ? 5 : 0,\n      newShipping,\n      type: charge\n    }];\n  } catch (err) {\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nservices.onPost('/api/cart/payment-method').reply(config => {\n  try {\n    const {\n      method\n    } = JSON.parse(config.data);\n    return [200, {\n      method: method\n    }];\n  } catch (err) {\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nservices.onPost('/api/cart/payment-card').reply(config => {\n  try {\n    const {\n      card\n    } = JSON.parse(config.data);\n    return [200, {\n      card: card\n    }];\n  } catch (err) {\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nservices.onPost('/api/cart/reset').reply(200, {});","map":{"version":3,"names":["Chance","filter","services","chance","subtotal","result","latestProducts","newProduct","inCartProduct","oldSubTotal","amount","newShipping","onPost","reply","config","product","products","JSON","parse","data","itemId","timestamp","quantity","offerPrice","id","color","size","length","newProducts","map","item","err","message","address","billing","total","code","integer","min","max","shipping","charge","type","method","card"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/_api/cart.ts"],"sourcesContent":["// third-party\nimport { Chance } from 'chance';\nimport { filter } from 'lodash';\n\n// project imports\nimport services from 'utils/mockAdapter';\n\n// types\nimport { CartProductStateProps, ProductCardProps } from 'types/cart';\n\nconst chance = new Chance();\n\nlet subtotal: number;\nlet result;\n\nlet latestProducts: CartProductStateProps[];\nlet newProduct: CartProductStateProps;\nlet inCartProduct: CartProductStateProps[];\nlet oldSubTotal;\nlet amount;\nlet newShipping;\n\n// ==============================|| MOCK SERVICES ||============================== //\n\nservices.onPost('/api/cart/add').reply((config) => {\n  try {\n    const { product, products } = JSON.parse(config.data);\n\n    newProduct = { ...product!, itemId: chance.timestamp() };\n    subtotal = newProduct?.quantity * newProduct.offerPrice;\n\n    inCartProduct = filter(products, {\n      id: newProduct.id,\n      color: newProduct.color,\n      size: newProduct.size\n    });\n    if (inCartProduct && inCartProduct.length > 0) {\n      const newProducts = products.map((item: CartProductStateProps) => {\n        if (newProduct?.id === item.id && newProduct?.color === item.color) {\n          return { ...newProduct, quantity: newProduct.quantity + inCartProduct[0].quantity };\n        }\n        return item;\n      });\n      latestProducts = newProducts;\n    } else {\n      latestProducts = [...products, newProduct];\n    }\n\n    return [200, { products: latestProducts, subtotal }];\n  } catch (err) {\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nservices.onPost('/api/cart/remove').reply((config) => {\n  try {\n    const { id, products } = JSON.parse(config.data);\n\n    result = filter(products, { itemId: id });\n    subtotal = result[0].quantity * result[0].offerPrice;\n\n    const newProducts = filter(products, (item) => item.itemId !== id);\n\n    return [200, { products: newProducts, subtotal }];\n  } catch (err) {\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nservices.onPost('/api/cart/update').reply((config) => {\n  try {\n    const { id, quantity, products } = JSON.parse(config.data);\n\n    result = filter(products, { itemId: id });\n    subtotal = quantity! * result[0].offerPrice;\n    oldSubTotal = 0;\n\n    latestProducts = products.map((item: ProductCardProps) => {\n      if (id === item.itemId) {\n        oldSubTotal = item.quantity * (item.offerPrice || 0);\n        return { ...item, quantity: quantity! };\n      }\n      return item;\n    });\n\n    return [200, { products: latestProducts, oldSubTotal, subtotal }];\n  } catch (err) {\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nservices.onPost('/api/cart/billing-address').reply((config) => {\n  try {\n    const { address } = JSON.parse(config.data);\n    return [200, { billing: address! }];\n  } catch (err) {\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nservices.onPost('/api/cart/discount').reply((config) => {\n  try {\n    const { total, code } = JSON.parse(config.data);\n    amount = 0;\n    if (total > 0) {\n      switch (code) {\n        case 'MANTIS50':\n          amount = chance.integer({ min: 1, max: total < 49 ? total : 49 });\n          break;\n        case 'FLAT05':\n          amount = total < 5 ? total : 5;\n          break;\n        case 'SUB150':\n          amount = total < 150 ? total : 150;\n          break;\n        case 'UPTO200':\n          amount = chance.integer({ min: 1, max: total < 199 ? total : 199 });\n          break;\n        default:\n          amount = 0;\n      }\n    }\n\n    return [200, { amount }];\n  } catch (err) {\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nservices.onPost('/api/cart/shipping-charge').reply((config) => {\n  try {\n    const { shipping, charge } = JSON.parse(config.data);\n    newShipping = 0;\n    if (shipping > 0 && charge === 'free') {\n      newShipping = -5;\n    }\n    if (charge === 'fast') {\n      newShipping = 5;\n    }\n\n    return [200, { shipping: charge === 'fast' ? 5 : 0, newShipping, type: charge! }];\n  } catch (err) {\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nservices.onPost('/api/cart/payment-method').reply((config) => {\n  try {\n    const { method } = JSON.parse(config.data);\n    return [200, { method: method! }];\n  } catch (err) {\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nservices.onPost('/api/cart/payment-card').reply((config) => {\n  try {\n    const { card } = JSON.parse(config.data);\n    return [200, { card: card! }];\n  } catch (err) {\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nservices.onPost('/api/cart/reset').reply(200, {});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}