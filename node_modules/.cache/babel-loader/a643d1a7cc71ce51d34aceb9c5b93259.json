{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/tables/react-table/BasicTable.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useMemo } from 'react'; // material-ui\n\nimport { Chip, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material'; // third-party\n\nimport { useTable } from 'react-table'; // project import\n\nimport MainCard from 'components/MainCard';\nimport ScrollX from 'components/ScrollX';\nimport LinearWithLabel from 'components/@extended/Progress/LinearWithLabel'; // ==============================|| REACT TABLE ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReactTable(_ref) {\n  _s();\n\n  let {\n    columns,\n    data,\n    striped\n  } = _ref;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(TableRow, { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(TableCell, { ...column.getHeaderProps([{\n            className: column.className\n          }]),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, { ...getTableBodyProps(),\n      ...(striped && {\n        className: 'striped'\n      }),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(TableRow, { ...row.getRowProps(),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(TableCell, { ...cell.getCellProps([{\n              className: cell.column.className\n            }]),\n            children: cell.render('Cell')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n} // ==============================|| REACT TABLE - BASIC ||============================== //\n\n\n_s(ReactTable, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n});\n\n_c = ReactTable;\n\nconst BasicTable = _ref2 => {\n  _s2();\n\n  let {\n    data,\n    striped,\n    title\n  } = _ref2;\n  const columns = useMemo(() => [{\n    Header: 'First Name',\n    accessor: 'firstName'\n  }, {\n    Header: 'Last Name',\n    accessor: 'lastName'\n  }, {\n    Header: 'Age',\n    accessor: 'age',\n    className: 'cell-right'\n  }, {\n    Header: 'Visits',\n    accessor: 'visits',\n    className: 'cell-right'\n  }, {\n    Header: 'Status',\n    accessor: 'status',\n    Cell: _ref3 => {\n      let {\n        value\n      } = _ref3;\n\n      switch (value) {\n        case 'Complicated':\n          return /*#__PURE__*/_jsxDEV(Chip, {\n            color: \"error\",\n            label: \"Complicated\",\n            size: \"small\",\n            variant: \"light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 22\n          }, this);\n\n        case 'Relationship':\n          return /*#__PURE__*/_jsxDEV(Chip, {\n            color: \"success\",\n            label: \"Relationship\",\n            size: \"small\",\n            variant: \"light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 22\n          }, this);\n\n        case 'Single':\n        default:\n          return /*#__PURE__*/_jsxDEV(Chip, {\n            color: \"info\",\n            label: \"Single\",\n            size: \"small\",\n            variant: \"light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 22\n          }, this);\n      }\n    }\n  }, {\n    Header: 'Profile Progress',\n    accessor: 'progress',\n    Cell: _ref4 => {\n      let {\n        value\n      } = _ref4;\n      return /*#__PURE__*/_jsxDEV(LinearWithLabel, {\n        value: value,\n        sx: {\n          minWidth: 75\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 35\n      }, this);\n    }\n  }], []);\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    content: false,\n    title: title,\n    children: /*#__PURE__*/_jsxDEV(ScrollX, {\n      children: /*#__PURE__*/_jsxDEV(ReactTable, {\n        columns: columns,\n        data: data,\n        striped: striped\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(BasicTable, \"erkfbBpUuAY09jdvhSOqc0XsEHQ=\");\n\n_c2 = BasicTable;\nexport default BasicTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReactTable\");\n$RefreshReg$(_c2, \"BasicTable\");","map":{"version":3,"names":["useMemo","Chip","Table","TableBody","TableCell","TableHead","TableRow","useTable","MainCard","ScrollX","LinearWithLabel","ReactTable","columns","data","striped","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","className","render","row","i","getRowProps","cells","cell","getCellProps","BasicTable","title","Header","accessor","Cell","value","minWidth"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/tables/react-table/BasicTable.tsx"],"sourcesContent":["import { useMemo } from 'react';\n\n// material-ui\nimport { Chip, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\n\n// third-party\nimport { useTable } from 'react-table';\n\n// project import\nimport MainCard from 'components/MainCard';\nimport ScrollX from 'components/ScrollX';\nimport LinearWithLabel from 'components/@extended/Progress/LinearWithLabel';\n\n// ==============================|| REACT TABLE ||============================== //\n\nfunction ReactTable({ columns, data, striped }: any) {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable({\n    columns,\n    data\n  });\n\n  return (\n    <Table {...getTableProps()}>\n      <TableHead>\n        {headerGroups.map((headerGroup) => (\n          <TableRow {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column: any) => (\n              <TableCell {...column.getHeaderProps([{ className: column.className }])}>{column.render('Header')}</TableCell>\n            ))}\n          </TableRow>\n        ))}\n      </TableHead>\n      <TableBody {...getTableBodyProps()} {...(striped && { className: 'striped' })}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <TableRow {...row.getRowProps()}>\n              {row.cells.map((cell: any) => (\n                <TableCell {...cell.getCellProps([{ className: cell.column.className }])}>{cell.render('Cell')}</TableCell>\n              ))}\n            </TableRow>\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\n\n// ==============================|| REACT TABLE - BASIC ||============================== //\n\nconst BasicTable = ({ data, striped, title }: { data: any; striped?: boolean; title?: string }) => {\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'First Name',\n        accessor: 'firstName'\n      },\n      {\n        Header: 'Last Name',\n        accessor: 'lastName'\n      },\n      {\n        Header: 'Age',\n        accessor: 'age',\n        className: 'cell-right'\n      },\n      {\n        Header: 'Visits',\n        accessor: 'visits',\n        className: 'cell-right'\n      },\n      {\n        Header: 'Status',\n        accessor: 'status',\n        Cell: ({ value }: any) => {\n          switch (value) {\n            case 'Complicated':\n              return <Chip color=\"error\" label=\"Complicated\" size=\"small\" variant=\"light\" />;\n            case 'Relationship':\n              return <Chip color=\"success\" label=\"Relationship\" size=\"small\" variant=\"light\" />;\n            case 'Single':\n            default:\n              return <Chip color=\"info\" label=\"Single\" size=\"small\" variant=\"light\" />;\n          }\n        }\n      },\n      {\n        Header: 'Profile Progress',\n        accessor: 'progress',\n        Cell: ({ value }: any) => <LinearWithLabel value={value} sx={{ minWidth: 75 }} />\n      }\n    ],\n    []\n  );\n\n  return (\n    <MainCard content={false} title={title}>\n      <ScrollX>\n        <ReactTable columns={columns} data={data} striped={striped} />\n      </ScrollX>\n    </MainCard>\n  );\n};\n\nexport default BasicTable;\n"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,OAAxB,C,CAEA;;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,EAAiCC,SAAjC,EAA4CC,SAA5C,EAAuDC,QAAvD,QAAuE,eAAvE,C,CAEA;;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,eAAP,MAA4B,+CAA5B,C,CAEA;;;;AAEA,SAASC,UAAT,OAAqD;EAAA;;EAAA,IAAjC;IAAEC,OAAF;IAAWC,IAAX;IAAiBC;EAAjB,CAAiC;EACnD,MAAM;IAAEC,aAAF;IAAiBC,iBAAjB;IAAoCC,YAApC;IAAkDC,IAAlD;IAAwDC;EAAxD,IAAuEZ,QAAQ,CAAC;IACpFK,OADoF;IAEpFC;EAFoF,CAAD,CAArF;EAKA,oBACE,QAAC,KAAD,OAAWE,aAAa,EAAxB;IAAA,wBACE,QAAC,SAAD;MAAA,UACGE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBAChB,QAAC,QAAD,OAAcA,WAAW,CAACC,mBAAZ,EAAd;QAAA,UACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACvB,QAAC,SAAD,OAAeA,MAAM,CAACC,cAAP,CAAsB,CAAC;YAAEC,SAAS,EAAEF,MAAM,CAACE;UAApB,CAAD,CAAtB,CAAf;UAAA,UAA0EF,MAAM,CAACG,MAAP,CAAc,QAAd;QAA1E;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAUE,QAAC,SAAD,OAAeX,iBAAiB,EAAhC;MAAA,IAAyCF,OAAO,IAAI;QAAEY,SAAS,EAAE;MAAb,CAApD;MAAA,UACGR,IAAI,CAACE,GAAL,CAAS,CAACQ,GAAD,EAAMC,CAAN,KAAY;QACpBV,UAAU,CAACS,GAAD,CAAV;QACA,oBACE,QAAC,QAAD,OAAcA,GAAG,CAACE,WAAJ,EAAd;UAAA,UACGF,GAAG,CAACG,KAAJ,CAAUX,GAAV,CAAeY,IAAD,iBACb,QAAC,SAAD,OAAeA,IAAI,CAACC,YAAL,CAAkB,CAAC;cAAEP,SAAS,EAAEM,IAAI,CAACR,MAAL,CAAYE;YAAzB,CAAD,CAAlB,CAAf;YAAA,UAA2EM,IAAI,CAACL,MAAL,CAAY,MAAZ;UAA3E;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA,QADF;MAOD,CATA;IADH;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,C,CAED;;;GAjCShB,U;UACsEJ,Q;;;KADtEI,U;;AAmCT,MAAMuB,UAAU,GAAG,SAAgF;EAAA;;EAAA,IAA/E;IAAErB,IAAF;IAAQC,OAAR;IAAiBqB;EAAjB,CAA+E;EACjG,MAAMvB,OAAO,GAAGZ,OAAO,CACrB,MAAM,CACJ;IACEoC,MAAM,EAAE,YADV;IAEEC,QAAQ,EAAE;EAFZ,CADI,EAKJ;IACED,MAAM,EAAE,WADV;IAEEC,QAAQ,EAAE;EAFZ,CALI,EASJ;IACED,MAAM,EAAE,KADV;IAEEC,QAAQ,EAAE,KAFZ;IAGEX,SAAS,EAAE;EAHb,CATI,EAcJ;IACEU,MAAM,EAAE,QADV;IAEEC,QAAQ,EAAE,QAFZ;IAGEX,SAAS,EAAE;EAHb,CAdI,EAmBJ;IACEU,MAAM,EAAE,QADV;IAEEC,QAAQ,EAAE,QAFZ;IAGEC,IAAI,EAAE,SAAoB;MAAA,IAAnB;QAAEC;MAAF,CAAmB;;MACxB,QAAQA,KAAR;QACE,KAAK,aAAL;UACE,oBAAO,QAAC,IAAD;YAAM,KAAK,EAAC,OAAZ;YAAoB,KAAK,EAAC,aAA1B;YAAwC,IAAI,EAAC,OAA7C;YAAqD,OAAO,EAAC;UAA7D;YAAA;YAAA;YAAA;UAAA,QAAP;;QACF,KAAK,cAAL;UACE,oBAAO,QAAC,IAAD;YAAM,KAAK,EAAC,SAAZ;YAAsB,KAAK,EAAC,cAA5B;YAA2C,IAAI,EAAC,OAAhD;YAAwD,OAAO,EAAC;UAAhE;YAAA;YAAA;YAAA;UAAA,QAAP;;QACF,KAAK,QAAL;QACA;UACE,oBAAO,QAAC,IAAD;YAAM,KAAK,EAAC,MAAZ;YAAmB,KAAK,EAAC,QAAzB;YAAkC,IAAI,EAAC,OAAvC;YAA+C,OAAO,EAAC;UAAvD;YAAA;YAAA;YAAA;UAAA,QAAP;MAPJ;IASD;EAbH,CAnBI,EAkCJ;IACEH,MAAM,EAAE,kBADV;IAEEC,QAAQ,EAAE,UAFZ;IAGEC,IAAI,EAAE;MAAA,IAAC;QAAEC;MAAF,CAAD;MAAA,oBAAoB,QAAC,eAAD;QAAiB,KAAK,EAAEA,KAAxB;QAA+B,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAZ;MAAnC;QAAA;QAAA;QAAA;MAAA,QAApB;IAAA;EAHR,CAlCI,CADe,EAyCrB,EAzCqB,CAAvB;EA4CA,oBACE,QAAC,QAAD;IAAU,OAAO,EAAE,KAAnB;IAA0B,KAAK,EAAEL,KAAjC;IAAA,uBACE,QAAC,OAAD;MAAA,uBACE,QAAC,UAAD;QAAY,OAAO,EAAEvB,OAArB;QAA8B,IAAI,EAAEC,IAApC;QAA0C,OAAO,EAAEC;MAAnD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CApDD;;IAAMoB,U;;MAAAA,U;AAsDN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}