{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/components-overview/autocomplete/GitHubAutocomplete.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react'; // material-ui\n\nimport { useTheme, styled } from '@mui/material/styles';\nimport { autocompleteClasses, Autocomplete, Box, ButtonBase, ClickAwayListener, InputBase, Popper } from '@mui/material'; // project import\n\nimport MainCard from 'components/MainCard'; // assets\n\nimport { CloseOutlined, CheckOutlined, SettingFilled } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledAutocompletePopper = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [`& .${autocompleteClasses.paper}`]: {\n      boxShadow: 'none',\n      margin: 0,\n      color: 'inherit',\n      fontSize: 13\n    },\n    [`& .${autocompleteClasses.listbox}`]: {\n      backgroundColor: theme.palette.mode === 'light' ? '#fff' : '#1c2128',\n      padding: 0,\n      [`& .${autocompleteClasses.option}`]: {\n        minHeight: 'auto',\n        alignItems: 'flex-start',\n        padding: 8,\n        borderBottom: `1px solid  ${theme.palette.mode === 'light' ? ' #eaecef' : '#30363d'}`,\n        '&[aria-selected=\"true\"]': {\n          backgroundColor: 'transparent'\n        },\n        '&[data-focus=\"true\"], &[data-focus=\"true\"][aria-selected=\"true\"]': {\n          backgroundColor: theme.palette.action.hover\n        }\n      }\n    },\n    [`&.${autocompleteClasses.popperDisablePortal}`]: {\n      position: 'relative'\n    }\n  };\n});\n\nfunction PopperComponent(_ref2) {\n  let {\n    disablePortal,\n    anchorEl,\n    open,\n    ...other\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(StyledAutocompletePopper, { ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n}\n\n_c = PopperComponent;\nconst StyledPopper = styled(Popper)(_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return {\n    border: `1px solid ${theme.palette.mode === 'light' ? '#e1e4e8' : '#30363d'}`,\n    boxShadow: `0 8px 24px ${theme.palette.mode === 'light' ? 'rgba(149, 157, 165, 0.2)' : 'rgb(1, 4, 9)'}`,\n    borderRadius: 6,\n    width: 300,\n    zIndex: theme.zIndex.modal,\n    fontSize: 13,\n    color: theme.palette.mode === 'light' ? '#24292e' : '#c9d1d9',\n    backgroundColor: theme.palette.mode === 'light' ? '#fff' : '#1c2128'\n  };\n});\nconst StyledInput = styled(InputBase)(_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return {\n    padding: 10,\n    width: '100%',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    '& input': {\n      borderRadius: 4,\n      backgroundColor: theme.palette.background.paper,\n      padding: 8,\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      border: `1px solid ${theme.palette.primary.main}`,\n      fontSize: 14,\n      '&:focus-visible': {\n        boxShadow: theme.customShadows.primary,\n        borderColor: theme.palette.primary.main\n      }\n    }\n  };\n});\nconst Button = styled(ButtonBase)(_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return {\n    fontSize: 13,\n    width: '100%',\n    textAlign: 'left',\n    marginBottom: 8,\n    color: theme.palette.text.primary,\n    fontWeight: 600,\n    '&:hover': {\n      color: theme.palette.primary.main\n    },\n    '&:focus-visible': {\n      borderRadius: 2,\n      outline: `2px solid ${theme.palette.secondary.dark}`,\n      outlineOffset: 2\n    },\n    '& span': {\n      width: '100%'\n    },\n    '& svg': {\n      width: 16,\n      height: 16\n    }\n  };\n});\nexport default function GitHubLabel() {\n  _s();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [value, setValue] = React.useState([labels[1], labels[11]]);\n  const [pendingValue, setPendingValue] = React.useState([]);\n  const theme = useTheme();\n\n  const handleClick = event => {\n    setPendingValue(value);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setValue(pendingValue);\n\n    if (anchorEl) {\n      anchorEl.focus();\n    }\n\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'github-label' : undefined;\n  const gitAutocompleteCodeString = `// GitHubAutocomplete.tsx\n<Box sx={{ width: 221, fontSize: 13 }}>\n  <Button\n    disableRipple\n    aria-describedby={id}\n    onClick={handleClick}\n    sx={{ justifyContent: 'space-between', '& span': { width: 'auto' } }}\n  >\n    <span>Labels</span>\n    <SettingFilled />\n  </Button>\n  {value.map((label, index) => (\n    <Box\n      key={index}\n      sx={{\n        mt: '3px',\n        height: 20,\n        padding: '.15em 4px',\n        fontWeight: 600,\n        lineHeight: '15px',\n        borderRadius: '2px'\n      }}\n      style={{\n        backgroundColor: label.color,\n        color: theme.palette.getContrastText(label.color)\n      }}\n    >\n      {label.name}\n    </Box>\n  ))}\n</Box>\n<StyledPopper id={id} open={open} anchorEl={anchorEl} placement=\"bottom-start\">\n  <ClickAwayListener onClickAway={handleClose}>\n    <div>\n      <Box\n        sx={{\n          borderBottom: '1px solid {theme.palette.mode === 'light' ? '#eaecef' : '#30363d'}',\n          padding: '8px 10px',\n          fontWeight: 600\n        }}\n      >\n        Apply labels to this pull request\n      </Box>\n      <Autocomplete\n        open\n        multiple\n        onClose={(event: React.ChangeEvent<{}>, reason: AutocompleteCloseReason) => {\n          if (reason === 'escape') {\n            handleClose();\n          }\n        }}\n        value={pendingValue}\n        onChange={(event, newValue, reason) => {\n          if (event.type === 'keydown' && (event as React.KeyboardEvent).key === 'Backspace' && reason === 'removeOption') {\n            return;\n          }\n          setPendingValue(newValue);\n        }}\n        disableCloseOnSelect\n        PopperComponent={PopperComponent}\n        renderTags={() => null}\n        noOptionsText=\"No labels\"\n        renderOption={(props, option, { selected }) => (\n          <li {...props}>\n            <Box\n              component={CheckOutlined}\n              sx={{ width: 17, height: 17, mr: '5px', ml: '-2px', mt: 0.25 }}\n              style={{\n                visibility: selected ? 'visible' : 'hidden'\n              }}\n            />\n            <Box\n              component=\"span\"\n              sx={{\n                width: 14,\n                height: 14,\n                flexShrink: 0,\n                borderRadius: '3px',\n                mr: 1,\n                mt: '2px'\n              }}\n              style={{ backgroundColor: option.color }}\n            />\n            <Box\n              sx={{\n                flexGrow: 1,\n                '& span': {\n                  color: theme.palette.mode === 'light' ? '#586069' : '#8b949e'\n                }\n              }}\n            >\n              {option.name}\n              <br />\n              <span>{option.description}</span>\n            </Box>\n            <Box\n              component={CloseOutlined}\n              sx={{ opacity: 0.6, width: 18, height: 18, mt: 0.25 }}\n              style={{\n                visibility: selected ? 'visible' : 'hidden'\n              }}\n            />\n          </li>\n        )}\n        options={[...labels].sort((a, b) => {\n          // Display the selected labels first.\n          let ai = value.indexOf(a);\n          ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\n          let bi = value.indexOf(b);\n          bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\n          return ai - bi;\n        })}\n        getOptionLabel={(option) => option.name}\n        renderInput={(params) => (\n          <StyledInput ref={params.InputProps.ref} inputProps={params.inputProps} autoFocus placeholder=\"Filter labels\" />\n        )}\n      />\n    </div>\n  </ClickAwayListener>\n</StyledPopper>`;\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"GitHub's Picker\",\n    codeString: gitAutocompleteCodeString,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: 221,\n        fontSize: 13\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        disableRipple: true,\n        \"aria-describedby\": id,\n        onClick: handleClick,\n        sx: {\n          justifyContent: 'space-between',\n          '& span': {\n            width: 'auto'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Labels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SettingFilled, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), value.map((label, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: '3px',\n          height: 20,\n          padding: '.15em 4px',\n          fontWeight: 600,\n          lineHeight: '15px',\n          borderRadius: '2px'\n        },\n        style: {\n          backgroundColor: label.color,\n          color: theme.palette.getContrastText(label.color)\n        },\n        children: label.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledPopper, {\n      id: id,\n      open: open,\n      anchorEl: anchorEl,\n      placement: \"bottom-start\",\n      children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n        onClickAway: handleClose,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              borderBottom: `1px solid ${theme.palette.mode === 'light' ? '#eaecef' : '#30363d'}`,\n              padding: '8px 10px',\n              fontWeight: 600\n            },\n            children: \"Apply labels to this pull request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            open: true,\n            multiple: true,\n            onClose: (event, reason) => {\n              if (reason === 'escape') {\n                handleClose();\n              }\n            },\n            value: pendingValue,\n            onChange: (event, newValue, reason) => {\n              if (event.type === 'keydown' && event.key === 'Backspace' && reason === 'removeOption') {\n                return;\n              }\n\n              setPendingValue(newValue);\n            },\n            disableCloseOnSelect: true,\n            PopperComponent: PopperComponent,\n            renderTags: () => null,\n            noOptionsText: \"No labels\",\n            renderOption: (props, option, _ref6) => {\n              let {\n                selected\n              } = _ref6;\n              return /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  component: CheckOutlined,\n                  sx: {\n                    width: 17,\n                    height: 17,\n                    mr: '5px',\n                    ml: '-2px',\n                    mt: 0.25\n                  },\n                  style: {\n                    visibility: selected ? 'visible' : 'hidden'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  component: \"span\",\n                  sx: {\n                    width: 14,\n                    height: 14,\n                    flexShrink: 0,\n                    borderRadius: '3px',\n                    mr: 1,\n                    mt: '2px'\n                  },\n                  style: {\n                    backgroundColor: option.color\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    flexGrow: 1,\n                    '& span': {\n                      color: theme.palette.mode === 'light' ? '#586069' : '#8b949e'\n                    }\n                  },\n                  children: [option.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: option.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  component: CloseOutlined,\n                  sx: {\n                    opacity: 0.6,\n                    width: 18,\n                    height: 18,\n                    mt: 0.25\n                  },\n                  style: {\n                    visibility: selected ? 'visible' : 'hidden'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this);\n            },\n            options: [...labels].sort((a, b) => {\n              // Display the selected labels first.\n              let ai = value.indexOf(a);\n              ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\n              let bi = value.indexOf(b);\n              bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\n              return ai - bi;\n            }),\n            getOptionLabel: option => option.name,\n            renderInput: params => /*#__PURE__*/_jsxDEV(StyledInput, {\n              ref: params.InputProps.ref,\n              inputProps: params.inputProps,\n              autoFocus: true,\n              placeholder: \"Filter labels\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GitHubLabel, \"UyAsx6dCtG76CqnOl8slWn5TCaQ=\", false, function () {\n  return [useTheme];\n});\n\n_c2 = GitHubLabel;\n// From https://github.com/abdonrd/github-labels\nconst labels = [{\n  name: 'good first issue',\n  color: '#7057ff',\n  description: 'Good for newcomers'\n}, {\n  name: 'help wanted',\n  color: '#008672',\n  description: 'Extra attention is needed'\n}, {\n  name: 'priority: critical',\n  color: '#b60205',\n  description: ''\n}, {\n  name: 'priority: high',\n  color: '#d93f0b',\n  description: ''\n}, {\n  name: 'priority: low',\n  color: '#0e8a16',\n  description: ''\n}, {\n  name: 'priority: medium',\n  color: '#fbca04',\n  description: ''\n}, {\n  name: \"status: can't reproduce\",\n  color: '#fec1c1',\n  description: ''\n}, {\n  name: 'status: confirmed',\n  color: '#215cea',\n  description: ''\n}, {\n  name: 'status: duplicate',\n  color: '#cfd3d7',\n  description: 'This issue or pull request already exists'\n}, {\n  name: 'status: needs information',\n  color: '#fef2c0',\n  description: ''\n}, {\n  name: 'status: wont do/fix',\n  color: '#eeeeee',\n  description: 'This will not be worked on'\n}, {\n  name: 'type: bug',\n  color: '#d73a4a',\n  description: \"Something isn't working\"\n}, {\n  name: 'type: discussion',\n  color: '#d4c5f9',\n  description: ''\n}, {\n  name: 'type: documentation',\n  color: '#006b75',\n  description: ''\n}, {\n  name: 'type: enhancement',\n  color: '#84b6eb',\n  description: ''\n}, {\n  name: 'type: epic',\n  color: '#3e4b9e',\n  description: 'A theme of work that contain sub-tasks'\n}, {\n  name: 'type: feature request',\n  color: '#fbca04',\n  description: 'New feature or request'\n}, {\n  name: 'type: question',\n  color: '#d876e3',\n  description: 'Further information is requested'\n}];\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PopperComponent\");\n$RefreshReg$(_c2, \"GitHubLabel\");","map":{"version":3,"names":["React","useTheme","styled","autocompleteClasses","Autocomplete","Box","ButtonBase","ClickAwayListener","InputBase","Popper","MainCard","CloseOutlined","CheckOutlined","SettingFilled","StyledAutocompletePopper","theme","paper","boxShadow","margin","color","fontSize","listbox","backgroundColor","palette","mode","padding","option","minHeight","alignItems","borderBottom","action","hover","popperDisablePortal","position","PopperComponent","disablePortal","anchorEl","open","other","StyledPopper","border","borderRadius","width","zIndex","modal","StyledInput","divider","background","transition","transitions","create","primary","main","customShadows","borderColor","Button","textAlign","marginBottom","text","fontWeight","outline","secondary","dark","outlineOffset","height","GitHubLabel","setAnchorEl","useState","value","setValue","labels","pendingValue","setPendingValue","handleClick","event","currentTarget","handleClose","focus","Boolean","id","undefined","gitAutocompleteCodeString","justifyContent","map","label","index","mt","lineHeight","getContrastText","name","reason","newValue","type","key","props","selected","mr","ml","visibility","flexShrink","flexGrow","description","opacity","sort","a","b","ai","indexOf","length","bi","params","InputProps","ref","inputProps"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/components-overview/autocomplete/GitHubAutocomplete.tsx"],"sourcesContent":["import * as React from 'react';\n\n// material-ui\nimport { useTheme, styled } from '@mui/material/styles';\nimport {\n  autocompleteClasses,\n  Autocomplete,\n  AutocompleteCloseReason,\n  Box,\n  ButtonBase,\n  ClickAwayListener,\n  InputBase,\n  Popper\n} from '@mui/material';\n\n// project import\nimport MainCard from 'components/MainCard';\n\n// assets\nimport { CloseOutlined, CheckOutlined, SettingFilled } from '@ant-design/icons';\n\ninterface PopperComponentProps {\n  anchorEl?: any;\n  disablePortal?: boolean;\n  open: boolean;\n}\n\nconst StyledAutocompletePopper = styled('div')(({ theme }) => ({\n  [`& .${autocompleteClasses.paper}`]: {\n    boxShadow: 'none',\n    margin: 0,\n    color: 'inherit',\n    fontSize: 13\n  },\n  [`& .${autocompleteClasses.listbox}`]: {\n    backgroundColor: theme.palette.mode === 'light' ? '#fff' : '#1c2128',\n    padding: 0,\n    [`& .${autocompleteClasses.option}`]: {\n      minHeight: 'auto',\n      alignItems: 'flex-start',\n      padding: 8,\n      borderBottom: `1px solid  ${theme.palette.mode === 'light' ? ' #eaecef' : '#30363d'}`,\n      '&[aria-selected=\"true\"]': {\n        backgroundColor: 'transparent'\n      },\n      '&[data-focus=\"true\"], &[data-focus=\"true\"][aria-selected=\"true\"]': {\n        backgroundColor: theme.palette.action.hover\n      }\n    }\n  },\n  [`&.${autocompleteClasses.popperDisablePortal}`]: {\n    position: 'relative'\n  }\n}));\n\nfunction PopperComponent({ disablePortal, anchorEl, open, ...other }: PopperComponentProps) {\n  return <StyledAutocompletePopper {...other} />;\n}\n\nconst StyledPopper = styled(Popper)(({ theme }) => ({\n  border: `1px solid ${theme.palette.mode === 'light' ? '#e1e4e8' : '#30363d'}`,\n  boxShadow: `0 8px 24px ${theme.palette.mode === 'light' ? 'rgba(149, 157, 165, 0.2)' : 'rgb(1, 4, 9)'}`,\n  borderRadius: 6,\n  width: 300,\n  zIndex: theme.zIndex.modal,\n  fontSize: 13,\n  color: theme.palette.mode === 'light' ? '#24292e' : '#c9d1d9',\n  backgroundColor: theme.palette.mode === 'light' ? '#fff' : '#1c2128'\n}));\n\nconst StyledInput = styled(InputBase)(({ theme }) => ({\n  padding: 10,\n  width: '100%',\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  '& input': {\n    borderRadius: 4,\n    backgroundColor: theme.palette.background.paper,\n    padding: 8,\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    border: `1px solid ${theme.palette.primary.main}`,\n    fontSize: 14,\n    '&:focus-visible': {\n      boxShadow: theme.customShadows.primary,\n      borderColor: theme.palette.primary.main\n    }\n  }\n}));\n\nconst Button = styled(ButtonBase)(({ theme }) => ({\n  fontSize: 13,\n  width: '100%',\n  textAlign: 'left',\n  marginBottom: 8,\n  color: theme.palette.text.primary,\n  fontWeight: 600,\n  '&:hover': {\n    color: theme.palette.primary.main\n  },\n  '&:focus-visible': {\n    borderRadius: 2,\n    outline: `2px solid ${theme.palette.secondary.dark}`,\n    outlineOffset: 2\n  },\n  '& span': {\n    width: '100%'\n  },\n  '& svg': {\n    width: 16,\n    height: 16\n  }\n}));\n\nexport default function GitHubLabel() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [value, setValue] = React.useState<LabelType[]>([labels[1], labels[11]]);\n  const [pendingValue, setPendingValue] = React.useState<LabelType[]>([]);\n  const theme = useTheme();\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setPendingValue(value);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setValue(pendingValue);\n    if (anchorEl) {\n      anchorEl.focus();\n    }\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'github-label' : undefined;\n\n  const gitAutocompleteCodeString = `// GitHubAutocomplete.tsx\n<Box sx={{ width: 221, fontSize: 13 }}>\n  <Button\n    disableRipple\n    aria-describedby={id}\n    onClick={handleClick}\n    sx={{ justifyContent: 'space-between', '& span': { width: 'auto' } }}\n  >\n    <span>Labels</span>\n    <SettingFilled />\n  </Button>\n  {value.map((label, index) => (\n    <Box\n      key={index}\n      sx={{\n        mt: '3px',\n        height: 20,\n        padding: '.15em 4px',\n        fontWeight: 600,\n        lineHeight: '15px',\n        borderRadius: '2px'\n      }}\n      style={{\n        backgroundColor: label.color,\n        color: theme.palette.getContrastText(label.color)\n      }}\n    >\n      {label.name}\n    </Box>\n  ))}\n</Box>\n<StyledPopper id={id} open={open} anchorEl={anchorEl} placement=\"bottom-start\">\n  <ClickAwayListener onClickAway={handleClose}>\n    <div>\n      <Box\n        sx={{\n          borderBottom: '1px solid {theme.palette.mode === 'light' ? '#eaecef' : '#30363d'}',\n          padding: '8px 10px',\n          fontWeight: 600\n        }}\n      >\n        Apply labels to this pull request\n      </Box>\n      <Autocomplete\n        open\n        multiple\n        onClose={(event: React.ChangeEvent<{}>, reason: AutocompleteCloseReason) => {\n          if (reason === 'escape') {\n            handleClose();\n          }\n        }}\n        value={pendingValue}\n        onChange={(event, newValue, reason) => {\n          if (event.type === 'keydown' && (event as React.KeyboardEvent).key === 'Backspace' && reason === 'removeOption') {\n            return;\n          }\n          setPendingValue(newValue);\n        }}\n        disableCloseOnSelect\n        PopperComponent={PopperComponent}\n        renderTags={() => null}\n        noOptionsText=\"No labels\"\n        renderOption={(props, option, { selected }) => (\n          <li {...props}>\n            <Box\n              component={CheckOutlined}\n              sx={{ width: 17, height: 17, mr: '5px', ml: '-2px', mt: 0.25 }}\n              style={{\n                visibility: selected ? 'visible' : 'hidden'\n              }}\n            />\n            <Box\n              component=\"span\"\n              sx={{\n                width: 14,\n                height: 14,\n                flexShrink: 0,\n                borderRadius: '3px',\n                mr: 1,\n                mt: '2px'\n              }}\n              style={{ backgroundColor: option.color }}\n            />\n            <Box\n              sx={{\n                flexGrow: 1,\n                '& span': {\n                  color: theme.palette.mode === 'light' ? '#586069' : '#8b949e'\n                }\n              }}\n            >\n              {option.name}\n              <br />\n              <span>{option.description}</span>\n            </Box>\n            <Box\n              component={CloseOutlined}\n              sx={{ opacity: 0.6, width: 18, height: 18, mt: 0.25 }}\n              style={{\n                visibility: selected ? 'visible' : 'hidden'\n              }}\n            />\n          </li>\n        )}\n        options={[...labels].sort((a, b) => {\n          // Display the selected labels first.\n          let ai = value.indexOf(a);\n          ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\n          let bi = value.indexOf(b);\n          bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\n          return ai - bi;\n        })}\n        getOptionLabel={(option) => option.name}\n        renderInput={(params) => (\n          <StyledInput ref={params.InputProps.ref} inputProps={params.inputProps} autoFocus placeholder=\"Filter labels\" />\n        )}\n      />\n    </div>\n  </ClickAwayListener>\n</StyledPopper>`;\n\n  return (\n    <MainCard title=\"GitHub's Picker\" codeString={gitAutocompleteCodeString}>\n      <Box sx={{ width: 221, fontSize: 13 }}>\n        <Button\n          disableRipple\n          aria-describedby={id}\n          onClick={handleClick}\n          sx={{ justifyContent: 'space-between', '& span': { width: 'auto' } }}\n        >\n          <span>Labels</span>\n          <SettingFilled />\n        </Button>\n        {value.map((label, index) => (\n          <Box\n            key={index}\n            sx={{\n              mt: '3px',\n              height: 20,\n              padding: '.15em 4px',\n              fontWeight: 600,\n              lineHeight: '15px',\n              borderRadius: '2px'\n            }}\n            style={{\n              backgroundColor: label.color,\n              color: theme.palette.getContrastText(label.color)\n            }}\n          >\n            {label.name}\n          </Box>\n        ))}\n      </Box>\n      <StyledPopper id={id} open={open} anchorEl={anchorEl} placement=\"bottom-start\">\n        <ClickAwayListener onClickAway={handleClose}>\n          <div>\n            <Box\n              sx={{\n                borderBottom: `1px solid ${theme.palette.mode === 'light' ? '#eaecef' : '#30363d'}`,\n                padding: '8px 10px',\n                fontWeight: 600\n              }}\n            >\n              Apply labels to this pull request\n            </Box>\n            <Autocomplete\n              open\n              multiple\n              onClose={(event: React.ChangeEvent<{}>, reason: AutocompleteCloseReason) => {\n                if (reason === 'escape') {\n                  handleClose();\n                }\n              }}\n              value={pendingValue}\n              onChange={(event, newValue, reason) => {\n                if (event.type === 'keydown' && (event as React.KeyboardEvent).key === 'Backspace' && reason === 'removeOption') {\n                  return;\n                }\n                setPendingValue(newValue);\n              }}\n              disableCloseOnSelect\n              PopperComponent={PopperComponent}\n              renderTags={() => null}\n              noOptionsText=\"No labels\"\n              renderOption={(props, option, { selected }) => (\n                <li {...props}>\n                  <Box\n                    component={CheckOutlined}\n                    sx={{ width: 17, height: 17, mr: '5px', ml: '-2px', mt: 0.25 }}\n                    style={{\n                      visibility: selected ? 'visible' : 'hidden'\n                    }}\n                  />\n                  <Box\n                    component=\"span\"\n                    sx={{\n                      width: 14,\n                      height: 14,\n                      flexShrink: 0,\n                      borderRadius: '3px',\n                      mr: 1,\n                      mt: '2px'\n                    }}\n                    style={{ backgroundColor: option.color }}\n                  />\n                  <Box\n                    sx={{\n                      flexGrow: 1,\n                      '& span': {\n                        color: theme.palette.mode === 'light' ? '#586069' : '#8b949e'\n                      }\n                    }}\n                  >\n                    {option.name}\n                    <br />\n                    <span>{option.description}</span>\n                  </Box>\n                  <Box\n                    component={CloseOutlined}\n                    sx={{ opacity: 0.6, width: 18, height: 18, mt: 0.25 }}\n                    style={{\n                      visibility: selected ? 'visible' : 'hidden'\n                    }}\n                  />\n                </li>\n              )}\n              options={[...labels].sort((a, b) => {\n                // Display the selected labels first.\n                let ai = value.indexOf(a);\n                ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\n                let bi = value.indexOf(b);\n                bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\n                return ai - bi;\n              })}\n              getOptionLabel={(option) => option.name}\n              renderInput={(params) => (\n                <StyledInput ref={params.InputProps.ref} inputProps={params.inputProps} autoFocus placeholder=\"Filter labels\" />\n              )}\n            />\n          </div>\n        </ClickAwayListener>\n      </StyledPopper>\n    </MainCard>\n  );\n}\n\ninterface LabelType {\n  name: string;\n  color: string;\n  description?: string;\n}\n\n// From https://github.com/abdonrd/github-labels\nconst labels = [\n  {\n    name: 'good first issue',\n    color: '#7057ff',\n    description: 'Good for newcomers'\n  },\n  {\n    name: 'help wanted',\n    color: '#008672',\n    description: 'Extra attention is needed'\n  },\n  {\n    name: 'priority: critical',\n    color: '#b60205',\n    description: ''\n  },\n  {\n    name: 'priority: high',\n    color: '#d93f0b',\n    description: ''\n  },\n  {\n    name: 'priority: low',\n    color: '#0e8a16',\n    description: ''\n  },\n  {\n    name: 'priority: medium',\n    color: '#fbca04',\n    description: ''\n  },\n  {\n    name: \"status: can't reproduce\",\n    color: '#fec1c1',\n    description: ''\n  },\n  {\n    name: 'status: confirmed',\n    color: '#215cea',\n    description: ''\n  },\n  {\n    name: 'status: duplicate',\n    color: '#cfd3d7',\n    description: 'This issue or pull request already exists'\n  },\n  {\n    name: 'status: needs information',\n    color: '#fef2c0',\n    description: ''\n  },\n  {\n    name: 'status: wont do/fix',\n    color: '#eeeeee',\n    description: 'This will not be worked on'\n  },\n  {\n    name: 'type: bug',\n    color: '#d73a4a',\n    description: \"Something isn't working\"\n  },\n  {\n    name: 'type: discussion',\n    color: '#d4c5f9',\n    description: ''\n  },\n  {\n    name: 'type: documentation',\n    color: '#006b75',\n    description: ''\n  },\n  {\n    name: 'type: enhancement',\n    color: '#84b6eb',\n    description: ''\n  },\n  {\n    name: 'type: epic',\n    color: '#3e4b9e',\n    description: 'A theme of work that contain sub-tasks'\n  },\n  {\n    name: 'type: feature request',\n    color: '#fbca04',\n    description: 'New feature or request'\n  },\n  {\n    name: 'type: question',\n    color: '#d876e3',\n    description: 'Further information is requested'\n  }\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}