{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/auth/auth-forms/AuthForgotPassword.tsx\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; // material-ui\n\nimport { Button, FormHelperText, Grid, InputLabel, OutlinedInput, Stack, Typography } from '@mui/material'; // third party\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik'; // project import\n\nimport useAuth from 'hooks/useAuth';\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'components/@extended/AnimateButton';\nimport { openSnackbar } from 'store/reducers/snackbar'; // ============================|| FIREBASE - FORGOT PASSWORD ||============================ //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthForgotPassword = () => {\n  _s();\n\n  const scriptedRef = useScriptRef();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    isLoggedIn,\n    resetPassword\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        submit: null\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\n      }),\n      onSubmit: async (values, _ref) => {\n        let {\n          setErrors,\n          setStatus,\n          setSubmitting\n        } = _ref;\n\n        try {\n          await resetPassword(values.email).then(() => {\n            setStatus({\n              success: true\n            });\n            setSubmitting(false);\n            dispatch(openSnackbar({\n              open: true,\n              message: 'Check mail for reset password link',\n              variant: 'alert',\n              alert: {\n                color: 'success'\n              },\n              close: false\n            }));\n            setTimeout(() => {\n              navigate(isLoggedIn ? '/auth/check-mail' : '/check-mail', {\n                replace: true\n              });\n            }, 1500); // WARNING: do not set any formik state here as formik might be already destroyed here. You may get following error by doing so.\n            // Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application.\n            // To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\n            // github issue: https://github.com/formium/formik/issues/2430\n          }, err => {\n            setStatus({\n              success: false\n            });\n            setErrors({\n              submit: err.message\n            });\n            setSubmitting(false);\n          });\n        } catch (err) {\n          console.error(err);\n\n          if (scriptedRef.current) {\n            setStatus({\n              success: false\n            });\n            setErrors({\n              submit: err.message\n            });\n            setSubmitting(false);\n          }\n        }\n      },\n      children: _ref2 => {\n        let {\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"email-forgot\",\n                  children: \"Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  fullWidth: true,\n                  error: Boolean(touched.email && errors.email),\n                  id: \"email-forgot\",\n                  type: \"email\",\n                  value: values.email,\n                  name: \"email\",\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  placeholder: \"Enter email address\",\n                  inputProps: {}\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  error: true,\n                  id: \"helper-text-email-forgot\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), errors.submit && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: true,\n                children: errors.submit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sx: {\n                mb: -2\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                children: \"Do not forgot to check SPAM box.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  disableElevation: true,\n                  disabled: isSubmitting,\n                  fullWidth: true,\n                  size: \"large\",\n                  type: \"submit\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  children: \"Send Password Reset Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AuthForgotPassword, \"ejshuXs279gBls1lAo5EYYSfybE=\", false, function () {\n  return [useScriptRef, useDispatch, useNavigate, useAuth];\n});\n\n_c = AuthForgotPassword;\nexport default AuthForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForgotPassword\");","map":{"version":3,"names":["useNavigate","useDispatch","Button","FormHelperText","Grid","InputLabel","OutlinedInput","Stack","Typography","Yup","Formik","useAuth","useScriptRef","AnimateButton","openSnackbar","AuthForgotPassword","scriptedRef","dispatch","navigate","isLoggedIn","resetPassword","email","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","then","success","open","message","variant","alert","color","close","setTimeout","replace","err","console","error","current","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","mb"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/auth/auth-forms/AuthForgotPassword.tsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\n// material-ui\nimport { Button, FormHelperText, Grid, InputLabel, OutlinedInput, Stack, Typography } from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project import\nimport useAuth from 'hooks/useAuth';\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'components/@extended/AnimateButton';\nimport { openSnackbar } from 'store/reducers/snackbar';\n\n// ============================|| FIREBASE - FORGOT PASSWORD ||============================ //\n\nconst AuthForgotPassword = () => {\n  const scriptedRef = useScriptRef();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { isLoggedIn, resetPassword } = useAuth();\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            await resetPassword(values.email).then(\n              () => {\n                setStatus({ success: true });\n                setSubmitting(false);\n                dispatch(\n                  openSnackbar({\n                    open: true,\n                    message: 'Check mail for reset password link',\n                    variant: 'alert',\n                    alert: {\n                      color: 'success'\n                    },\n                    close: false\n                  })\n                );\n                setTimeout(() => {\n                  navigate(isLoggedIn ? '/auth/check-mail' : '/check-mail', { replace: true });\n                }, 1500);\n\n                // WARNING: do not set any formik state here as formik might be already destroyed here. You may get following error by doing so.\n                // Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application.\n                // To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\n                // github issue: https://github.com/formium/formik/issues/2430\n              },\n              (err: any) => {\n                setStatus({ success: false });\n                setErrors({ submit: err.message });\n                setSubmitting(false);\n              }\n            );\n          } catch (err: any) {\n            console.error(err);\n            if (scriptedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n          <form noValidate onSubmit={handleSubmit}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Stack spacing={1}>\n                  <InputLabel htmlFor=\"email-forgot\">Email Address</InputLabel>\n                  <OutlinedInput\n                    fullWidth\n                    error={Boolean(touched.email && errors.email)}\n                    id=\"email-forgot\"\n                    type=\"email\"\n                    value={values.email}\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    placeholder=\"Enter email address\"\n                    inputProps={{}}\n                  />\n                  {touched.email && errors.email && (\n                    <FormHelperText error id=\"helper-text-email-forgot\">\n                      {errors.email}\n                    </FormHelperText>\n                  )}\n                </Stack>\n              </Grid>\n              {errors.submit && (\n                <Grid item xs={12}>\n                  <FormHelperText error>{errors.submit}</FormHelperText>\n                </Grid>\n              )}\n              <Grid item xs={12} sx={{ mb: -2 }}>\n                <Typography variant=\"caption\">Do not forgot to check SPAM box.</Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <AnimateButton>\n                  <Button disableElevation disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Send Password Reset Email\n                  </Button>\n                </AnimateButton>\n              </Grid>\n            </Grid>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AuthForgotPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}