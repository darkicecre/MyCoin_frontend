{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // third-party\n\n// project import\nimport axios from 'utils/axios';\nimport { dispatch } from 'store'; // types\n\nconst initialState = {\n  calendarView: 'dayGridMonth',\n  error: false,\n  events: [],\n  isLoader: false,\n  isModalOpen: false,\n  selectedEventId: null,\n  selectedRange: null\n}; // ==============================|| CALENDAR - SLICE ||============================== //\n\nconst calendar = createSlice({\n  name: 'calendar',\n  initialState,\n  reducers: {\n    // loader\n    loading(state) {\n      state.isLoader = true;\n    },\n\n    // error\n    hasError(state, action) {\n      state.isLoader = false;\n      state.error = action.payload;\n    },\n\n    // event list\n    setEvents(state, action) {\n      state.isLoader = false;\n      state.events = action.payload;\n    },\n\n    // update calendar view\n    updateCalendarView(state, action) {\n      state.calendarView = action.payload;\n    },\n\n    // select event\n    selectEvent(state, action) {\n      const eventId = action.payload;\n      state.isModalOpen = true;\n      state.selectedEventId = eventId;\n    },\n\n    // create event\n    createEvent(state, action) {\n      const newEvent = action.payload;\n      state.isLoader = false;\n      state.isModalOpen = false;\n      state.events = [...state.events, newEvent];\n    },\n\n    // update event\n    updateEvent(state, action) {\n      const event = action.payload;\n      const eventUpdate = state.events.map(item => {\n        if (item.id === event.id) {\n          return event;\n        }\n\n        return item;\n      });\n      state.isLoader = false;\n      state.isModalOpen = false;\n      state.events = eventUpdate;\n    },\n\n    // delete event\n    deleteEvent(state, action) {\n      const {\n        eventId\n      } = action.payload;\n      state.isModalOpen = false;\n      const deleteEvent = state.events.filter(user => user.id !== eventId);\n      state.events = deleteEvent;\n    },\n\n    // select date range\n    selectRange(state, action) {\n      const {\n        start,\n        end\n      } = action.payload;\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end\n      };\n    },\n\n    // modal toggle\n    toggleModal(state) {\n      state.isModalOpen = !state.isModalOpen;\n\n      if (state.isModalOpen === false) {\n        state.selectedEventId = null;\n        state.selectedRange = null;\n      }\n    }\n\n  }\n});\nexport default calendar.reducer;\nexport const {\n  selectEvent,\n  toggleModal,\n  updateCalendarView\n} = calendar.actions;\nexport function getEvents() {\n  return async () => {\n    dispatch(calendar.actions.loading());\n\n    try {\n      const response = await axios.get('/api/calendar/events');\n      dispatch(calendar.actions.setEvents(response.data.events));\n    } catch (error) {\n      dispatch(calendar.actions.hasError(error));\n    }\n  };\n}\nexport function createEvent(newEvent) {\n  return async () => {\n    dispatch(calendar.actions.loading());\n\n    try {\n      const response = await axios.post('/api/calendar/events/add', newEvent);\n      dispatch(calendar.actions.createEvent(response.data.event));\n    } catch (error) {\n      dispatch(calendar.actions.hasError(error));\n    }\n  };\n}\nexport function updateEvent(eventId, updateEvent) {\n  return async () => {\n    dispatch(calendar.actions.loading());\n\n    try {\n      const response = await axios.post('/api/calendar/events/update', {\n        eventId,\n        update: updateEvent\n      });\n      dispatch(calendar.actions.updateEvent(response.data.event));\n    } catch (error) {\n      dispatch(calendar.actions.hasError(error));\n    }\n  };\n}\nexport function deleteEvent(eventId) {\n  return async () => {\n    dispatch(calendar.actions.loading());\n\n    try {\n      await axios.post('/api/calendar/events/delete', {\n        eventId\n      });\n      dispatch(calendar.actions.deleteEvent({\n        eventId\n      }));\n    } catch (error) {\n      dispatch(calendar.actions.hasError(error));\n    }\n  };\n}\nexport function selectRange(start, end) {\n  return async () => {\n    dispatch(calendar.actions.selectRange({\n      start: start.getTime(),\n      end: end.getTime()\n    }));\n  };\n}","map":{"version":3,"names":["createSlice","axios","dispatch","initialState","calendarView","error","events","isLoader","isModalOpen","selectedEventId","selectedRange","calendar","name","reducers","loading","state","hasError","action","payload","setEvents","updateCalendarView","selectEvent","eventId","createEvent","newEvent","updateEvent","event","eventUpdate","map","item","id","deleteEvent","filter","user","selectRange","start","end","toggleModal","reducer","actions","getEvents","response","get","data","post","update","getTime"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/store/reducers/calendar.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n// third-party\nimport { EventInput } from '@fullcalendar/common';\n\n// project import\nimport axios from 'utils/axios';\nimport { dispatch } from 'store';\n\n// types\nimport { CalendarProps } from 'types/calendar';\n\nconst initialState: CalendarProps = {\n  calendarView: 'dayGridMonth',\n  error: false,\n  events: [],\n  isLoader: false,\n  isModalOpen: false,\n  selectedEventId: null,\n  selectedRange: null\n};\n\n// ==============================|| CALENDAR - SLICE ||============================== //\n\nconst calendar = createSlice({\n  name: 'calendar',\n  initialState,\n  reducers: {\n    // loader\n    loading(state) {\n      state.isLoader = true;\n    },\n\n    // error\n    hasError(state, action) {\n      state.isLoader = false;\n      state.error = action.payload;\n    },\n\n    // event list\n    setEvents(state, action) {\n      state.isLoader = false;\n      state.events = action.payload;\n    },\n\n    // update calendar view\n    updateCalendarView(state, action) {\n      state.calendarView = action.payload;\n    },\n\n    // select event\n    selectEvent(state, action) {\n      const eventId = action.payload;\n      state.isModalOpen = true;\n      state.selectedEventId = eventId;\n    },\n\n    // create event\n    createEvent(state, action) {\n      const newEvent = action.payload;\n      state.isLoader = false;\n      state.isModalOpen = false;\n      state.events = [...state.events, newEvent];\n    },\n\n    // update event\n    updateEvent(state, action) {\n      const event = action.payload;\n      const eventUpdate = state.events.map((item) => {\n        if (item.id === event.id) {\n          return event;\n        }\n        return item;\n      });\n\n      state.isLoader = false;\n      state.isModalOpen = false;\n      state.events = eventUpdate;\n    },\n\n    // delete event\n    deleteEvent(state, action) {\n      const { eventId } = action.payload;\n      state.isModalOpen = false;\n      const deleteEvent = state.events.filter((user) => user.id !== eventId);\n      state.events = deleteEvent;\n    },\n\n    // select date range\n    selectRange(state, action) {\n      const { start, end } = action.payload;\n      state.isModalOpen = true;\n      state.selectedRange = { start, end };\n    },\n\n    // modal toggle\n    toggleModal(state) {\n      state.isModalOpen = !state.isModalOpen;\n      if (state.isModalOpen === false) {\n        state.selectedEventId = null;\n        state.selectedRange = null;\n      }\n    }\n  }\n});\n\nexport default calendar.reducer;\n\nexport const { selectEvent, toggleModal, updateCalendarView } = calendar.actions;\n\nexport function getEvents() {\n  return async () => {\n    dispatch(calendar.actions.loading());\n    try {\n      const response = await axios.get('/api/calendar/events');\n      dispatch(calendar.actions.setEvents(response.data.events));\n    } catch (error) {\n      dispatch(calendar.actions.hasError(error));\n    }\n  };\n}\n\nexport function createEvent(newEvent: Omit<EventInput, 'id'>) {\n  return async () => {\n    dispatch(calendar.actions.loading());\n    try {\n      const response = await axios.post('/api/calendar/events/add', newEvent);\n      dispatch(calendar.actions.createEvent(response.data.event));\n    } catch (error) {\n      dispatch(calendar.actions.hasError(error));\n    }\n  };\n}\n\nexport function updateEvent(\n  eventId: string,\n  updateEvent: Partial<{\n    allDay: boolean;\n    start: Date | null;\n    end: Date | null;\n  }>\n) {\n  return async () => {\n    dispatch(calendar.actions.loading());\n    try {\n      const response = await axios.post('/api/calendar/events/update', {\n        eventId,\n        update: updateEvent\n      });\n      dispatch(calendar.actions.updateEvent(response.data.event));\n    } catch (error) {\n      dispatch(calendar.actions.hasError(error));\n    }\n  };\n}\n\nexport function deleteEvent(eventId: string) {\n  return async () => {\n    dispatch(calendar.actions.loading());\n    try {\n      await axios.post('/api/calendar/events/delete', { eventId });\n      dispatch(calendar.actions.deleteEvent({ eventId }));\n    } catch (error) {\n      dispatch(calendar.actions.hasError(error));\n    }\n  };\n}\n\nexport function selectRange(start: Date, end: Date) {\n  return async () => {\n    dispatch(\n      calendar.actions.selectRange({\n        start: start.getTime(),\n        end: end.getTime()\n      })\n    );\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}