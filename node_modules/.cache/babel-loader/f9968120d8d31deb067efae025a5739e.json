{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/components/third-party/Highlighter.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // material-ui\n\nimport { Box, CardActions, Collapse, Divider, Tooltip } from '@mui/material'; // third-party\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; // project import\n\nimport SyntaxHighlight from 'utils/SyntaxHighlight';\nimport IconButton from 'components/@extended/IconButton'; // assets\n\nimport { CodeOutlined, CopyOutlined } from '@ant-design/icons'; // ==============================|| CLIPBOARD & HIGHLIGHTER   ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Highlighter = _ref => {\n  _s();\n\n  let {\n    codeString,\n    codeHighlight\n  } = _ref;\n  const [highlight, setHighlight] = useState(codeHighlight);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CardActions, {\n      sx: {\n        justifyContent: 'flex-end'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: codeString,\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Copy the source\",\n            placement: \"top-end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"secondary\",\n              size: \"small\",\n              sx: {\n                fontSize: '0.875rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(CopyOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          variant: \"middle\",\n          flexItem: true,\n          sx: {\n            mx: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Show the source\",\n          placement: \"top-end\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            sx: {\n              fontSize: '0.875rem'\n            },\n            size: \"small\",\n            color: highlight ? 'primary' : 'secondary',\n            onClick: () => setHighlight(!highlight),\n            children: /*#__PURE__*/_jsxDEV(CodeOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: highlight,\n      children: highlight && /*#__PURE__*/_jsxDEV(SyntaxHighlight, {\n        children: codeString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Highlighter, \"8wFN1kLg362uxDdpxBf2fFw/lgQ=\");\n\n_c = Highlighter;\nexport default Highlighter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Highlighter\");","map":{"version":3,"names":["useState","Box","CardActions","Collapse","Divider","Tooltip","CopyToClipboard","SyntaxHighlight","IconButton","CodeOutlined","CopyOutlined","Highlighter","codeString","codeHighlight","highlight","setHighlight","justifyContent","display","fontSize","mx"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/components/third-party/Highlighter.tsx"],"sourcesContent":["import { useState } from 'react';\n\n// material-ui\nimport { Box, CardActions, Collapse, Divider, Tooltip } from '@mui/material';\n\n// third-party\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\n// project import\nimport SyntaxHighlight from 'utils/SyntaxHighlight';\nimport IconButton from 'components/@extended/IconButton';\n\n// assets\nimport { CodeOutlined, CopyOutlined } from '@ant-design/icons';\n\n// ==============================|| CLIPBOARD & HIGHLIGHTER   ||============================== //\n\ninterface Props {\n  codeString: string;\n  codeHighlight: boolean;\n}\n\nconst Highlighter = ({ codeString, codeHighlight }: Props) => {\n  const [highlight, setHighlight] = useState(codeHighlight);\n\n  return (\n    <>\n      <CardActions sx={{ justifyContent: 'flex-end' }}>\n        <Box sx={{ display: 'flex' }}>\n          <CopyToClipboard text={codeString}>\n            <Tooltip title=\"Copy the source\" placement=\"top-end\">\n              <IconButton color=\"secondary\" size=\"small\" sx={{ fontSize: '0.875rem' }}>\n                <CopyOutlined />\n              </IconButton>\n            </Tooltip>\n          </CopyToClipboard>\n          <Divider orientation=\"vertical\" variant=\"middle\" flexItem sx={{ mx: 1 }} />\n          <Tooltip title=\"Show the source\" placement=\"top-end\">\n            <IconButton\n              sx={{ fontSize: '0.875rem' }}\n              size=\"small\"\n              color={highlight ? 'primary' : 'secondary'}\n              onClick={() => setHighlight(!highlight)}\n            >\n              <CodeOutlined />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </CardActions>\n      <Collapse in={highlight}>{highlight && <SyntaxHighlight>{codeString}</SyntaxHighlight>}</Collapse>\n    </>\n  );\n};\n\nexport default Highlighter;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,GAAT,EAAcC,WAAd,EAA2BC,QAA3B,EAAqCC,OAArC,EAA8CC,OAA9C,QAA6D,eAA7D,C,CAEA;;AACA,SAASC,eAAT,QAAgC,yBAAhC,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,UAAP,MAAuB,iCAAvB,C,CAEA;;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,mBAA3C,C,CAEA;;;;;AAOA,MAAMC,WAAW,GAAG,QAA0C;EAAA;;EAAA,IAAzC;IAAEC,UAAF;IAAcC;EAAd,CAAyC;EAC5D,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAACa,aAAD,CAA1C;EAEA,oBACE;IAAA,wBACE,QAAC,WAAD;MAAa,EAAE,EAAE;QAAEG,cAAc,EAAE;MAAlB,CAAjB;MAAA,uBACE,QAAC,GAAD;QAAK,EAAE,EAAE;UAAEC,OAAO,EAAE;QAAX,CAAT;QAAA,wBACE,QAAC,eAAD;UAAiB,IAAI,EAAEL,UAAvB;UAAA,uBACE,QAAC,OAAD;YAAS,KAAK,EAAC,iBAAf;YAAiC,SAAS,EAAC,SAA3C;YAAA,uBACE,QAAC,UAAD;cAAY,KAAK,EAAC,WAAlB;cAA8B,IAAI,EAAC,OAAnC;cAA2C,EAAE,EAAE;gBAAEM,QAAQ,EAAE;cAAZ,CAA/C;cAAA,uBACE,QAAC,YAAD;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAQE,QAAC,OAAD;UAAS,WAAW,EAAC,UAArB;UAAgC,OAAO,EAAC,QAAxC;UAAiD,QAAQ,MAAzD;UAA0D,EAAE,EAAE;YAAEC,EAAE,EAAE;UAAN;QAA9D;UAAA;UAAA;UAAA;QAAA,QARF,eASE,QAAC,OAAD;UAAS,KAAK,EAAC,iBAAf;UAAiC,SAAS,EAAC,SAA3C;UAAA,uBACE,QAAC,UAAD;YACE,EAAE,EAAE;cAAED,QAAQ,EAAE;YAAZ,CADN;YAEE,IAAI,EAAC,OAFP;YAGE,KAAK,EAAEJ,SAAS,GAAG,SAAH,GAAe,WAHjC;YAIE,OAAO,EAAE,MAAMC,YAAY,CAAC,CAACD,SAAF,CAJ7B;YAAA,uBAME,QAAC,YAAD;cAAA;cAAA;cAAA;YAAA;UANF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QATF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAuBE,QAAC,QAAD;MAAU,EAAE,EAAEA,SAAd;MAAA,UAA0BA,SAAS,iBAAI,QAAC,eAAD;QAAA,UAAkBF;MAAlB;QAAA;QAAA;QAAA;MAAA;IAAvC;MAAA;MAAA;MAAA;IAAA,QAvBF;EAAA,gBADF;AA2BD,CA9BD;;GAAMD,W;;KAAAA,W;AAgCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}