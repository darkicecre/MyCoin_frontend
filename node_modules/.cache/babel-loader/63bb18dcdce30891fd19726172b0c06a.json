{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/forms/validation/InstantFeedback.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'store'; // material-ui\n\nimport { Button, Grid, InputLabel, Stack, TextField } from '@mui/material'; // project imports\n\nimport MainCard from 'components/MainCard';\nimport AnimateButton from 'components/@extended/AnimateButton';\nimport { openSnackbar } from 'store/reducers/snackbar'; // third-party\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n/**\n * 'Enter your email'\n * yup.string Expected 0 arguments, but got 1 */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  emailInstant: yup.string().email('Enter a valid email').required('Email is required'),\n  passwordInstant: yup.string().min(8, 'Password should be of minimum 8 characters length').required('Password is required')\n}); // ==============================|| FORM VALIDATION - INSTANT FEEDBACK FORMIK  ||============================== //\n\nconst InstantFeedback = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      emailInstant: '',\n      passwordInstant: ''\n    },\n    validationSchema,\n    onSubmit: values => {\n      dispatch(openSnackbar({\n        open: true,\n        message: 'On Leave - Submit Success',\n        variant: 'alert',\n        alert: {\n          color: 'success'\n        },\n        close: false\n      }));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"On Leave\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"email\",\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"emailInstant\",\n              name: \"emailInstant\",\n              placeholder: \"Enter email address\",\n              value: formik.values.emailInstant,\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              error: formik.touched.emailInstant && Boolean(formik.errors.emailInstant),\n              helperText: formik.touched.emailInstant && formik.errors.emailInstant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"email\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"passwordInstant\",\n              name: \"passwordInstant\",\n              placeholder: \"Enter your password\",\n              type: \"password\",\n              value: formik.values.passwordInstant,\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              error: formik.touched.passwordInstant && Boolean(formik.errors.passwordInstant),\n              helperText: formik.touched.passwordInstant && formik.errors.passwordInstant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InstantFeedback, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = InstantFeedback;\nexport default InstantFeedback;\n\nvar _c;\n\n$RefreshReg$(_c, \"InstantFeedback\");","map":{"version":3,"names":["useDispatch","Button","Grid","InputLabel","Stack","TextField","MainCard","AnimateButton","openSnackbar","useFormik","yup","validationSchema","object","emailInstant","string","email","required","passwordInstant","min","InstantFeedback","dispatch","formik","initialValues","onSubmit","values","open","message","variant","alert","color","close","handleSubmit","handleChange","handleBlur","touched","Boolean","errors"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/forms/validation/InstantFeedback.tsx"],"sourcesContent":["import { useDispatch } from 'store';\n\n// material-ui\nimport { Button, Grid, InputLabel, Stack, TextField } from '@mui/material';\n\n// project imports\nimport MainCard from 'components/MainCard';\nimport AnimateButton from 'components/@extended/AnimateButton';\nimport { openSnackbar } from 'store/reducers/snackbar';\n\n// third-party\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\n/**\n * 'Enter your email'\n * yup.string Expected 0 arguments, but got 1 */\nconst validationSchema = yup.object({\n  emailInstant: yup.string().email('Enter a valid email').required('Email is required'),\n  passwordInstant: yup.string().min(8, 'Password should be of minimum 8 characters length').required('Password is required')\n});\n\n// ==============================|| FORM VALIDATION - INSTANT FEEDBACK FORMIK  ||============================== //\n\nconst InstantFeedback = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      emailInstant: '',\n      passwordInstant: ''\n    },\n    validationSchema,\n    onSubmit: (values) => {\n      dispatch(\n        openSnackbar({\n          open: true,\n          message: 'On Leave - Submit Success',\n          variant: 'alert',\n          alert: {\n            color: 'success'\n          },\n          close: false\n        })\n      );\n    }\n  });\n\n  return (\n    <MainCard title=\"On Leave\">\n      <form onSubmit={formik.handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Stack spacing={1}>\n              <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n              <TextField\n                fullWidth\n                id=\"emailInstant\"\n                name=\"emailInstant\"\n                placeholder=\"Enter email address\"\n                value={formik.values.emailInstant}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={formik.touched.emailInstant && Boolean(formik.errors.emailInstant)}\n                helperText={formik.touched.emailInstant && formik.errors.emailInstant}\n              />\n            </Stack>\n          </Grid>\n          <Grid item xs={12}>\n            <Stack spacing={1}>\n              <InputLabel htmlFor=\"email\">Password</InputLabel>\n              <TextField\n                fullWidth\n                id=\"passwordInstant\"\n                name=\"passwordInstant\"\n                placeholder=\"Enter your password\"\n                type=\"password\"\n                value={formik.values.passwordInstant}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={formik.touched.passwordInstant && Boolean(formik.errors.passwordInstant)}\n                helperText={formik.touched.passwordInstant && formik.errors.passwordInstant}\n              />\n            </Stack>\n          </Grid>\n          <Grid item xs={12}>\n            <Stack direction=\"row\" justifyContent=\"flex-end\">\n              <AnimateButton>\n                <Button variant=\"contained\" type=\"submit\">\n                  Submit\n                </Button>\n              </AnimateButton>\n            </Stack>\n          </Grid>\n        </Grid>\n      </form>\n    </MainCard>\n  );\n};\n\nexport default InstantFeedback;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}