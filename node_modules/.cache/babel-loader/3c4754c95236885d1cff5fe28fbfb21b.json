{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/components-overview/select/CheckmarksSelect.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // material-ui\n\nimport { Checkbox, FormControl, InputLabel, ListItemText, MenuItem, OutlinedInput, Select } from '@mui/material'; // project import\n\nimport MainCard from 'components/MainCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder']; // ==============================|| COMPONENTS - CHECKMARKERS ||============================== //\n\nexport default function CheckmarksSelect() {\n  _s();\n\n  const [personName, setPersonName] = useState([]);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName( // On autofill we get a the stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n\n  const checkmarkSelectCodeString = `// CheckmarksSelect.tsx\n<FormControl fullWidth>\n  <InputLabel id=\"demo-multiple-checkbox-label\">Checkmarks</InputLabel>\n  <Select\n    labelId=\"demo-multiple-checkbox-label\"\n    id=\"demo-multiple-checkbox\"\n    multiple\n    value={personName}\n    onChange={handleChange}\n    input={<OutlinedInput label=\"Tag\" />}\n    renderValue={(selected) => selected.join(', ')}\n    MenuProps={MenuProps}\n  >\n    {names.map((name) => (\n      <MenuItem key={name} value={name}>\n        <Checkbox checked={personName.indexOf(name) > -1} />\n        <ListItemText primary={name} />\n      </MenuItem>\n    ))}\n  </Select>\n</FormControl>`;\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"With Checkmarks\",\n    codeString: checkmarkSelectCodeString,\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-multiple-checkbox-label\",\n        children: \"Checkmarks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-multiple-checkbox-label\",\n        id: \"demo-multiple-checkbox\",\n        multiple: true,\n        value: personName,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: \"Tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => selected.join(', '),\n        MenuProps: MenuProps,\n        children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: name,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: personName.indexOf(name) > -1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckmarksSelect, \"m4jAXoIxEbTiAYdPcsnuZG2B4wU=\");\n\n_c = CheckmarksSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckmarksSelect\");","map":{"version":3,"names":["useState","Checkbox","FormControl","InputLabel","ListItemText","MenuItem","OutlinedInput","Select","MainCard","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","CheckmarksSelect","personName","setPersonName","handleChange","event","target","value","split","checkmarkSelectCodeString","selected","join","map","name","indexOf"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/components-overview/select/CheckmarksSelect.tsx"],"sourcesContent":["import { useState } from 'react';\n\n// material-ui\nimport { Checkbox, FormControl, InputLabel, ListItemText, MenuItem, OutlinedInput, Select, SelectChangeEvent } from '@mui/material';\n\n// project import\nimport MainCard from 'components/MainCard';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder'\n];\n\n// ==============================|| COMPONENTS - CHECKMARKERS ||============================== //\n\nexport default function CheckmarksSelect() {\n  const [personName, setPersonName] = useState<string[]>([]);\n\n  const handleChange = (event: SelectChangeEvent<typeof personName>) => {\n    const {\n      target: { value }\n    } = event;\n    setPersonName(\n      // On autofill we get a the stringified value.\n      typeof value === 'string' ? value.split(',') : value\n    );\n  };\n\n  const checkmarkSelectCodeString = `// CheckmarksSelect.tsx\n<FormControl fullWidth>\n  <InputLabel id=\"demo-multiple-checkbox-label\">Checkmarks</InputLabel>\n  <Select\n    labelId=\"demo-multiple-checkbox-label\"\n    id=\"demo-multiple-checkbox\"\n    multiple\n    value={personName}\n    onChange={handleChange}\n    input={<OutlinedInput label=\"Tag\" />}\n    renderValue={(selected) => selected.join(', ')}\n    MenuProps={MenuProps}\n  >\n    {names.map((name) => (\n      <MenuItem key={name} value={name}>\n        <Checkbox checked={personName.indexOf(name) > -1} />\n        <ListItemText primary={name} />\n      </MenuItem>\n    ))}\n  </Select>\n</FormControl>`;\n\n  return (\n    <MainCard title=\"With Checkmarks\" codeString={checkmarkSelectCodeString}>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-multiple-checkbox-label\">Checkmarks</InputLabel>\n        <Select\n          labelId=\"demo-multiple-checkbox-label\"\n          id=\"demo-multiple-checkbox\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Tag\" />}\n          renderValue={(selected) => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              <Checkbox checked={personName.indexOf(name) > -1} />\n              <ListItemText primary={name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </MainCard>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,EAA4CC,YAA5C,EAA0DC,QAA1D,EAAoEC,aAApE,EAAmFC,MAAnF,QAAoH,eAApH,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;EAChBC,UAAU,EAAE;IACVC,KAAK,EAAE;MACLC,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;MAELK,KAAK,EAAE;IAFF;EADG;AADI,CAAlB;AASA,MAAMC,KAAK,GAAG,CACZ,eADY,EAEZ,WAFY,EAGZ,cAHY,EAIZ,eAJY,EAKZ,gBALY,EAMZ,eANY,EAOZ,eAPY,EAQZ,mBARY,EASZ,kBATY,EAUZ,cAVY,CAAd,C,CAaA;;AAEA,eAAe,SAASC,gBAAT,GAA4B;EAAA;;EACzC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAW,EAAX,CAA5C;;EAEA,MAAMoB,YAAY,GAAIC,KAAD,IAAiD;IACpE,MAAM;MACJC,MAAM,EAAE;QAAEC;MAAF;IADJ,IAEFF,KAFJ;IAGAF,aAAa,EACX;IACA,OAAOI,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACC,KAAN,CAAY,GAAZ,CAA5B,GAA+CD,KAFpC,CAAb;EAID,CARD;;EAUA,MAAME,yBAAyB,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eApBE;EAsBA,oBACE,QAAC,QAAD;IAAU,KAAK,EAAC,iBAAhB;IAAkC,UAAU,EAAEA,yBAA9C;IAAA,uBACE,QAAC,WAAD;MAAa,SAAS,MAAtB;MAAA,wBACE,QAAC,UAAD;QAAY,EAAE,EAAC,8BAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QACE,OAAO,EAAC,8BADV;QAEE,EAAE,EAAC,wBAFL;QAGE,QAAQ,MAHV;QAIE,KAAK,EAAEP,UAJT;QAKE,QAAQ,EAAEE,YALZ;QAME,KAAK,eAAE,QAAC,aAAD;UAAe,KAAK,EAAC;QAArB;UAAA;UAAA;UAAA;QAAA,QANT;QAOE,WAAW,EAAGM,QAAD,IAAcA,QAAQ,CAACC,IAAT,CAAc,IAAd,CAP7B;QAQE,SAAS,EAAEhB,SARb;QAAA,UAUGK,KAAK,CAACY,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;UAAqB,KAAK,EAAEA,IAA5B;UAAA,wBACE,QAAC,QAAD;YAAU,OAAO,EAAEX,UAAU,CAACY,OAAX,CAAmBD,IAAnB,IAA2B,CAAC;UAA/C;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,YAAD;YAAc,OAAO,EAAEA;UAAvB;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA,GAAeA,IAAf;UAAA;UAAA;UAAA;QAAA,QADD;MAVH;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;GA3DuBZ,gB;;KAAAA,gB"},"metadata":{},"sourceType":"module"}