{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/components-overview/buttons/ToggleButtons/VariantToggleButtons.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { ToggleButton, ToggleButtonGroup } from '@mui/material'; // ==============================|| TOGGLE BUTTON - VARIANT ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VariantToggleButtons() {\n  _s();\n\n  const theme = useTheme();\n  const [alignment, setAlignment] = useState('web');\n\n  const handleAlignment = (event, newAlignment) => {\n    if (newAlignment !== null) {\n      setAlignment(newAlignment);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n    value: alignment,\n    color: \"primary\",\n    exclusive: true,\n    onChange: handleAlignment,\n    \"aria-label\": \"text alignment\",\n    sx: {\n      '& .MuiToggleButton-root': {\n        '&:not(.Mui-selected)': {\n          borderTopColor: 'transparent',\n          borderBottomColor: 'transparent'\n        },\n        '&:first-of-type': {\n          borderLeftColor: 'transparent'\n        },\n        '&:last-of-type': {\n          borderRightColor: 'transparent'\n        },\n        '&.Mui-selected': {\n          borderColor: 'inherit',\n          borderLeftColor: `${theme.palette.primary.main} !important`,\n          '&:hover': {\n            bgcolor: theme.palette.primary.lighter\n          }\n        },\n        '&:hover': {\n          bgcolor: 'transparent',\n          borderColor: theme.palette.primary.main,\n          borderLeftColor: `${theme.palette.primary.main} !important`,\n          zIndex: 2\n        }\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n      value: \"web\",\n      \"aria-label\": \"web\",\n      children: \"Web\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      value: \"android\",\n      \"aria-label\": \"android\",\n      children: \"Android\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      value: \"ios\",\n      \"aria-label\": \"ios\",\n      children: \"iOS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      value: \"all\",\n      \"aria-label\": \"all\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VariantToggleButtons, \"yU1SzRtbOQj21DpQzLJ7mWgeAs8=\", false, function () {\n  return [useTheme];\n});\n\n_c = VariantToggleButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"VariantToggleButtons\");","map":{"version":3,"names":["useState","useTheme","ToggleButton","ToggleButtonGroup","VariantToggleButtons","theme","alignment","setAlignment","handleAlignment","event","newAlignment","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","borderColor","palette","primary","main","bgcolor","lighter","zIndex"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/components-overview/buttons/ToggleButtons/VariantToggleButtons.tsx"],"sourcesContent":["import { useState } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { ToggleButton, ToggleButtonGroup } from '@mui/material';\n\n// ==============================|| TOGGLE BUTTON - VARIANT ||============================== //\n\nexport default function VariantToggleButtons() {\n  const theme = useTheme();\n  const [alignment, setAlignment] = useState<string | null>('web');\n\n  const handleAlignment = (event: React.MouseEvent<HTMLElement>, newAlignment: string | null) => {\n    if (newAlignment !== null) {\n      setAlignment(newAlignment);\n    }\n  };\n\n  return (\n    <ToggleButtonGroup\n      value={alignment}\n      color=\"primary\"\n      exclusive\n      onChange={handleAlignment}\n      aria-label=\"text alignment\"\n      sx={{\n        '& .MuiToggleButton-root': {\n          '&:not(.Mui-selected)': {\n            borderTopColor: 'transparent',\n            borderBottomColor: 'transparent'\n          },\n          '&:first-of-type': {\n            borderLeftColor: 'transparent'\n          },\n          '&:last-of-type': {\n            borderRightColor: 'transparent'\n          },\n          '&.Mui-selected': {\n            borderColor: 'inherit',\n            borderLeftColor: `${theme.palette.primary.main} !important`,\n            '&:hover': {\n              bgcolor: theme.palette.primary.lighter\n            }\n          },\n          '&:hover': {\n            bgcolor: 'transparent',\n            borderColor: theme.palette.primary.main,\n            borderLeftColor: `${theme.palette.primary.main} !important`,\n            zIndex: 2\n          }\n        }\n      }}\n    >\n      <ToggleButton value=\"web\" aria-label=\"web\">\n        Web\n      </ToggleButton>\n      <ToggleButton value=\"android\" aria-label=\"android\">\n        Android\n      </ToggleButton>\n      <ToggleButton value=\"ios\" aria-label=\"ios\">\n        iOS\n      </ToggleButton>\n      <ToggleButton value=\"all\" aria-label=\"all\">\n        All\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,YAAT,EAAuBC,iBAAvB,QAAgD,eAAhD,C,CAEA;;;AAEA,eAAe,SAASC,oBAAT,GAAgC;EAAA;;EAC7C,MAAMC,KAAK,GAAGJ,QAAQ,EAAtB;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAgB,KAAhB,CAA1C;;EAEA,MAAMQ,eAAe,GAAG,CAACC,KAAD,EAAuCC,YAAvC,KAAuE;IAC7F,IAAIA,YAAY,KAAK,IAArB,EAA2B;MACzBH,YAAY,CAACG,YAAD,CAAZ;IACD;EACF,CAJD;;EAMA,oBACE,QAAC,iBAAD;IACE,KAAK,EAAEJ,SADT;IAEE,KAAK,EAAC,SAFR;IAGE,SAAS,MAHX;IAIE,QAAQ,EAAEE,eAJZ;IAKE,cAAW,gBALb;IAME,EAAE,EAAE;MACF,2BAA2B;QACzB,wBAAwB;UACtBG,cAAc,EAAE,aADM;UAEtBC,iBAAiB,EAAE;QAFG,CADC;QAKzB,mBAAmB;UACjBC,eAAe,EAAE;QADA,CALM;QAQzB,kBAAkB;UAChBC,gBAAgB,EAAE;QADF,CARO;QAWzB,kBAAkB;UAChBC,WAAW,EAAE,SADG;UAEhBF,eAAe,EAAG,GAAER,KAAK,CAACW,OAAN,CAAcC,OAAd,CAAsBC,IAAK,aAF/B;UAGhB,WAAW;YACTC,OAAO,EAAEd,KAAK,CAACW,OAAN,CAAcC,OAAd,CAAsBG;UADtB;QAHK,CAXO;QAkBzB,WAAW;UACTD,OAAO,EAAE,aADA;UAETJ,WAAW,EAAEV,KAAK,CAACW,OAAN,CAAcC,OAAd,CAAsBC,IAF1B;UAGTL,eAAe,EAAG,GAAER,KAAK,CAACW,OAAN,CAAcC,OAAd,CAAsBC,IAAK,aAHtC;UAITG,MAAM,EAAE;QAJC;MAlBc;IADzB,CANN;IAAA,wBAkCE,QAAC,YAAD;MAAc,KAAK,EAAC,KAApB;MAA0B,cAAW,KAArC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAlCF,eAqCE,QAAC,YAAD;MAAc,KAAK,EAAC,SAApB;MAA8B,cAAW,SAAzC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QArCF,eAwCE,QAAC,YAAD;MAAc,KAAK,EAAC,KAApB;MAA0B,cAAW,KAArC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAxCF,eA2CE,QAAC,YAAD;MAAc,KAAK,EAAC,KAApB;MAA0B,cAAW,KAArC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA3CF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiDD;;GA3DuBjB,oB;UACRH,Q;;;KADQG,oB"},"metadata":{},"sourceType":"module"}