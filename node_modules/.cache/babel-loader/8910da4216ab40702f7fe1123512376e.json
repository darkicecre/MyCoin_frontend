{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/components-overview/stepper/VerticalLinearStepper.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // material-ui\n\nimport { Box, Button, Step, Stepper, StepContent, StepLabel, Typography } from '@mui/material'; // project import\n\nimport MainCard from 'components/MainCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [{\n  label: 'Select campaign settings',\n  description: `For each ad campaign that you create, you can control how much\n              you're willing to spend on clicks and conversions, which networks\n              and geographical locations you want your ads to show on, and more.`\n}, {\n  label: 'Create an ad group',\n  description: 'An ad group contains one or more ads which target a shared set of keywords.'\n}, {\n  label: 'Create an ad',\n  description: `Try out different ad text to see what brings in the most customers,\n              and learn how to enhance your ads using features like ad extensions.\n              If you run into any problems with your ads, find out how to tell if\n              they're running and how to resolve approval issues.`\n}]; // ==============================|| STEPPER - VERTICAL ||============================== //\n\nexport default function VerticalLinearStepper() {\n  _s();\n\n  const [activeStep, setActiveStep] = useState(0);\n\n  const handleNext = () => setActiveStep(prevActiveStep => prevActiveStep + 1);\n\n  const handleBack = () => setActiveStep(prevActiveStep => prevActiveStep - 1);\n\n  const handleReset = () => setActiveStep(0);\n\n  const verticalStepperCodeString = `// VerticalLinearStepper.tsx\n<Stepper activeStep={activeStep} orientation=\"vertical\">\n  {steps.map((step, index) => (\n    <Step key={step.label}>\n      <StepLabel optional={index === 2 ? <Typography variant=\"caption\">Last step</Typography> : null}>{step.label}</StepLabel>\n      <StepContent>\n        <Typography>{step.description}</Typography>\n        <Box sx={{ mb: 2 }}>\n          <div>\n            <Button\n              variant=\"contained\"\n              onClick={handleNext}\n              sx={{ mt: 1, mr: 1 }}\n              color={index === steps.length - 1 ? 'success' : 'primary'}\n            >\n              {index === steps.length - 1 ? 'Finish' : 'Continue'}\n            </Button>\n            <Button disabled={index === 0} onClick={handleBack} sx={{ mt: 1, mr: 1 }}>\n              Back\n            </Button>\n          </div>\n        </Box>\n      </StepContent>\n    </Step>\n  ))}\n</Stepper>\n{activeStep === steps.length && (\n  <Box sx={{ pt: 2 }}>\n    <Typography sx={{ color: 'success.main' }}>All steps completed - you&apos;re finished</Typography>\n    <Button size=\"small\" variant=\"contained\" color=\"error\" onClick={handleReset} sx={{ mt: 2, mr: 1 }}>\n      Reset\n    </Button>\n  </Box>\n)}`;\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"Vertical\",\n    codeString: verticalStepperCodeString,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      orientation: \"vertical\",\n      children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          optional: index === 2 ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Last step\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 48\n          }, this) : null,\n          children: step.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: step.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: handleNext,\n                sx: {\n                  mt: 1,\n                  mr: 1\n                },\n                color: index === steps.length - 1 ? 'success' : 'primary',\n                children: index === steps.length - 1 ? 'Finish' : 'Continue'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                disabled: index === 0,\n                onClick: handleBack,\n                sx: {\n                  mt: 1,\n                  mr: 1\n                },\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, step.label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), activeStep === steps.length && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        pt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: 'success.main'\n        },\n        children: \"All steps completed - you're finished\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"contained\",\n        color: \"error\",\n        onClick: handleReset,\n        sx: {\n          mt: 2,\n          mr: 1\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VerticalLinearStepper, \"cJXWosTT0XUh3gGn3cCcv/Y+Hws=\");\n\n_c = VerticalLinearStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerticalLinearStepper\");","map":{"version":3,"names":["useState","Box","Button","Step","Stepper","StepContent","StepLabel","Typography","MainCard","steps","label","description","VerticalLinearStepper","activeStep","setActiveStep","handleNext","prevActiveStep","handleBack","handleReset","verticalStepperCodeString","map","step","index","mb","mt","mr","length","pt","color"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/components-overview/stepper/VerticalLinearStepper.tsx"],"sourcesContent":["import { useState } from 'react';\n\n// material-ui\nimport { Box, Button, Step, Stepper, StepContent, StepLabel, Typography } from '@mui/material';\n\n// project import\nimport MainCard from 'components/MainCard';\n\nconst steps = [\n  {\n    label: 'Select campaign settings',\n    description: `For each ad campaign that you create, you can control how much\n              you're willing to spend on clicks and conversions, which networks\n              and geographical locations you want your ads to show on, and more.`\n  },\n  {\n    label: 'Create an ad group',\n    description: 'An ad group contains one or more ads which target a shared set of keywords.'\n  },\n  {\n    label: 'Create an ad',\n    description: `Try out different ad text to see what brings in the most customers,\n              and learn how to enhance your ads using features like ad extensions.\n              If you run into any problems with your ads, find out how to tell if\n              they're running and how to resolve approval issues.`\n  }\n];\n\n// ==============================|| STEPPER - VERTICAL ||============================== //\n\nexport default function VerticalLinearStepper() {\n  const [activeStep, setActiveStep] = useState(0);\n\n  const handleNext = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  const handleBack = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  const handleReset = () => setActiveStep(0);\n\n  const verticalStepperCodeString = `// VerticalLinearStepper.tsx\n<Stepper activeStep={activeStep} orientation=\"vertical\">\n  {steps.map((step, index) => (\n    <Step key={step.label}>\n      <StepLabel optional={index === 2 ? <Typography variant=\"caption\">Last step</Typography> : null}>{step.label}</StepLabel>\n      <StepContent>\n        <Typography>{step.description}</Typography>\n        <Box sx={{ mb: 2 }}>\n          <div>\n            <Button\n              variant=\"contained\"\n              onClick={handleNext}\n              sx={{ mt: 1, mr: 1 }}\n              color={index === steps.length - 1 ? 'success' : 'primary'}\n            >\n              {index === steps.length - 1 ? 'Finish' : 'Continue'}\n            </Button>\n            <Button disabled={index === 0} onClick={handleBack} sx={{ mt: 1, mr: 1 }}>\n              Back\n            </Button>\n          </div>\n        </Box>\n      </StepContent>\n    </Step>\n  ))}\n</Stepper>\n{activeStep === steps.length && (\n  <Box sx={{ pt: 2 }}>\n    <Typography sx={{ color: 'success.main' }}>All steps completed - you&apos;re finished</Typography>\n    <Button size=\"small\" variant=\"contained\" color=\"error\" onClick={handleReset} sx={{ mt: 2, mr: 1 }}>\n      Reset\n    </Button>\n  </Box>\n)}`;\n\n  return (\n    <MainCard title=\"Vertical\" codeString={verticalStepperCodeString}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((step, index) => (\n          <Step key={step.label}>\n            <StepLabel optional={index === 2 ? <Typography variant=\"caption\">Last step</Typography> : null}>{step.label}</StepLabel>\n            <StepContent>\n              <Typography>{step.description}</Typography>\n              <Box sx={{ mb: 2 }}>\n                <div>\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleNext}\n                    sx={{ mt: 1, mr: 1 }}\n                    color={index === steps.length - 1 ? 'success' : 'primary'}\n                  >\n                    {index === steps.length - 1 ? 'Finish' : 'Continue'}\n                  </Button>\n                  <Button disabled={index === 0} onClick={handleBack} sx={{ mt: 1, mr: 1 }}>\n                    Back\n                  </Button>\n                </div>\n              </Box>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Box sx={{ pt: 2 }}>\n          <Typography sx={{ color: 'success.main' }}>All steps completed - you&apos;re finished</Typography>\n          <Button size=\"small\" variant=\"contained\" color=\"error\" onClick={handleReset} sx={{ mt: 2, mr: 1 }}>\n            Reset\n          </Button>\n        </Box>\n      )}\n    </MainCard>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}