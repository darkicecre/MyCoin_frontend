{"ast":null,"code":"var _jsxFileName = \"/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/dashboard/default/IncomeAreaChart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // material-ui\n\nimport { useTheme } from '@mui/material/styles'; // third-party\n\nimport ReactApexChart from 'react-apexcharts'; // project import\n\nimport useConfig from 'hooks/useConfig'; // chart options\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst areaChartOptions = {\n  chart: {\n    height: 450,\n    type: 'area',\n    toolbar: {\n      show: false\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 2\n  },\n  grid: {\n    strokeDashArray: 0\n  }\n}; // ==============================|| INCOME AREA CHART ||============================== //\n\nconst IncomeAreaChart = _ref => {\n  _s();\n\n  let {\n    slot\n  } = _ref;\n  const theme = useTheme();\n  const {\n    mode\n  } = useConfig();\n  const {\n    primary,\n    secondary\n  } = theme.palette.text;\n  const line = theme.palette.divider;\n  const [options, setOptions] = useState(areaChartOptions);\n  useEffect(() => {\n    setOptions(prevState => ({ ...prevState,\n      colors: [theme.palette.primary.main, theme.palette.primary[700]],\n      xaxis: {\n        categories: slot === 'month' ? ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'] : ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        labels: {\n          style: {\n            colors: [secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary]\n          }\n        },\n        axisBorder: {\n          show: true,\n          color: line\n        },\n        tickAmount: slot === 'month' ? 11 : 7\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: [secondary]\n          }\n        }\n      },\n      grid: {\n        borderColor: line\n      },\n      tooltip: {\n        theme: mode === 'dark' ? 'dark' : 'light'\n      }\n    }));\n  }, [mode, primary, secondary, line, theme, slot]);\n  const [series, setSeries] = useState([{\n    name: 'Page Views',\n    data: [0, 86, 28, 115, 48, 210, 136]\n  }, {\n    name: 'Sessions',\n    data: [0, 43, 14, 56, 24, 105, 68]\n  }]);\n  useEffect(() => {\n    setSeries([{\n      name: 'Page Views',\n      data: slot === 'month' ? [76, 85, 101, 98, 87, 105, 91, 114, 94, 86, 115, 35] : [31, 40, 28, 51, 42, 109, 100]\n    }, {\n      name: 'Sessions',\n      data: slot === 'month' ? [110, 60, 150, 35, 60, 36, 26, 45, 65, 52, 53, 41] : [11, 32, 45, 32, 34, 52, 41]\n    }]);\n  }, [slot]);\n  return /*#__PURE__*/_jsxDEV(ReactApexChart, {\n    options: options,\n    series: series,\n    type: \"area\",\n    height: 450\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 10\n  }, this);\n};\n\n_s(IncomeAreaChart, \"lr+mR3LG+fK7znMLKiTO/YN+yCE=\", false, function () {\n  return [useTheme, useConfig];\n});\n\n_c = IncomeAreaChart;\nexport default IncomeAreaChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"IncomeAreaChart\");","map":{"version":3,"names":["useState","useEffect","useTheme","ReactApexChart","useConfig","areaChartOptions","chart","height","type","toolbar","show","dataLabels","enabled","stroke","curve","width","grid","strokeDashArray","IncomeAreaChart","slot","theme","mode","primary","secondary","palette","text","line","divider","options","setOptions","prevState","colors","main","xaxis","categories","labels","style","axisBorder","color","tickAmount","yaxis","borderColor","tooltip","series","setSeries","name","data"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/sections/dashboard/default/IncomeAreaChart.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\n\n// third-party\nimport ReactApexChart, { Props as ChartProps } from 'react-apexcharts';\n\n// project import\nimport useConfig from 'hooks/useConfig';\n\n// chart options\nconst areaChartOptions = {\n  chart: {\n    height: 450,\n    type: 'area',\n    toolbar: {\n      show: false\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 2\n  },\n  grid: {\n    strokeDashArray: 0\n  }\n};\n\n// ==============================|| INCOME AREA CHART ||============================== //\n\ninterface Props {\n  slot: string;\n}\n\nconst IncomeAreaChart = ({ slot }: Props) => {\n  const theme = useTheme();\n  const { mode } = useConfig();\n\n  const { primary, secondary } = theme.palette.text;\n  const line = theme.palette.divider;\n\n  const [options, setOptions] = useState<ChartProps>(areaChartOptions);\n\n  useEffect(() => {\n    setOptions((prevState) => ({\n      ...prevState,\n      colors: [theme.palette.primary.main, theme.palette.primary[700]],\n      xaxis: {\n        categories:\n          slot === 'month'\n            ? ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n            : ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        labels: {\n          style: {\n            colors: [\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary,\n              secondary\n            ]\n          }\n        },\n        axisBorder: {\n          show: true,\n          color: line\n        },\n        tickAmount: slot === 'month' ? 11 : 7\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: [secondary]\n          }\n        }\n      },\n      grid: {\n        borderColor: line\n      },\n      tooltip: {\n        theme: mode === 'dark' ? 'dark' : 'light'\n      }\n    }));\n  }, [mode, primary, secondary, line, theme, slot]);\n\n  const [series, setSeries] = useState([\n    {\n      name: 'Page Views',\n      data: [0, 86, 28, 115, 48, 210, 136]\n    },\n    {\n      name: 'Sessions',\n      data: [0, 43, 14, 56, 24, 105, 68]\n    }\n  ]);\n\n  useEffect(() => {\n    setSeries([\n      {\n        name: 'Page Views',\n        data: slot === 'month' ? [76, 85, 101, 98, 87, 105, 91, 114, 94, 86, 115, 35] : [31, 40, 28, 51, 42, 109, 100]\n      },\n      {\n        name: 'Sessions',\n        data: slot === 'month' ? [110, 60, 150, 35, 60, 36, 26, 45, 65, 52, 53, 41] : [11, 32, 45, 32, 34, 52, 41]\n      }\n    ]);\n  }, [slot]);\n\n  return <ReactApexChart options={options} series={series} type=\"area\" height={450} />;\n};\n\nexport default IncomeAreaChart;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,SAASC,QAAT,QAAyB,sBAAzB,C,CAEA;;AACA,OAAOC,cAAP,MAAoD,kBAApD,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,iBAAtB,C,CAEA;;;AACA,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE;IACLC,MAAM,EAAE,GADH;IAELC,IAAI,EAAE,MAFD;IAGLC,OAAO,EAAE;MACPC,IAAI,EAAE;IADC;EAHJ,CADgB;EAQvBC,UAAU,EAAE;IACVC,OAAO,EAAE;EADC,CARW;EAWvBC,MAAM,EAAE;IACNC,KAAK,EAAE,QADD;IAENC,KAAK,EAAE;EAFD,CAXe;EAevBC,IAAI,EAAE;IACJC,eAAe,EAAE;EADb;AAfiB,CAAzB,C,CAoBA;;AAMA,MAAMC,eAAe,GAAG,QAAqB;EAAA;;EAAA,IAApB;IAAEC;EAAF,CAAoB;EAC3C,MAAMC,KAAK,GAAGlB,QAAQ,EAAtB;EACA,MAAM;IAAEmB;EAAF,IAAWjB,SAAS,EAA1B;EAEA,MAAM;IAAEkB,OAAF;IAAWC;EAAX,IAAyBH,KAAK,CAACI,OAAN,CAAcC,IAA7C;EACA,MAAMC,IAAI,GAAGN,KAAK,CAACI,OAAN,CAAcG,OAA3B;EAEA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAAaK,gBAAb,CAAtC;EAEAJ,SAAS,CAAC,MAAM;IACd4B,UAAU,CAAEC,SAAD,KAAgB,EACzB,GAAGA,SADsB;MAEzBC,MAAM,EAAE,CAACX,KAAK,CAACI,OAAN,CAAcF,OAAd,CAAsBU,IAAvB,EAA6BZ,KAAK,CAACI,OAAN,CAAcF,OAAd,CAAsB,GAAtB,CAA7B,CAFiB;MAGzBW,KAAK,EAAE;QACLC,UAAU,EACRf,IAAI,KAAK,OAAT,GACI,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CADJ,GAEI,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAJD;QAKLgB,MAAM,EAAE;UACNC,KAAK,EAAE;YACLL,MAAM,EAAE,CACNR,SADM,EAENA,SAFM,EAGNA,SAHM,EAINA,SAJM,EAKNA,SALM,EAMNA,SANM,EAONA,SAPM,EAQNA,SARM,EASNA,SATM,EAUNA,SAVM,EAWNA,SAXM,EAYNA,SAZM;UADH;QADD,CALH;QAuBLc,UAAU,EAAE;UACV3B,IAAI,EAAE,IADI;UAEV4B,KAAK,EAAEZ;QAFG,CAvBP;QA2BLa,UAAU,EAAEpB,IAAI,KAAK,OAAT,GAAmB,EAAnB,GAAwB;MA3B/B,CAHkB;MAgCzBqB,KAAK,EAAE;QACLL,MAAM,EAAE;UACNC,KAAK,EAAE;YACLL,MAAM,EAAE,CAACR,SAAD;UADH;QADD;MADH,CAhCkB;MAuCzBP,IAAI,EAAE;QACJyB,WAAW,EAAEf;MADT,CAvCmB;MA0CzBgB,OAAO,EAAE;QACPtB,KAAK,EAAEC,IAAI,KAAK,MAAT,GAAkB,MAAlB,GAA2B;MAD3B;IA1CgB,CAAhB,CAAD,CAAV;EA8CD,CA/CQ,EA+CN,CAACA,IAAD,EAAOC,OAAP,EAAgBC,SAAhB,EAA2BG,IAA3B,EAAiCN,KAAjC,EAAwCD,IAAxC,CA/CM,CAAT;EAiDA,MAAM,CAACwB,MAAD,EAASC,SAAT,IAAsB5C,QAAQ,CAAC,CACnC;IACE6C,IAAI,EAAE,YADR;IAEEC,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,GAAZ,EAAiB,EAAjB,EAAqB,GAArB,EAA0B,GAA1B;EAFR,CADmC,EAKnC;IACED,IAAI,EAAE,UADR;IAEEC,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,GAApB,EAAyB,EAAzB;EAFR,CALmC,CAAD,CAApC;EAWA7C,SAAS,CAAC,MAAM;IACd2C,SAAS,CAAC,CACR;MACEC,IAAI,EAAE,YADR;MAEEC,IAAI,EAAE3B,IAAI,KAAK,OAAT,GAAmB,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,EAAc,EAAd,EAAkB,EAAlB,EAAsB,GAAtB,EAA2B,EAA3B,EAA+B,GAA/B,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,GAA5C,EAAiD,EAAjD,CAAnB,GAA0E,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,GAArB,EAA0B,GAA1B;IAFlF,CADQ,EAKR;MACE0B,IAAI,EAAE,UADR;MAEEC,IAAI,EAAE3B,IAAI,KAAK,OAAT,GAAmB,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV,EAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,EAA/C,CAAnB,GAAwE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;IAFhF,CALQ,CAAD,CAAT;EAUD,CAXQ,EAWN,CAACA,IAAD,CAXM,CAAT;EAaA,oBAAO,QAAC,cAAD;IAAgB,OAAO,EAAES,OAAzB;IAAkC,MAAM,EAAEe,MAA1C;IAAkD,IAAI,EAAC,MAAvD;IAA8D,MAAM,EAAE;EAAtE;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAnFD;;GAAMzB,e;UACUhB,Q,EACGE,S;;;KAFbc,e;AAqFN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}