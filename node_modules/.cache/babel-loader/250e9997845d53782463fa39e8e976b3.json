{"ast":null,"code":"// material-ui\n// project import\nimport getColors from 'utils/getColors'; // types\n\n// ==============================|| CHIP - COLORS ||============================== //\nfunction getColor(_ref) {\n  let {\n    color,\n    theme\n  } = _ref;\n  const colors = getColors(theme, color);\n  const {\n    dark\n  } = colors;\n  return {\n    '&.Mui-focusVisible': {\n      outline: `2px solid ${dark}`,\n      outlineOffset: 2\n    }\n  };\n}\n\nfunction getColorStyle(_ref2) {\n  let {\n    color,\n    theme\n  } = _ref2;\n  const colors = getColors(theme, color);\n  const {\n    light,\n    lighter,\n    main\n  } = colors;\n  return {\n    color: main,\n    backgroundColor: lighter,\n    borderColor: light,\n    '& .MuiChip-deleteIcon': {\n      color: main,\n      '&:hover': {\n        color: light\n      }\n    }\n  };\n} // ==============================|| OVERRIDES - CHIP ||============================== //\n\n\nexport default function Chip(theme) {\n  const defaultLightChip = getColorStyle({\n    color: 'secondary',\n    theme\n  });\n  return {\n    MuiChip: {\n      styleOverrides: {\n        root: {\n          borderRadius: 4,\n          '&:active': {\n            boxShadow: 'none'\n          },\n          '&.MuiChip-colorPrimary': getColor({\n            color: 'primary',\n            theme\n          }),\n          '&.MuiChip-colorSecondary': getColor({\n            color: 'secondary',\n            theme\n          }),\n          '&.MuiChip-colorError': getColor({\n            color: 'error',\n            theme\n          }),\n          '&.MuiChip-colorInfo': getColor({\n            color: 'info',\n            theme\n          }),\n          '&.MuiChip-colorSuccess': getColor({\n            color: 'success',\n            theme\n          }),\n          '&.MuiChip-colorWarning': getColor({\n            color: 'warning',\n            theme\n          })\n        },\n        sizeLarge: {\n          fontSize: '1rem',\n          height: 40\n        },\n        light: { ...defaultLightChip,\n          '&.MuiChip-lightPrimary': getColorStyle({\n            color: 'primary',\n            theme\n          }),\n          '&.MuiChip-lightSecondary': getColorStyle({\n            color: 'secondary',\n            theme\n          }),\n          '&.MuiChip-lightError': getColorStyle({\n            color: 'error',\n            theme\n          }),\n          '&.MuiChip-lightInfo': getColorStyle({\n            color: 'info',\n            theme\n          }),\n          '&.MuiChip-lightSuccess': getColorStyle({\n            color: 'success',\n            theme\n          }),\n          '&.MuiChip-lightWarning': getColorStyle({\n            color: 'warning',\n            theme\n          })\n        },\n        combined: {\n          border: '1px solid',\n          ...defaultLightChip,\n          '&.MuiChip-combinedPrimary': getColorStyle({\n            color: 'primary',\n            theme\n          }),\n          '&.MuiChip-combinedSecondary': getColorStyle({\n            color: 'secondary',\n            theme\n          }),\n          '&.MuiChip-combinedError': getColorStyle({\n            color: 'error',\n            theme\n          }),\n          '&.MuiChip-combinedInfo': getColorStyle({\n            color: 'info',\n            theme\n          }),\n          '&.MuiChip-combinedSuccess': getColorStyle({\n            color: 'success',\n            theme\n          }),\n          '&.MuiChip-combinedWarning': getColorStyle({\n            color: 'warning',\n            theme\n          })\n        }\n      }\n    }\n  };\n}\n_c = Chip;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chip\");","map":{"version":3,"names":["getColors","getColor","color","theme","colors","dark","outline","outlineOffset","getColorStyle","light","lighter","main","backgroundColor","borderColor","Chip","defaultLightChip","MuiChip","styleOverrides","root","borderRadius","boxShadow","sizeLarge","fontSize","height","combined","border"],"sources":["/home/hieu/Desktop/MyCoin_front/MyCoin_frontend/src/themes/overrides/Chip.ts"],"sourcesContent":["// material-ui\nimport { Theme } from '@mui/material/styles';\n\n// project import\nimport getColors from 'utils/getColors';\n\n// types\nimport { ExtendedStyleProps } from 'types/extended';\n\n// ==============================|| CHIP - COLORS ||============================== //\n\nfunction getColor({ color, theme }: ExtendedStyleProps) {\n  const colors = getColors(theme, color);\n  const { dark } = colors;\n\n  return {\n    '&.Mui-focusVisible': {\n      outline: `2px solid ${dark}`,\n      outlineOffset: 2\n    }\n  };\n}\n\nfunction getColorStyle({ color, theme }: ExtendedStyleProps) {\n  const colors = getColors(theme, color);\n  const { light, lighter, main } = colors;\n\n  return {\n    color: main,\n    backgroundColor: lighter,\n    borderColor: light,\n    '& .MuiChip-deleteIcon': {\n      color: main,\n      '&:hover': {\n        color: light\n      }\n    }\n  };\n}\n\n// ==============================|| OVERRIDES - CHIP ||============================== //\n\nexport default function Chip(theme: Theme) {\n  const defaultLightChip = getColorStyle({ color: 'secondary', theme });\n  return {\n    MuiChip: {\n      styleOverrides: {\n        root: {\n          borderRadius: 4,\n          '&:active': {\n            boxShadow: 'none'\n          },\n          '&.MuiChip-colorPrimary': getColor({ color: 'primary', theme }),\n          '&.MuiChip-colorSecondary': getColor({ color: 'secondary', theme }),\n          '&.MuiChip-colorError': getColor({ color: 'error', theme }),\n          '&.MuiChip-colorInfo': getColor({ color: 'info', theme }),\n          '&.MuiChip-colorSuccess': getColor({ color: 'success', theme }),\n          '&.MuiChip-colorWarning': getColor({ color: 'warning', theme })\n        },\n        sizeLarge: {\n          fontSize: '1rem',\n          height: 40\n        },\n        light: {\n          ...defaultLightChip,\n          '&.MuiChip-lightPrimary': getColorStyle({ color: 'primary', theme }),\n          '&.MuiChip-lightSecondary': getColorStyle({ color: 'secondary', theme }),\n          '&.MuiChip-lightError': getColorStyle({ color: 'error', theme }),\n          '&.MuiChip-lightInfo': getColorStyle({ color: 'info', theme }),\n          '&.MuiChip-lightSuccess': getColorStyle({ color: 'success', theme }),\n          '&.MuiChip-lightWarning': getColorStyle({ color: 'warning', theme })\n        },\n        combined: {\n          border: '1px solid',\n          ...defaultLightChip,\n          '&.MuiChip-combinedPrimary': getColorStyle({ color: 'primary', theme }),\n          '&.MuiChip-combinedSecondary': getColorStyle({ color: 'secondary', theme }),\n          '&.MuiChip-combinedError': getColorStyle({ color: 'error', theme }),\n          '&.MuiChip-combinedInfo': getColorStyle({ color: 'info', theme }),\n          '&.MuiChip-combinedSuccess': getColorStyle({ color: 'success', theme }),\n          '&.MuiChip-combinedWarning': getColorStyle({ color: 'warning', theme })\n        }\n      }\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}